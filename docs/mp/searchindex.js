Search.setIndex({"docnames": ["README.md", "boxes", "chicago_coffee_shops", "creating_model", "cutstock", "diet", "docplex.mp.basic", "docplex.mp.callbacks.cb_mixin", "docplex.mp.conflict_refiner", "docplex.mp.constants", "docplex.mp.constr", "docplex.mp.context", "docplex.mp.dvar", "docplex.mp.environment", "docplex.mp.error_handler", "docplex.mp.kpi", "docplex.mp.linear", "docplex.mp.model", "docplex.mp.model_reader", "docplex.mp.model_stats", "docplex.mp.params.parameters", "docplex.mp.priority", "docplex.mp.progress", "docplex.mp.publish", "docplex.mp.pwl", "docplex.mp.quad", "docplex.mp.relax_linear", "docplex.mp.relaxer", "docplex.mp.sdetails", "docplex.mp.solution", "docplex.mp.sosvarset", "docplex.mp.vartype", "docplex.mp.with_funcs", "docplex.util.csv_utils", "docplex.util.environment", "getting_started", "getting_started_python", "index", "lagrangian_relaxation", "load_balancing", "marketing_campaign", "mining_pandas", "nurses", "nurses_multiobj", "nurses_pandas", "nurses_scheduling", "oil_blending", "production", "refman", "samples", "sport_scheduling", "sports_scheduling", "support", "troubleshooting", "ucp_pandas", "warehouse"], "filenames": ["README.md.rst", "boxes.rst", "chicago_coffee_shops.rst", "creating_model.rst", "cutstock.rst", "diet.rst", "docplex.mp.basic.rst", "docplex.mp.callbacks.cb_mixin.rst", "docplex.mp.conflict_refiner.rst", "docplex.mp.constants.rst", "docplex.mp.constr.rst", "docplex.mp.context.rst", "docplex.mp.dvar.rst", "docplex.mp.environment.rst", "docplex.mp.error_handler.rst", "docplex.mp.kpi.rst", "docplex.mp.linear.rst", "docplex.mp.model.rst", "docplex.mp.model_reader.rst", "docplex.mp.model_stats.rst", "docplex.mp.params.parameters.rst", "docplex.mp.priority.rst", "docplex.mp.progress.rst", "docplex.mp.publish.rst", "docplex.mp.pwl.rst", "docplex.mp.quad.rst", "docplex.mp.relax_linear.rst", "docplex.mp.relaxer.rst", "docplex.mp.sdetails.rst", "docplex.mp.solution.rst", "docplex.mp.sosvarset.rst", "docplex.mp.vartype.rst", "docplex.mp.with_funcs.rst", "docplex.util.csv_utils.rst", "docplex.util.environment.rst", "getting_started.rst", "getting_started_python.rst", "index.rst", "lagrangian_relaxation.rst", "load_balancing.rst", "marketing_campaign.rst", "mining_pandas.rst", "nurses.rst", "nurses_multiobj.rst", "nurses_pandas.rst", "nurses_scheduling.rst", "oil_blending.rst", "production.rst", "refman.rst", "samples.rst", "sport_scheduling.rst", "sports_scheduling.rst", "support.rst", "troubleshooting.rst", "ucp_pandas.rst", "warehouse.rst"], "titles": ["README.md", "Objects in boxes", "Finding optimal locations of new stores", "Creating a mathematical programming model", "cutstock.py", "diet.py", "docplex.mp.basic module", "docplex.mp.callbacks.cb_mixin module", "docplex.mp.conflict_refiner module", "docplex.mp.constants module", "docplex.mp.constr module", "docplex.mp.context module", "docplex.mp.dvar module", "docplex.mp.environment module", "docplex.mp.error_handler module", "docplex.mp.kpi module", "docplex.mp.linear module", "docplex.mp.model module", "docplex.mp.model_reader module", "docplex.mp.model_stats module", "docplex.mp.params.parameters module", "docplex.mp.priority module", "docplex.mp.progress module", "docplex.mp.publish module", "docplex.mp.pwl module", "docplex.mp.quad module", "docplex.mp.relax_linear module", "docplex.mp.relaxer module", "docplex.mp.sdetails module", "docplex.mp.solution module", "docplex.mp.sosvarset module", "docplex.mp.vartype module", "docplex.mp.with_funcs module", "docplex.util.csv_utils module", "docplex.util.environment module", "Setting up an optimization engine", "Setting up a Python environment", "Mathematical Programming Modeling for Python (DOcplex.MP)", "lagrangian_relaxation.py", "load_balancing.py", "How to make targeted offers to customers?", "Optimizing mining operations", "nurses.py", "nurses_multiobj.py", "The Nurse Assignment Problem", "The Nurses Model", "Maximizing the profit of an oil company", "production.py", "<strong>docplex.mp</strong> reference manual", "Examples of mathematical programming", "sport_scheduling.py", "Use decision optimization to help a sports league schedule its games", "IBM\u00ae Elite Support for DOcplex", "Troubleshooting", "The Unit Commitment Problem (UCP)", "The Warehouse Problem"], "terms": {"ibm": [0, 1, 2, 4, 5, 9, 28, 29, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54], "reg": [0, 35, 36, 37], "decis": [0, 4, 5, 6, 12, 15, 16, 17, 19, 25, 29, 30, 31, 34, 35, 36, 38, 39, 47, 49, 50, 52], "optim": [0, 3, 5, 8, 9, 17, 28, 34, 36, 38, 39, 42, 43, 49, 50, 52, 53, 55], "model": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 42, 43, 47, 48, 49, 50, 52], "python": [0, 1, 2, 3, 7, 12, 13, 17, 34, 35, 41, 44, 45, 46, 49, 51, 52, 53, 54, 55], "docplex": [0, 3, 4, 5, 35, 38, 39, 40, 42, 43, 47, 49, 50, 53], "welcom": [0, 37], "licens": [0, 1, 2, 4, 5, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54], "under": [0, 4, 5, 17, 29, 34, 37, 38, 39, 42, 43, 44, 47, 50], "apach": [0, 4, 5, 37, 38, 39, 42, 43, 47, 50], "v2": [0, 25], "0": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 17, 20, 22, 25, 27, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55], "With": [0, 1, 2, 17, 37, 41, 44, 45, 51, 54], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55], "librari": [0, 13, 28, 37, 49, 53], "you": [0, 1, 2, 11, 12, 13, 16, 17, 22, 26, 28, 34, 35, 36, 37, 40, 41, 44, 45, 46, 49, 51, 52, 53, 54], "can": [0, 3, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 24, 27, 29, 32, 34, 35, 36, 37, 38, 42, 43, 47, 49, 50, 52, 55], "quickli": [0, 37], "easili": [0, 2, 37, 41, 44], "add": [0, 1, 4, 5, 10, 16, 17, 24, 29, 34, 37, 41, 43, 44, 54], "power": [0, 37, 49, 54], "your": [0, 1, 2, 11, 13, 22, 34, 36, 37, 40, 41, 44, 45, 46, 49, 51, 52, 53, 54], "applic": [0, 2, 24, 37, 40, 46, 49, 52], "need": [0, 1, 2, 17, 22, 35, 36, 37, 40, 41, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55], "ilog": [0, 1, 2, 9, 28, 29, 37, 40, 41, 44, 45, 46, 50, 54], "cplex": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 17, 18, 20, 22, 28, 29, 31, 34, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54], "studio": [0, 1, 2, 34, 36, 37, 40, 41, 44, 45, 46, 50, 51, 54], "solv": [0, 4, 5, 8, 10, 11, 12, 15, 16, 17, 18, 22, 23, 27, 28, 29, 32, 34, 35, 37, 38, 39, 42, 43, 47, 49, 50], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55], "compos": [0, 2], "2": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 22, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 42, 43, 47, 49, 50, 53, 55], "modul": [0, 37, 41, 48, 51, 55], "namespac": 0, "mp": [0, 1, 2, 3, 4, 5, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55], "cp": [0, 2, 35, 40, 44, 46, 51, 54], "requir": [0, 1, 2, 3, 5, 15, 17, 18, 40, 42, 43, 46, 49, 51, 55], "v12": [0, 35, 53], "10": [0, 1, 3, 4, 5, 9, 10, 17, 22, 29, 38, 40, 41, 42, 43, 44, 45, 46, 49, 51, 54, 55], "later": [0, 35, 54, 55], "instal": [0, 1, 2, 13, 17, 22, 34, 40, 41, 44, 45, 46, 49, 51, 54, 55], "machin": [0, 34, 35], "numpi": [0, 13, 17, 36, 37, 46, 51], "friendli": [0, 37, 41], "pip": [0, 2, 41, 44, 45, 53, 54, 55], "get": [0, 1, 2, 4, 6, 7, 10, 12, 16, 17, 20, 22, 25, 28, 29, 30, 34, 40, 41, 44, 45, 46, 51, 53, 54, 55], "document": [0, 1, 2, 9, 17, 28, 35, 36, 40, 41, 44, 45, 46, 51, 54], "exampl": [0, 3, 5, 7, 9, 10, 12, 14, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 32, 35, 37, 38, 39, 40, 42, 43, 50, 53, 55], "latest": [0, 17, 22, 35], "http": [0, 1, 2, 4, 5, 9, 28, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54], "ibmdecisionoptim": [0, 35, 36, 44, 45], "github": [0, 36, 44, 45, 49], "io": [0, 44, 45], "doc": [0, 17], "archiv": [0, 49], "23": [0, 5, 17, 40, 41, 42, 43, 44, 45, 54], "222": [0, 54], "22": [0, 17, 32, 40, 42, 43, 44, 45, 54, 55], "213": 0, "21": [0, 5, 17, 32, 40, 42, 43, 44, 45, 54], "207": 0, "20": [0, 4, 17, 28, 29, 40, 41, 42, 43, 44, 45, 47, 54, 55], "204": 0, "19": [0, 1, 17, 34, 40, 42, 43, 44, 45, 54], "202": 0, "18": [0, 1, 5, 40, 41, 42, 43, 44, 45, 54], "200": [0, 40, 47, 54], "16": [0, 5, 17, 35, 40, 42, 43, 44, 45, 46, 54], "195": [0, 36], "com": [0, 1, 2, 9, 28, 29, 37, 39, 40, 41, 44, 45, 46, 49, 51, 52, 54], "edit": [0, 1, 4, 35, 36, 37, 40, 41, 44, 46, 50, 51, 54], "free": [0, 1, 2, 17, 35, 36, 37, 40, 41, 44, 45, 46, 51, 54], "commun": [0, 1, 35, 37, 40, 41, 46, 50, 51, 54], "www": [0, 2, 4, 5, 9, 28, 29, 38, 39, 42, 43, 47, 50], "account": [0, 1, 2, 12, 35, 36, 40, 41, 44, 45, 46, 51, 54], "u": [0, 1, 2, 4, 5, 19, 37, 39, 40, 41, 44, 45, 46, 51, 52, 54], "en": 0, "signup": 0, "formid": 0, "urx": 0, "20028": 0, "limit": [0, 1, 2, 3, 5, 17, 28, 34, 35, 40, 42, 43, 44, 45, 46, 50, 51, 54, 55], "capabl": [0, 35], "term": [0, 16, 17, 25, 41, 42, 43, 44, 45, 46, 49, 55], "problem": [0, 3, 4, 5, 9, 10, 12, 17, 28, 29, 32, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50], "size": [0, 4, 7, 17, 28, 29, 35, 40, 46, 54], "faculti": [0, 35], "member": [0, 5, 8, 11, 17, 35, 44], "research": [0, 35], "profession": [0, 35], "accredit": [0, 35], "institut": [0, 35], "access": [0, 3, 15, 17, 22, 27, 29, 34, 35, 36, 52], "an": [0, 3, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 42, 43, 49, 50, 52, 53, 55], "unlimit": [0, 47, 50], "version": [0, 1, 2, 4, 5, 8, 9, 10, 11, 13, 17, 18, 22, 28, 29, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 53, 54, 55], "through": [0, 1, 2, 12, 16, 22, 27, 40, 41, 44, 45, 46, 51, 52, 54], "academ": [0, 35], "initi": [0, 4, 5, 17, 26, 32, 35, 38, 39, 41, 42, 43, 44, 46, 47, 50], "biz": 0, "student": 0, "depend": [0, 12, 17, 20, 28, 33, 34, 35, 36, 40, 44, 45, 46, 50, 51, 54], "These": [0, 20, 40, 41, 44, 53], "third": [0, 2, 34, 44, 51, 55], "parti": 0, "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55], "automat": [0, 9, 11, 17, 34, 35, 36, 41, 46, 55], "futur": [0, 1, 2, 40, 41, 44, 45, 46, 49, 51, 54], "pypi": [0, 1, 2, 35, 36, 40, 41, 44, 45, 46, 51, 54], "org": [0, 1, 2, 4, 5, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54], "request": [0, 2, 34], "six": [0, 2, 55], "certifi": 0, "deliv": [0, 52, 53], "januari": [0, 4, 5, 38, 39, 42, 43, 47, 50, 51], "2004": [0, 4, 5, 38, 39, 42, 43, 47, 50], "see": [0, 1, 2, 7, 9, 11, 12, 17, 20, 22, 28, 29, 34, 35, 36, 40, 41, 44, 45, 46, 51, 54, 55], "txt": [0, 34], "tutori": [1, 2, 40, 41, 44, 45, 46, 51, 54], "includ": [1, 2, 8, 10, 11, 17, 20, 33, 34, 35, 36, 40, 41, 44, 45, 46, 49, 51, 54, 55], "everyth": [1, 2, 17, 40, 41, 44, 45, 46, 51, 54], "build": [1, 2, 4, 5, 7, 8, 17, 18, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54], "mathemat": [1, 2, 11, 35, 36, 40, 41, 44, 45, 46, 51, 54], "program": [1, 2, 4, 5, 8, 11, 29, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54], "its": [1, 2, 8, 9, 10, 12, 16, 17, 18, 20, 21, 22, 29, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54, 55], "cloud": [1, 2, 18, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 50, 51, 54], "when": [1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 24, 26, 27, 28, 29, 32, 34, 35, 36, 40, 41, 44, 45, 46, 51, 54, 55], "finish": [1, 2, 17, 22, 34, 40, 41, 44, 45, 46, 51, 54], "ll": [1, 2, 35, 40, 41, 44, 45, 46, 51, 54, 55], "have": [1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 22, 24, 26, 29, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54, 55], "foundat": [1, 2, 40, 41, 44, 45, 46, 51, 54], "knowledg": [1, 2, 40, 41, 44, 45, 46, 51, 54], "analyt": [1, 2, 40, 41, 44, 45, 46, 51, 54], "notebook": [1, 2, 35, 36, 40, 41, 44, 45, 46, 49, 51, 54], "part": [1, 2, 4, 7, 8, 9, 10, 12, 16, 25, 34, 36, 40, 41, 42, 43, 44, 45, 46, 51, 54], "It": [1, 2, 7, 8, 11, 17, 22, 27, 29, 34, 40, 41, 44, 45, 46, 51, 54], "either": [1, 2, 8, 9, 15, 16, 17, 20, 22, 24, 25, 27, 29, 32, 40, 41, 44, 45, 46, 47, 49, 51, 54], "watson": [1, 2, 34, 35, 36, 37, 40, 41, 44, 45, 46, 51, 54], "sign": [1, 2, 35, 40, 41, 44, 45, 46, 51, 54], "start": [1, 2, 3, 8, 9, 17, 22, 29, 33, 35, 36, 38, 40, 42, 43, 45, 46, 51, 54], "right": [1, 2, 7, 10, 40, 41, 44, 45, 46, 49, 51, 54], "awai": [1, 2, 40, 41, 44, 45, 46, 51, 54], "tabl": [1, 2, 3, 11, 33, 34, 40, 41, 44, 45, 46, 51, 54], "content": [1, 2, 5, 34, 40, 41, 44, 45, 46, 51, 54], "we": [1, 2, 17, 24, 36, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55], "wish": [1, 41, 44, 45], "put": [1, 34], "n": [1, 2, 3, 4, 5, 17, 31, 38, 39, 42, 43, 45, 46, 49, 51], "which": [1, 2, 3, 6, 7, 8, 10, 12, 15, 16, 17, 18, 20, 22, 24, 27, 29, 32, 33, 34, 36, 40, 41, 44, 45, 46, 49, 51, 54, 55], "scatter": [1, 54, 55], "plane": [1, 55], "row": [1, 2, 5, 41, 44, 51, 54], "align": [1, 40, 44, 45, 46, 51], "from": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 29, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 55], "left": [1, 7, 10, 17, 29, 34, 40, 41, 44, 45, 46, 51], "x": [1, 2, 3, 4, 7, 10, 12, 16, 17, 24, 25, 32, 34, 36, 45, 54], "axi": [1, 24, 40, 44, 45, 46, 51, 54, 55], "locat": [1, 3, 13, 20, 41, 44, 45, 49, 51, 53, 54, 55], "point": [1, 3, 7, 8, 16, 17, 20, 22, 24, 28, 49, 51, 54, 55], "b_i": 1, "y": [1, 2, 3, 10, 17, 24, 25, 32, 34, 41, 45, 54], "j": [1, 3, 38, 40], "o_j": 1, "want": [1, 17, 23, 24, 26, 36, 40, 41, 44, 45, 49, 54], "find": [1, 9, 17, 22, 35, 41, 42, 43, 44, 45, 49, 54], "arrang": 1, "each": [1, 2, 3, 4, 7, 8, 15, 16, 17, 22, 27, 28, 29, 31, 34, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 54, 55], "contain": [1, 2, 3, 4, 7, 8, 11, 13, 16, 17, 19, 22, 26, 28, 29, 31, 34, 40, 41, 44, 45, 46, 49, 51, 54], "exactli": [1, 2, 17, 50, 55], "one": [1, 2, 3, 4, 7, 9, 10, 11, 17, 20, 22, 23, 25, 26, 28, 29, 31, 34, 36, 40, 41, 42, 43, 44, 45, 49, 50, 51, 54, 55], "store": [1, 4, 6, 11, 17, 22, 29, 34, 40, 41, 44, 45, 46, 50, 51, 54, 55], "total": [1, 2, 4, 5, 17, 19, 20, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 51, 54, 55], "distanc": [1, 49], "storag": [1, 34], "minim": [1, 2, 4, 5, 8, 9, 17, 39, 42, 43, 46, 47, 49, 54, 55], "first": [1, 2, 7, 9, 17, 24, 25, 29, 34, 35, 36, 40, 41, 42, 43, 44, 46, 47, 50, 54, 55], "two": [1, 2, 4, 7, 9, 10, 12, 16, 17, 29, 34, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55], "new": [1, 3, 4, 7, 8, 9, 10, 11, 16, 17, 20, 22, 24, 26, 29, 32, 34, 36, 38, 41, 50, 51, 54], "examin": [1, 8], "cost": [1, 4, 5, 12, 17, 29, 39, 40, 42, 43, 45, 46, 47, 49, 52, 55], "chang": [1, 2, 4, 9, 11, 16, 17, 20, 22, 24, 32, 35, 40, 41, 44, 45, 46, 51, 54], "impos": [1, 46], "assign": [1, 2, 8, 17, 27, 38, 39, 42, 43, 49, 50, 51, 55], "immedi": 1, "Then": [1, 17, 40, 41, 44, 54], "next": [1, 2, 4, 40, 41, 44, 45, 46, 51, 54, 55], "6": [1, 3, 4, 5, 7, 13, 29, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 53, 54, 55], "technologi": [1, 2, 5, 40, 41, 44, 45, 46, 51], "recommend": [1, 2, 40, 41, 44, 45, 46, 51, 54], "action": [1, 2, 40, 41, 44, 45, 46, 51, 54], "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 40, 41, 44, 45, 46, 51, 54], "desir": [1, 2, 40, 41, 44, 45, 46, 51, 54], "outcom": [1, 2, 40, 41, 44, 45, 46, 51, 54], "take": [1, 2, 5, 7, 9, 11, 12, 15, 16, 17, 20, 27, 40, 41, 42, 43, 44, 45, 46, 47, 51, 54, 55], "specif": [1, 2, 4, 17, 20, 22, 29, 34, 40, 41, 44, 45, 46, 49, 51, 54], "scenario": [1, 2, 40, 41, 44, 45, 46, 51, 54], "resourc": [1, 2, 17, 40, 41, 44, 45, 46, 47, 51, 54], "past": [1, 2, 40, 41, 44, 45, 46, 51, 54], "current": [1, 2, 11, 17, 20, 22, 34, 36, 39, 40, 41, 44, 45, 46, 51, 54], "event": [1, 2, 22, 40, 41, 44, 45, 46, 51, 54], "insight": [1, 2, 40, 41, 44, 45, 46, 51, 54], "organ": [1, 2, 35, 40, 41, 44, 45, 46, 51, 54], "make": [1, 2, 4, 9, 17, 25, 41, 44, 45, 46, 51, 54, 55], "better": [1, 2, 9, 40, 41, 44, 45, 46, 51, 54], "greater": [1, 2, 17, 40, 41, 44, 45, 46, 51, 54, 55], "control": [1, 2, 9, 11, 17, 22, 23, 29, 40, 41, 44, 45, 46, 51, 54], "path": [1, 2, 13, 17, 18, 29, 40, 41, 44, 45, 46, 49, 51, 54], "valu": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 51, 54, 55], "synergi": [1, 2, 40, 41, 44, 45, 46, 51, 54], "predict": [1, 2, 40, 41, 44, 45, 46, 51, 54], "analyz": [1, 2, 4, 8, 36, 41, 45, 46, 51, 54], "level": [1, 2, 9, 11, 14, 17, 29, 34, 40, 41, 45, 49, 51, 54], "suggest": [1, 2, 40, 41, 44, 45, 46, 51, 54], "wai": [1, 2, 10, 11, 17, 18, 21, 34, 35, 36, 40, 41, 44, 45, 46, 51, 54, 55], "handl": [1, 2, 17, 22, 34, 40, 41, 44, 45, 46, 51, 54], "situat": [1, 2, 40, 41, 44, 45, 46, 51, 54], "act": [1, 2, 17, 27, 40, 41, 44, 45, 46, 51, 54], "fast": [1, 2, 40, 41, 44, 45, 46, 51, 54], "dynam": [1, 2, 4, 40, 41, 44, 45, 46, 51, 54], "condit": [1, 2, 40, 41, 44, 45, 46, 51, 54], "superior": [1, 2, 40, 41, 44, 45, 46, 51, 54], "uncertain": [1, 2, 40, 41, 44, 45, 46, 51, 54], "environ": [1, 2, 4, 5, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55], "gain": [1, 2, 40, 41, 44, 45, 46, 51, 52, 54], "strong": [1, 2, 40, 41, 44, 45, 46, 51, 54], "competit": [1, 2, 40, 41, 44, 45, 46, 51, 54], "advantag": [1, 2, 40, 41, 44, 45, 46, 51, 52, 54], "autom": [1, 2, 40, 41, 44, 45, 46, 51, 54], "complex": [1, 2, 40, 41, 44, 45, 46, 51, 54], "trade": [1, 2, 40, 41, 44, 45, 46, 51, 54], "off": [1, 2, 17, 34, 40, 41, 44, 45, 46, 51], "manag": [1, 2, 4, 17, 40, 41, 44, 45, 46, 51, 52, 54], "opportun": [1, 2, 40, 41, 44, 45, 46, 51, 54], "mitig": [1, 2, 40, 41, 44, 45, 46, 51, 54], "risk": [1, 2, 39, 40, 41, 44, 45, 46, 49, 51, 54], "proactiv": [1, 2, 40, 41, 44, 45, 46, 51, 54], "updat": [1, 2, 4, 11, 29, 34, 35, 36, 38, 40, 41, 44, 45, 46, 51, 54], "meet": [1, 2, 36, 40, 41, 44, 45, 46, 47, 50, 51, 54], "oper": [1, 2, 3, 8, 9, 10, 11, 12, 16, 17, 18, 20, 25, 27, 29, 34, 36, 40, 44, 45, 46, 49, 51, 54, 55], "goal": [1, 2, 5, 17, 40, 41, 45, 46, 51, 54, 55], "increas": [1, 2, 14, 40, 41, 44, 45, 46, 50, 51, 54], "custom": [1, 2, 3, 7, 17, 22, 23, 41, 44, 45, 46, 47, 49, 51, 54], "loyalti": [1, 2, 40, 41, 44, 45, 46, 51, 54], "prevent": [1, 2, 10, 22, 40, 41, 44, 45, 46, 51, 54, 55], "threat": [1, 2, 40, 41, 44, 45, 46, 51, 54], "fraud": [1, 2, 40, 41, 44, 45, 46, 51, 54], "process": [1, 2, 4, 17, 28, 34, 39, 40, 41, 44, 45, 46, 51, 52, 54], "follow": [1, 2, 3, 4, 10, 11, 13, 17, 28, 34, 35, 36, 40, 41, 44, 45, 46, 49, 51, 54, 55], "code": [1, 2, 3, 7, 11, 17, 20, 22, 28, 31, 34, 40, 41, 44, 45, 46, 51, 53, 54, 55], "The": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 46, 47, 49, 50, 53], "packag": [1, 2, 13, 22, 24, 34, 40, 41, 44, 45, 46, 51, 52, 53, 54], "earlier": [1, 2, 41], "sy": [1, 2, 3, 11, 29, 40, 41, 44, 45, 46, 51, 54], "try": [1, 2, 13, 17, 40, 41, 44, 45, 46, 51, 54, 55], "except": [1, 2, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 28, 29, 32, 34, 40, 41, 44, 45, 46, 51, 54, 55], "rais": [1, 2, 7, 10, 11, 12, 15, 16, 17, 18, 20, 21, 24, 27, 29, 32, 34, 40, 41, 44, 45, 46, 51, 53, 54, 55], "pleas": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "project": [1, 2, 36, 40, 41, 44, 45, 46, 51, 54], "If": [1, 6, 8, 10, 11, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 38, 40, 41, 45, 46, 50, 51, 53, 54], "input": [1, 17, 34, 44, 45, 46, 47, 54], "number": [1, 3, 5, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 22, 24, 25, 27, 28, 29, 34, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 55], "posit": [1, 7, 10, 12, 17, 30, 34, 41, 44, 46, 51, 55], "euclidean": 1, "comput": [1, 8, 9, 15, 16, 17, 20, 22, 24, 27, 29, 36, 37, 40, 41, 42, 43, 46, 54, 55], "between": [1, 3, 7, 9, 10, 16, 17, 22, 24, 34, 41, 44, 45, 49, 50, 55], "math": [1, 17, 36, 49], "sqrt": 1, "15": [1, 5, 17, 29, 38, 40, 42, 43, 44, 45, 51, 54], "box_rang": 1, "rang": [1, 3, 4, 5, 10, 17, 19, 20, 38, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55], "obj_rang": 1, "random": 1, "o_xmax": 1, "o_ymax": 1, "box_coord": 1, "b": [1, 2, 4, 12, 17, 23, 31, 38, 40, 41, 44, 45, 46, 54, 55], "obj_coord": 1, "140": [1, 44, 54, 55], "146": [1, 44, 54], "8": [1, 2, 3, 4, 5, 9, 11, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "132": [1, 44], "14": [1, 17, 38, 40, 42, 43, 44, 45, 46, 51, 54], "53": [1, 41, 54], "28": [1, 42, 43, 44, 45, 54, 55], "137": 1, "13": [1, 17, 29, 40, 42, 43, 44, 45, 46, 51, 54, 55], "7": [1, 2, 3, 5, 7, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53, 54, 55], "95": [1, 40, 41, 44, 54, 55], "12": [1, 5, 13, 17, 38, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54], "68": [1, 44], "9": [1, 3, 4, 5, 13, 17, 35, 38, 40, 41, 42, 43, 44, 45, 47, 51, 53, 54, 55], "102": [1, 17], "116": [1, 54], "11": [1, 2, 5, 8, 17, 40, 41, 42, 43, 44, 45, 49, 51, 54, 55], "29": [1, 41, 42, 43, 44, 45, 54, 55], "89": [1, 44], "141": 1, "matrix": [1, 3, 17, 28, 46], "actual": [1, 2, 29, 32, 34, 44, 46, 55], "squar": [1, 3, 9, 17, 25, 50, 51], "keep": [1, 2, 9, 17, 29, 32, 36, 39, 41, 42, 43, 44, 45, 49, 54, 55], "integ": [1, 2, 3, 6, 7, 9, 10, 12, 16, 17, 19, 20, 22, 28, 29, 30, 31, 34, 40, 41, 42, 43, 44, 45, 46, 51, 54, 55], "doe": [1, 16, 17, 20, 21, 23, 24, 29, 34, 36, 39, 41, 44, 45, 49, 54, 55], "essenc": 1, "o": [1, 34, 40, 44, 45, 46, 54, 55], "dx": 1, "dy": 1, "d2": 1, "env": [1, 2, 7, 33, 34, 41, 44, 45, 51, 54, 55], "print_inform": [1, 2, 3, 5, 8, 13, 17, 19, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "system": [1, 2, 13, 17, 35, 41, 44, 45, 51, 54, 55], "window": [1, 2, 35, 36, 41, 44, 45, 51, 54, 55], "64bit": [1, 2, 13, 41, 44, 45, 51, 54, 55], "c": [1, 2, 4, 5, 10, 12, 17, 18, 23, 29, 31, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54], "local": [1, 2, 8, 11, 13, 17, 18, 22, 29, 34, 35, 41, 44, 45, 49, 51, 53, 54], "python373": [1, 2, 41, 44, 45, 51, 54], "ex": [1, 2, 41, 44, 45, 51, 54], "present": [1, 2, 3, 6, 13, 16, 17, 20, 22, 25, 29, 34, 41, 44, 45, 46, 51, 53, 54, 55], "panda": [1, 2, 13, 17, 23, 29, 34, 36, 37, 40, 41, 46, 49, 51], "25": [1, 2, 4, 5, 40, 41, 42, 43, 44, 45, 46, 49, 51, 54, 55], "all": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 34, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 54, 55], "mdl": [1, 2, 3, 5, 8, 17, 26, 27, 29, 32, 38, 39, 40, 42, 43, 44, 45, 46, 47, 50, 51, 54], "For": [1, 2, 3, 7, 8, 10, 12, 17, 22, 25, 27, 28, 29, 34, 35, 36, 40, 41, 44, 45, 46, 49, 51, 53, 54, 55], "binari": [1, 2, 3, 8, 9, 10, 12, 17, 19, 29, 31, 34, 40, 41, 42, 43, 44, 45, 46, 51, 54, 55], "x_": [1, 51], "equal": [1, 3, 10, 12, 16, 17, 20, 34, 41, 42, 43, 44, 45, 46, 54, 55], "onli": [1, 3, 5, 11, 12, 16, 17, 20, 22, 29, 34, 40, 42, 43, 44, 45, 50, 54, 55], "2d": 1, "binary_var_matrix": [1, 2, 3, 17, 39, 41, 42, 43, 44, 45, 50, 51, 54, 55], "lambda": [1, 4, 5, 17, 41, 44, 45, 47, 50, 51, 54], "ij": [1, 17, 51], "d_": [1, 50], "d": [1, 2, 4, 11, 22, 38, 41, 42, 43, 45, 50, 51, 54, 55], "sum": [1, 2, 3, 4, 5, 9, 16, 17, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "over": [1, 3, 5, 10, 16, 17, 20, 25, 29, 30, 36, 41, 42, 43, 44, 51, 54, 55], "both": [1, 7, 10, 17, 25, 36, 41, 42, 43, 44, 45, 54, 55], "column": [1, 2, 4, 23, 28, 29, 40, 41, 44, 45, 46, 51, 54], "must": [1, 2, 3, 4, 7, 10, 12, 15, 17, 18, 22, 24, 29, 30, 31, 34, 35, 36, 41, 44, 45, 46, 50, 54, 55], "result": [1, 4, 5, 8, 17, 23, 29, 34, 38, 39, 40, 42, 43, 45, 47, 49, 50, 51, 54], "time": [1, 2, 4, 5, 7, 9, 16, 17, 20, 22, 28, 34, 39, 41, 42, 43, 46, 49, 50, 51, 54, 55], "per": [1, 4, 5, 8, 34, 38, 40, 41, 42, 43, 45, 46, 51, 55], "add_constraint": [1, 2, 3, 4, 17, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "225": 1, "continu": [1, 2, 3, 12, 17, 19, 26, 31, 38, 40, 41, 44, 45, 46, 51, 54, 55], "30": [1, 5, 32, 40, 44, 45, 54, 55], "linear": [1, 2, 3, 5, 7, 9, 10, 12, 15, 17, 19, 24, 25, 26, 28, 29, 40, 41, 44, 45, 46, 48, 49, 50, 51, 54, 55], "paramet": [1, 2, 7, 8, 9, 11, 12, 16, 17, 18, 22, 24, 25, 26, 27, 29, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 48, 51, 54, 55], "default": [1, 2, 3, 4, 8, 10, 11, 12, 14, 17, 18, 20, 22, 24, 26, 27, 29, 31, 32, 34, 35, 40, 41, 44, 45, 46, 51, 54, 55], "type": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 44, 45, 46, 49, 51, 53, 54], "milp": [1, 2, 17, 40, 41, 44, 45, 51, 54], "displac": 1, "assert": [1, 2, 4, 12, 38, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55], "fail": [1, 2, 4, 10, 12, 17, 28, 38, 40, 41, 44, 45, 46, 51, 54], "report": [1, 2, 11, 17, 22, 37, 39, 40, 41, 44, 45, 46, 50, 51, 52, 54], "d1": 1, "objective_valu": [1, 2, 4, 17, 29, 38, 42, 43, 47, 54, 55], "print_solut": [1, 17, 42, 43], "def": [1, 2, 4, 5, 7, 17, 23, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55], "make_solution_vector": 1, "x_var": [1, 38], "sol": [1, 7, 17, 22, 29, 42, 43, 51], "solution_valu": [1, 2, 4, 5, 12, 16, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 54, 55], "break": [1, 4, 38, 44], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 47, 50, 54, 55], "make_obj_box_dir": 1, "sol_vec": 1, "arrai": [1, 4, 17, 46, 51, 54], "order": [1, 7, 9, 12, 13, 14, 17, 22, 24, 29, 30, 34, 35, 41, 44, 45, 46, 49, 50, 54], "slot": 1, "obj": [1, 4, 29, 38, 47, 55], "sol1": 1, "print": [1, 2, 3, 4, 5, 7, 11, 14, 17, 18, 19, 20, 22, 26, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "": [1, 2, 3, 4, 5, 15, 17, 20, 21, 22, 29, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "format": [1, 2, 4, 5, 7, 8, 9, 17, 18, 19, 20, 22, 29, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54], "8858": 1, "As": [1, 3, 7, 22, 32, 34, 36, 38, 41, 44, 54, 55], "consequ": 1, "cannot": [1, 10, 12, 16, 17, 29, 30, 34, 41, 42, 43, 44, 50, 54], "so": [1, 2, 3, 6, 9, 17, 26, 27, 29, 30, 34, 35, 42, 43, 44, 45, 46, 51, 54], "linearconstraint": [1, 10, 17, 45, 48], "x_1_2": 1, "eq": [1, 9, 10, 17, 45, 55], "now": [1, 40, 41, 44, 45, 46, 51, 54, 55], "state": [1, 10, 17, 41, 42, 43, 44, 45, 53, 55], "k": [1, 2, 3, 17, 24, 25, 36, 38, 45, 49, 54, 55], "geq": 1, "logic": [1, 9, 10, 17, 20, 26, 27, 44, 51, 54, 55], "implic": [1, 55], "relat": [1, 17, 19, 29, 41, 42, 43, 45, 55], "45": [1, 4, 44, 45, 46, 51, 54], "let": [1, 2, 17, 34, 40, 41, 44, 45, 46, 54, 55], "again": [1, 17, 38, 41, 44, 54], "check": [1, 6, 8, 10, 12, 16, 17, 20, 25, 27, 28, 29, 31, 35, 36, 46, 53, 55], "our": [1, 2, 41, 44, 51, 55], "satisfi": [1, 3, 5, 7, 10, 17, 29, 41, 45, 46, 47, 49, 54, 55], "ok2": 1, "sol2": [1, 44], "8878": 1, "inde": [1, 55], "higher": [1, 8, 17, 35, 44, 47, 54], "expect": [1, 7, 17, 29, 40, 42, 43, 44, 45, 46, 54, 55], "second": [1, 2, 9, 17, 25, 28, 34, 44, 51, 55], "In": [1, 8, 9, 10, 12, 15, 17, 20, 22, 28, 29, 41, 44, 45, 46, 47, 51, 54, 55], "other": [1, 8, 12, 13, 16, 17, 20, 27, 29, 34, 41, 42, 43, 44, 45, 47, 49, 50, 51, 55], "word": [1, 8, 20, 29, 44, 45], "OR": [1, 17, 44], "side": [1, 4, 7, 20, 29], "case": [1, 10, 12, 15, 17, 22, 27, 28, 29, 34, 41, 44, 46, 55], "extrem": [1, 17, 54], "care": [1, 44, 55], "foral": 1, "hand": [1, 5, 7], "last": [1, 17, 24, 45, 51], "befor": [1, 3, 7, 17, 22, 24, 28, 29, 34, 35, 41, 44, 45, 46, 54], "ok3": 1, "d3": 1, "sol3": 1, "9078": 1, "vector": 1, "indic": [1, 2, 7, 8, 10, 15, 17, 19, 21, 22, 28, 29, 40, 41, 44, 50, 53], "sort": [1, 14, 39, 40, 42, 43, 44, 50, 51], "maptplotlib": [1, 55], "displai": [1, 4, 5, 8, 10, 13, 17, 24, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 54], "matplotlib": [1, 13, 24, 41, 44, 45, 46, 49, 54, 55], "pyplot": [1, 41, 44, 45, 46, 54, 55], "plt": [1, 41, 44, 45, 46, 54, 55], "pylab": [1, 54], "rcparam": [1, 54], "inlin": [1, 41, 44, 45, 46, 54, 55], "figur": [1, 44, 45, 54], "figsiz": [1, 41, 45, 46, 54], "display_solut": 1, "obj_box": 1, "box_x": 1, "box_i": 1, "obj_x": 1, "obj_i": 1, "text": [1, 2, 21, 28, 33, 40, 44, 45, 46, 51, 54], "str": [1, 2, 3, 4, 17, 34, 38, 42, 43, 44, 45, 51, 55], "bbox": [1, 54], "dict": [1, 11, 17, 18, 29, 34, 42, 43, 44, 45, 51], "facecolor": [1, 54], "red": [1, 2, 5], "alpha": 1, "plot": [1, 24, 41, 44, 45, 46, 54, 55], "show": [1, 5, 8, 24, 40, 41, 45, 46, 49, 51, 54, 55], "segment": [1, 17], "cross": [1, 2], "enforc": [1, 41, 44, 54], "introduc": [1, 36], "mydict": 1, "titl": [1, 41, 45, 46, 54], "true": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 31, 34, 38, 39, 41, 42, 43, 44, 45, 54, 55], "has_matplotlib": [1, 13, 55], "len": [1, 2, 4, 5, 17, 29, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55], "label": [1, 41, 45, 46, 51, 55], "kei": [1, 4, 11, 12, 15, 17, 20, 27, 29, 34, 38, 41, 42, 43, 45, 50, 54, 55], "ind": 1, "xrang": [1, 40], "group": [1, 8, 17, 18, 20, 51, 54], "width": [1, 4, 45, 46, 54], "bar": [1, 17, 41, 45, 46], "fig": [1, 45], "ax": [1, 44, 45, 54], "subplot": [1, 45, 46], "rects1": 1, "color": [1, 2, 40, 44, 45, 46, 51, 55], "g": [1, 2, 4, 7, 17, 18, 38, 41, 44, 45, 46, 47, 54, 55], "set_titl": [1, 45], "set_xtick": 1, "set_xticklabel": 1, "legend": [1, 46, 55], "els": [1, 2, 3, 4, 5, 6, 12, 15, 16, 17, 18, 20, 22, 25, 26, 27, 29, 38, 39, 42, 43, 44, 45, 47, 50, 51, 54, 55], "warn": [1, 14, 17, 34, 45, 49, 53, 55], "collect": [1, 2, 3, 4, 5, 17, 22, 39, 41, 42, 43, 44, 45, 50, 51, 54, 55], "ordereddict": 1, "dist": 1, "8000": 1, "evolut": [1, 54], "858": 1, "878": [1, 2], "1078": 1, "learn": [1, 2, 34, 35, 36, 40, 41, 44, 45, 46, 51, 54], "formul": [1, 2, 40, 41, 44, 45, 46, 51, 54], "bug": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "go": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "here": [1, 2, 3, 17, 23, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55], "contact": [1, 2, 40, 41, 44, 45, 46, 51, 54], "dofeedback": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "wwpdl": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "vnet": [1, 2, 37, 40, 41, 44, 45, 46, 51, 52, 54], "copyright": [1, 2, 4, 5, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54], "2017": [1, 2, 40, 41, 44, 45, 46, 51, 54], "2019": [1, 2, 40, 41, 44, 45, 46, 51, 54], "ipla": [1, 2, 40, 41, 44, 45, 46, 51, 54], "sampl": [1, 2, 36, 40, 41, 43, 44, 45, 46, 49, 51, 54], "materi": [1, 2, 40, 41, 44, 45, 46, 49, 51, 54], "A": [2, 3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 34, 36, 38, 40, 41, 44, 45, 46, 49, 50, 51, 55], "fiction": [2, 40], "coffe": [2, 49], "compani": [2, 40, 47, 49, 54], "plan": [2, 40, 41, 44, 45, 49, 54], "determin": [2, 4, 7, 9, 17, 22, 40, 47, 49, 51, 54], "where": [2, 3, 7, 9, 10, 11, 13, 17, 22, 25, 27, 35, 49, 51, 54, 55], "thei": [2, 9, 11, 16, 17, 22, 24, 29, 34, 35, 40, 44, 45], "should": [2, 7, 8, 11, 17, 20, 22, 28, 29, 34, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54], "know": [2, 54, 55], "most": [2, 9, 36, 40, 44, 46, 54, 55], "brewer": 2, "enjoi": 2, "read": [2, 11, 17, 18, 29, 34, 37, 44, 45], "borrow": 2, "book": [2, 36], "those": [2, 17, 20, 22, 32, 41, 55], "citi": [2, 50, 51], "public": 2, "within": [2, 8, 17, 22, 27, 29, 36, 40, 50, 51, 54], "walk": 2, "chicago": [2, 50, 51], "implement": [2, 3, 22, 27, 34, 41, 44, 49, 51, 54], "median": [2, 29, 49], "note": [2, 10, 12, 16, 17, 22, 24, 26, 28, 29, 30, 34, 39, 41, 44, 46, 54, 55], "more": [2, 3, 4, 5, 8, 17, 20, 34, 35, 37, 40, 41, 42, 43, 44, 49, 51, 52, 54, 55], "global": [2, 3, 18, 35, 36, 42, 43, 44, 45, 46, 54], "anoth": [2, 6, 17, 44, 45, 46], "subpackag": 2, "dedic": [2, 18], "branch": [2, 41, 44, 45], "quit": 2, "simpl": [2, 3, 5, 22, 34, 36, 47, 49, 51, 55], "geograph": 2, "acquir": 2, "json": [2, 4, 5, 11, 29, 34, 38, 39, 42, 43, 47, 50], "file": [2, 4, 5, 9, 11, 17, 18, 20, 29, 33, 34, 38, 39, 42, 43, 44, 45, 47, 49, 50], "13bfa4c7": 2, "78ce": 2, "4d83": 2, "b53d": 2, "b57c60b701cf": 2, "1441918880": 2, "885709": 2, "null": [2, 17, 34], "albani": 2, "park": 2, "m": [2, 4, 10, 12, 13, 16, 17, 18, 36, 38, 39, 40, 41, 45, 50, 51], "w": [2, 5, 45, 49, 50, 51, 55], "10am": 2, "6pm": 2, "tu": 2, "th": [2, 12, 15, 17, 29, 40, 44, 45, 46, 51, 55], "12pm": 2, "8pm": 2, "f": [2, 4, 5, 46], "sa": 2, "9am": 2, "5pm": 2, "su": 2, "close": [2, 5, 34], "ye": [2, 39, 41, 55], "3401": 2, "foster": 2, "avenu": 2, "il": 2, "60625": 2, "773": 2, "539": 2, "5450": 2, "chipublib": 2, "41": [2, 41, 44, 54], "975456": 2, "87": [2, 54], "71409": 2, "fals": [2, 5, 6, 8, 10, 11, 12, 16, 17, 18, 20, 23, 25, 26, 27, 29, 31, 38, 41, 42, 43, 44, 45, 54], "snippet": 2, "repres": [2, 3, 7, 8, 10, 17, 34, 40, 44, 45, 46, 52, 54, 55], "disclaim": 2, "site": [2, 36], "provid": [2, 4, 5, 8, 13, 17, 22, 24, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 55], "ha": [2, 3, 5, 6, 7, 10, 12, 15, 16, 17, 20, 22, 27, 28, 29, 30, 32, 34, 38, 40, 44, 45, 46, 47, 50, 55], "been": [2, 3, 6, 7, 10, 12, 15, 16, 17, 22, 24, 27, 28, 29, 32, 34, 38, 44, 50], "modifi": [2, 7, 16, 17, 22, 24, 32, 40, 41, 44], "origin": [2, 6, 8, 17, 29, 34, 44, 54], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 43, 47, 50, 51, 52], "cityofchicago": 2, "offici": 2, "websit": 2, "claim": 2, "accuraci": 2, "timeli": 2, "complet": [2, 29, 42, 43, 45, 55], "ani": [2, 10, 12, 16, 17, 18, 20, 22, 25, 29, 41, 44, 45, 51, 54, 55], "subject": [2, 47, 51], "understood": 2, "being": [2, 8, 11, 16, 17, 22, 34, 40, 51, 55], "own": [2, 20, 21, 22, 34, 47], "name": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 17, 18, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55], "latitud": 2, "longitud": 2, "street": 2, "class": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 42, 43, 44, 45, 51, 55], "xpoint": 2, "__init__": [2, 4, 7, 23, 42, 43, 45], "self": [2, 4, 7, 10, 16, 23, 24, 25, 34, 39, 40, 42, 43, 45, 51, 55], "__str__": [2, 4, 20, 30, 39, 42, 43, 45, 55], "p": [2, 4, 38, 40, 41, 43, 47, 49, 54, 55], "g_": 2, "namedpoint": 2, "To": [2, 3, 7, 8, 10, 12, 17, 22, 29, 30, 36, 41, 44, 46, 47, 50, 51, 54, 55], "geopi": 2, "hasattr": [2, 44, 45], "real_prefix": [2, 44, 45], "virtual": [2, 36, 44, 45], "user": [2, 6, 7, 10, 17, 18, 20, 23, 27, 29, 34, 39, 41, 44, 45, 54], "great_circl": 2, "get_dist": 2, "p1": 2, "p2": 2, "mile": 2, "pars": [2, 9, 21, 44, 45], "element": [2, 3, 7, 8, 17, 34, 54, 55], "build_libraries_from_url": 2, "url": 2, "iteritem": [2, 45], "r": [2, 3, 44, 45, 51, 54, 55], "myjson": 2, "load": [2, 39, 49], "parse_const": 2, "utf": [2, 4, 38, 39], "meta": 2, "view": [2, 3], "name_col": 2, "location_col": 2, "col": 2, "enumer": [2, 4, 8, 9, 10, 12, 14, 17, 21, 22, 27, 29, 30, 32, 38, 42, 43, 45, 55], "strip": [2, 44, 49], "lower": [2, 8, 9, 10, 12, 17, 29, 31, 42, 43, 44, 45, 54], "runtimeerror": 2, "could": [2, 13, 17, 44, 45, 50, 54, 55], "mayb": 2, "unam": 2, "float": [2, 3, 4, 7, 8, 12, 15, 16, 17, 20, 22, 28, 29, 38, 41, 44, 45, 46, 54], "typeerror": 2, "none": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 40, 42, 43, 44, 45, 46, 51, 54, 55], "p_": 2, "s_": [2, 5, 44, 45, 51], "append": [2, 4, 17, 22, 29, 34, 39, 41, 45, 51, 54, 55], "api": [2, 7, 29, 37], "x8fc": 2, "8rcq": 2, "accesstyp": 2, "download": [2, 35, 36], "There": [2, 3, 9, 17, 46, 51, 55], "81": [2, 5, 41], "constant": [2, 8, 10, 12, 16, 17, 25, 27, 29, 30, 32, 41, 43, 48], "mani": [2, 3, 8, 24, 35, 44, 54, 55], "would": [2, 46, 55], "like": [2, 8, 17, 27, 29, 34, 40, 55], "nb_shop": 2, "folium": 2, "map": [2, 4, 17, 34, 42, 43, 45], "marker": [2, 55], "map_osm": 2, "629": 2, "zoom_start": 2, "lt": 2, "lg": 2, "add_to": 2, "after": [2, 17, 24, 29, 34, 36, 46, 51], "abov": [2, 14, 38, 41, 44, 45, 46, 50, 54], "imposs": 2, "ideal": [2, 44], "just": [2, 17, 44, 46], "look": [2, 7, 9, 17, 27, 29, 35, 36, 39, 41, 49, 51], "write": [2, 3, 4, 17, 20, 22, 29, 33, 34, 38, 39], "bignum": 2, "999999999": 2, "ensur": [2, 44, 54, 55], "uniqu": [2, 15, 17, 20, 55], "simplic": 2, "consid": [2, 8, 10, 11, 16, 17, 34, 47], "candid": [2, 20, 55], "same": [2, 9, 12, 16, 17, 20, 22, 24, 29, 32, 34, 41, 42, 43, 44, 45, 49, 50, 54], "That": [2, 54], "also": [2, 3, 7, 9, 12, 17, 19, 20, 22, 29, 34, 36, 37, 41, 44, 46, 51, 54, 55], "select": [2, 5, 18, 35, 40], "coffeeshop_loc": 2, "var": [2, 3, 4, 6, 7, 9, 12, 16, 17, 25, 29, 39, 48, 55], "coffeeshop_var": 2, "binary_var_dict": [2, 3, 17, 39, 55], "is_coffeeshop": 2, "link_var": 2, "link": [2, 4, 10, 17], "suspect": 2, "exclud": [2, 8, 17], "c_loc": 2, "ct_forbid_": 2, "_": [2, 17, 34, 35, 36, 37, 39, 42, 43, 45, 49, 52, 53, 54], "6642": 2, "6561": [2, 41], "fourth": 2, "fix": [2, 32, 46, 49, 52, 54, 55], "nb": [2, 4, 5, 44, 50, 54], "inform": [2, 3, 8, 9, 10, 12, 13, 17, 18, 20, 22, 29, 35, 36, 41, 44, 45, 51, 54, 55], "6643": 2, "reader": [2, 34], "alwai": [2, 8, 17, 20, 22, 27, 44, 45], "hub": 2, "total_dist": 2, "open_coffeeshop": 2, "not_coffeeshop": 2, "edg": [2, 46], "int": [2, 5, 34, 46, 51], "210": [2, 54], "894": 2, "p_austin": 2, "irving_76": 2, "p_woodson": 2, "region": 2, "library_77": 2, "p_manning_13": 2, "p_back": 2, "yards_20": 2, "p_sulzer": 2, "library_27": 2, "highlight": 2, "coffeeshop": 2, "icon": 2, "info": [2, 14, 34], "coordin": [2, 17, 24], "add_child": 2, "polylin": 2, "ff0000": 2, "weight": [2, 17, 30, 40, 41, 44, 45, 46, 50, 51, 54], "scope": [3, 11, 44, 45], "what": [3, 9, 22, 41, 46, 49, 53, 54, 55], "possibl": [3, 7, 9, 10, 12, 14, 17, 21, 22, 23, 26, 28, 29, 31, 34, 41, 44, 45, 46, 49, 50, 51, 54], "interact": [3, 8, 34, 36], "busi": [3, 17], "ad": [3, 10, 16, 17, 22, 24, 44, 45, 51, 54, 55], "object": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 38, 39, 42, 43, 47, 49, 50], "numer": [3, 7, 8, 9, 15, 17, 20, 22, 27, 55], "criterion": 3, "us": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 36, 37, 39, 43, 49, 50, 52, 53, 55], "rank": 3, "solut": [3, 4, 5, 7, 9, 11, 12, 15, 16, 17, 22, 27, 28, 32, 34, 38, 39, 42, 43, 47, 48, 50, 55], "algorithm": [3, 5, 8, 9, 22, 27, 28, 44, 49], "aim": [3, 47], "best": [3, 4, 22, 28, 38, 40, 44, 46, 51, 55], "step": [3, 17, 55], "option": [3, 7, 15, 17, 18, 29, 32, 34, 36, 41, 44, 45, 46], "feasibl": [3, 9, 17, 28, 29, 41, 44, 54], "folder": 3, "set": [3, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 32, 34, 37, 39, 42, 43, 55], "factori": [3, 10, 17, 46, 47], "manipul": 3, "describ": [3, 9, 17, 20, 28, 49], "refer": [3, 20, 29, 35, 36, 37], "manual": [3, 20, 37], "method": [3, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 39, 41, 42, 43, 44, 45, 46, 54, 55], "singl": [3, 17, 29, 54], "list": [3, 4, 7, 8, 9, 11, 12, 17, 22, 24, 29, 30, 34, 35, 36, 41, 44, 45, 46, 47, 50, 51, 54, 55], "dictionari": [3, 4, 8, 12, 17, 20, 27, 29, 32, 34, 41, 45, 54, 55], "index": [3, 6, 7, 17, 29, 34, 37, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 54], "standard": [3, 5, 17, 29, 35, 36, 44, 53], "function": [3, 4, 5, 7, 10, 13, 16, 17, 18, 20, 22, 24, 30, 32, 34, 39, 41, 44, 46, 49, 51, 55], "binary_var": [3, 10, 17], "binary_var_list": [3, 17, 38], "integer_var": [3, 17, 39, 40], "integer_var_list": [3, 4, 17], "integer_var_dict": [3, 17, 29], "integer_var_matrix": [3, 17], "continuous_var": [3, 4, 17, 40, 42, 43, 44, 45, 54], "continuous_var_list": [3, 17, 38, 41, 46], "continuous_var_dict": [3, 4, 12, 17, 42, 43, 45, 47], "continuous_var_matrix": [3, 17, 41, 46, 54], "three": [3, 9, 10, 17, 46, 55], "accord": [3, 9, 34, 44, 45, 46, 49], "1": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 22, 24, 25, 27, 28, 29, 34, 36, 38, 39, 42, 43, 47, 49, 50, 52, 53, 55], "detail": [3, 4, 11, 17, 28, 29, 34, 35, 36, 40, 52, 53], "attribut": [3, 6, 11, 17], "found": [3, 5, 9, 13, 17, 24, 27, 29, 35, 38, 44, 51, 55], "py": [3, 11, 34, 49], "built": [3, 15, 16, 17, 18, 25, 27, 51], "combin": [3, 17, 46, 55], "elementari": 3, "form": [3, 10, 17, 19, 20, 25, 27, 29], "arithmet": [3, 17, 51], "overload": [3, 12, 16, 20, 29, 55], "manner": [3, 17, 22, 49, 50, 55], "z": [3, 10, 17, 29, 36], "3": [3, 4, 5, 7, 9, 10, 13, 16, 17, 22, 25, 29, 35, 36, 38, 39, 42, 43, 47, 49, 50, 53, 55], "5": [3, 4, 5, 8, 17, 25, 29, 36, 38, 39, 40, 42, 43, 47, 53, 55], "allow": [3, 17, 20, 29, 34, 35], "creation": [3, 44], "larg": [3, 5, 10, 12, 17, 35, 44], "though": [3, 44, 55], "much": [3, 4, 12, 34, 41, 44, 46, 47, 49, 50], "faster": [3, 12, 17], "larger": 3, "simplifi": [3, 41, 55], "comparison": 3, "compar": 3, "forc": [3, 5, 11, 20, 44, 51], "explicit": [3, 17], "avail": [3, 10, 12, 13, 17, 22, 29, 34, 35, 36, 41, 44, 52, 53], "eas": [3, 18], "eq_constraint": [3, 17], "le_constraint": [3, 17], "itself": [3, 9, 16, 17], "call": [3, 7, 12, 17, 20, 22, 25, 27, 28, 29, 34, 40, 44, 46], "possibli": [3, 12, 17, 20], "string": [3, 7, 8, 9, 10, 11, 13, 17, 18, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 55], "argument": [3, 5, 7, 8, 9, 12, 15, 17, 18, 20, 21, 22, 24, 26, 27, 29, 34, 41, 44, 55], "activ": [3, 10, 17, 39, 42, 43, 45], "condens": 3, "sudoku": 3, "polici": 3, "comment": 3, "directori": [3, 17, 29, 34, 36], "myinput": 3, "4": [3, 4, 5, 8, 9, 10, 17, 29, 32, 34, 38, 39, 40, 42, 43, 47, 49, 53, 55], "idx": [3, 17, 40, 55], "solvesolut": [3, 7, 15, 17, 22, 27, 29, 48], "section": [3, 36, 41, 52, 55], "statu": [3, 8, 9, 10, 12, 17, 22, 28, 29], "accessor": [3, 17], "output": [3, 4, 5, 10, 11, 14, 17, 20, 23, 29, 34, 41, 42, 43, 44, 45, 47, 50, 51, 55], "adjust": 3, "hierarch": [3, 20], "tree": [3, 20, 22, 44], "reflect": [3, 20], "hierarchi": [3, 17, 20], "mip": [3, 9, 11, 17, 20, 22, 26, 28, 29, 32, 41, 43, 44, 45, 51], "toler": [3, 7, 17, 20, 29, 43, 44, 45], "mip_gap": [3, 22], "05": [3, 17, 27, 40, 44, 45], "gap": [3, 17, 22, 28, 38, 44], "data": [3, 4, 5, 7, 17, 18, 22, 23, 29, 33, 34, 36, 37, 38, 39, 42, 43, 47, 49, 50], "structur": [3, 45, 46, 51], "search": [3, 9, 11, 13, 17, 22, 35, 37, 44, 48, 55], "shortcut": 3, "simpler": 3, "test": [3, 12, 16, 17, 39, 44, 55], "directli": [3, 6, 7, 17, 28, 29, 30, 44], "bracket": 3, "msol": 3, "vname": 3, "nqueen": 3, "stdout": [3, 11, 17, 22], "v": [3, 42, 43, 44, 54, 55], "get_solve_statu": [3, 17], "correspond": [3, 8, 17, 28, 29, 34, 41, 44, 45, 54], "made": [3, 22, 40, 41, 43, 46, 49, 55], "export_as_lp": [3, 17], "demonstr": [3, 5, 54], "construct": [3, 17, 26, 32, 41], "gener": [4, 6, 17, 20, 22, 38, 44, 49, 51, 54, 55], "begin": [4, 22, 44, 49, 55], "small": [4, 10, 29, 55], "few": [4, 36, 44, 46, 49, 54], "variabl": [4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 19, 22, 25, 26, 29, 30, 31, 34, 35, 38, 42, 43, 47, 50], "partial": [4, 17, 26], "enlarg": 4, "repeat": 4, "until": [4, 41], "satisfactori": 4, "whole": 4, "achiev": [4, 39, 40, 49, 55], "corp": [4, 5, 38, 39, 42, 43, 47, 50], "2015": [4, 5, 38, 39, 42, 43, 47, 50, 51], "2022": 4, "import": [4, 5, 13, 17, 24, 34, 38, 39, 42, 43, 47, 50, 55], "namedtupl": [4, 5, 8, 23, 39, 42, 43, 45, 50, 51, 55], "util": [4, 5, 13, 17, 38, 39, 42, 43, 44, 45, 47, 48, 50], "get_environ": [4, 5, 34, 38, 39, 42, 43, 47, 48, 50], "default_roll_width": 4, "110": [4, 54], "default_item": 4, "48": [4, 44, 54], "35": [4, 44, 45, 46, 54, 55], "50": [4, 5, 39, 41, 43, 44, 46, 54, 55], "24": [4, 5, 40, 42, 43, 44, 45, 54, 55], "55": [4, 44, 45, 55], "75": [4, 41, 54], "default_pattern": 4, "etc": [4, 41], "default_pattern_item_fil": 4, "pattern1": 4, "item1": 4, "pattern2": 4, "item2": 4, "first_generation_du": 4, "titem": 4, "item_id": 4, "item_s": 4, "demand": [4, 47, 49], "id": [4, 17, 18, 22, 39, 40, 54, 55], "dual_valu": [4, 10, 17], "classmethod": [4, 8, 18, 21, 29], "cl": 4, "arg": [4, 9, 11, 17, 18, 21, 24, 29], "arg_id": 4, "arg_siz": 4, "arg_demand": 4, "item": [4, 7, 11, 17, 26, 45, 51, 54], "tpattern": 4, "pattern": [4, 5, 17, 49], "make_cutstock_pattern_generation_model": 4, "roll_width": 4, "kwarg": [4, 5, 8, 11, 17, 18, 24, 26, 27, 29, 34, 38, 39, 42, 43, 47, 50], "gen_model": 4, "cutstock_generate_pattern": 4, "dual": [4, 10, 17, 29, 54], "creat": [4, 5, 7, 8, 10, 11, 12, 16, 17, 18, 22, 24, 29, 30, 34, 35, 36, 37, 55], "use_var": 4, "ub": [4, 5, 9, 10, 12, 17, 44, 54], "999999": 4, "setup": [4, 39], "constraint": [4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 21, 26, 27, 29, 35, 38, 39, 42, 43, 47], "usag": [4, 17, 23, 42, 43], "less": [4, 17, 41, 42, 43, 45, 55], "than": [4, 9, 17, 34, 40, 41, 42, 43, 44, 45, 54, 55], "roll": [4, 49], "dot": [4, 17, 41, 44], "express": [4, 6, 7, 9, 10, 12, 15, 16, 17, 19, 24, 25, 26, 29, 32, 55], "use_dual_expr": 4, "cutstock_update_du": 4, "gmodel": 4, "new_dual": 4, "propag": 4, "updated_us": 4, "modif": 4, "notifi": 4, "set_coeffici": 4, "make_custstock_master_model": 4, "item_t": 4, "pattern_t": 4, "fill_tabl": 4, "custock_mast": 4, "properti": [4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 22, 25, 27, 28, 29, 30, 31, 34, 42, 43, 44, 45, 54], "it_row": 4, "items_by_id": 4, "pattern_row": 4, "patterns_by_id": 4, "pat": 4, "max_pattern_id": 4, "max": [4, 9, 17, 20, 32, 38, 39, 41, 45, 46, 54], "pt": [4, 55], "how": [4, 5, 8, 17, 29, 39, 47, 49, 50, 53, 55], "fill": [4, 17], "pattern_item_fil": 4, "cut": [4, 7, 17, 29, 41, 44, 45, 49], "max_cut": 4, "9999": 4, "cut_var": 4, "lb": [4, 5, 9, 10, 12, 17, 26, 39, 40, 42, 43, 44, 45, 46, 54], "all_pattern": 4, "all_item": 4, "item_fill_ct": 4, "ct_fill_": 4, "stock": [4, 49], "total_cutting_cost": 4, "add_pattern_to_master_model": 4, "master_model": 4, "item_usag": 4, "master": [4, 44, 45], "perform": [4, 15, 17, 29, 36, 41, 44, 54], "instanc": [4, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 45, 49, 50, 55], "taken": [4, 7, 40, 55], "sub": [4, 17, 20, 22, 31, 45], "new_pattern_id": 4, "new_pattern": 4, "zip": [4, 38, 41, 44, 45, 46, 49, 54], "new_pattern_cut_var": 4, "cut_": 4, "ct": [4, 7, 8, 17, 27, 29, 42, 43, 45], "lh": [4, 7, 10, 17], "ctlh": 4, "effect": [4, 20, 22, 29], "expr": [4, 6, 10, 16, 17, 25, 44, 48], "cost_expr": 4, "performw": 4, "cutstock_print_solut": 4, "cutstock_model": 4, "cut_var_valu": 4, "70": [4, 41, 43, 44, 46, 54, 55], "1e": [4, 5, 7, 12, 17, 27, 28, 29, 38, 44, 45, 54], "pattern_detail": 4, "10g": 4, "cutstock_save_as_json": 4, "json_fil": [4, 39], "dump": [4, 34, 38, 39], "indent": [4, 39], "encod": [4, 17, 33, 38, 39], "cutstock_solv": 4, "verbos": [4, 18, 27, 42, 45], "pop": [4, 5, 43], "field": [4, 5, 8, 11, 17, 27, 29, 34, 46, 55], "tupl": [4, 5, 7, 8, 17, 22, 27, 28, 29, 41, 42, 43, 45, 47, 50, 51, 55], "rc_ep": 4, "obj_ep": 4, "loop_count": [4, 38], "curr": 4, "while": [4, 5, 9, 11, 17, 18, 38, 41, 45, 46, 47, 49, 51, 53], "100": [4, 5, 10, 12, 17, 18, 40, 44, 47, 54], "ab": [4, 17, 44], "stop": [4, 9, 17, 22, 34, 38], "iter": [4, 7, 8, 10, 12, 16, 17, 20, 22, 25, 27, 28, 29, 30, 38, 41, 44, 50, 54], "move": [4, 24, 44], "2f": [4, 54], "slave": 4, "rc_cost": 4, "run": [4, 8, 9, 13, 17, 27, 34, 35, 38, 39, 40, 53], "use_valu": 4, "get_valu": [4, 7, 29, 41], "termin": [4, 17], "ret": 4, "loop": [4, 27, 38], "end": [4, 8, 17, 28, 33, 39, 41, 42, 43, 45, 50], "cutstock_solve_default": 4, "__name__": [4, 5, 38, 39, 42, 43, 47, 50], "__main__": [4, 5, 38, 39, 42, 43, 47, 50], "46": [4, 54, 55], "save": [4, 5, 11, 34, 38, 39, 40, 42, 43, 47, 50, 54], "get_output_stream": [4, 5, 34, 38, 39, 42, 43, 47, 48, 50], "fp": [4, 5, 38, 39, 42, 43, 47, 50], "monei": 5, "food": [5, 49], "budget": [5, 40], "armi": 5, "without": [5, 16, 17, 38, 49, 54], "damag": 5, "nutrit": [5, 49], "health": 5, "arm": 5, "variat": [5, 49, 54], "well": [5, 22, 44, 45, 46, 49, 54, 55], "known": [5, 17, 27, 49], "wa": [5, 17, 27, 29, 35, 41, 44, 49, 54], "pose": [5, 49], "georg": [5, 40, 49], "stigler": [5, 49], "dantzig": [5, 49], "choos": [5, 36, 49], "maxim": [5, 9, 17, 38, 40, 41, 49, 50, 51, 55], "satieti": [5, 49], "hi": 5, "becaus": [5, 12, 16, 28, 29, 31, 41, 55], "did": [5, 17, 41, 44], "yet": [5, 17, 55], "support": [5, 9, 11, 28, 29, 34, 36], "sophist": 5, "howev": [5, 17, 42, 43, 44, 45], "1947": 5, "jack": 5, "laderman": 5, "nation": 5, "bureau": 5, "appli": [5, 17, 27, 41, 44, 54, 55], "simplex": 5, "recent": 5, "propos": 5, "team": [5, 44, 45, 49, 50, 52], "nine": 5, "programm": 5, "work": [5, 9, 22, 34, 42, 43, 49, 50, 51, 54], "desk": 5, "calcul": [5, 24, 41, 44, 45, 46, 49, 50, 51, 54], "heurist": 5, "approxim": 5, "veri": [5, 12, 34, 41, 55], "cent": 5, "year": [5, 49, 51], "optimum": 5, "thu": [5, 22, 44, 45, 46], "practic": [5, 36, 44], "scale": [5, 24], "real": [5, 22, 41, 44, 45, 46, 54], "world": 5, "certain": [5, 20, 28, 34, 41, 44, 45, 47], "2018": [5, 38, 39, 42, 43, 47, 50], "daili": 5, "neo": 5, "guid": [5, 36], "solver": [5, 11, 17, 22, 23, 34, 35, 48], "roast": 5, "chicken": 5, "84": [5, 40, 44, 54], "spaghetti": [5, 49], "sauc": [5, 49], "78": [5, 54], "tomato": 5, "ripe": 5, "raw": [5, 44, 45, 46, 54], "27": [5, 41, 44, 45, 54, 55], "appl": 5, "skin": 5, "grape": 5, "32": [5, 42, 43, 44, 45, 54, 55], "chocol": [5, 49], "chip": [5, 49], "cooki": [5, 49], "03": [5, 32, 44, 45], "lowfat": [5, 49], "milk": [5, 49], "raisin": 5, "brn": 5, "34": [5, 40, 44, 54, 55], "hotdog": [5, 49], "31": [5, 42, 43, 44, 45, 54], "nutrient": 5, "calori": [5, 49], "2000": [5, 46, 49], "2500": [5, 44], "calcium": [5, 49], "800": [5, 49], "1600": 5, "iron": [5, 49], "vit_a": [5, 49], "5000": [5, 41, 46, 54], "50000": 5, "dietary_fib": [5, 49], "carbohydr": [5, 49], "300": [5, 40, 47, 54], "protein": [5, 49], "food_nutri": 5, "277": 5, "77": [5, 41, 54], "42": [5, 44, 54, 55], "358": 5, "80": [5, 17, 44], "3055": 5, "58": [5, 44, 54], "766": 5, "73": [5, 44, 55], "101": [5, 17, 38, 54], "121": 5, "296": 5, "500": [5, 40, 54], "115": [5, 54], "1250": 5, "242": 5, "unit_cost": 5, "qmin": 5, "qmax": 5, "build_diet_model": 5, "fn": [5, 15, 27], "ftype": 5, "integer_vartyp": [5, 17], "continuous_vartyp": [5, 17], "qty": 5, "var_dict": [5, 17, 29], "q_": 5, "mark": [5, 17, 36, 50], "them": [5, 17, 26, 29, 34, 44, 45, 46, 47, 54], "kpi": [5, 11, 17, 22, 29, 39, 43, 45, 46, 48, 49, 54], "amount": [5, 24, 27, 41, 46, 47], "add_rang": [5, 10, 17], "add_kpi": [5, 17, 38, 39, 41, 42, 43, 44, 45, 46, 47, 54], "publish_nam": [5, 17], "total_cost": [5, 54], "count": [5, 17, 25, 41, 44, 55], "nb_product": 5, "mdl_": 5, "qv": 5, "find_matching_var": [5, 17], "log_output": [5, 11, 17, 39, 41, 42, 43, 44, 45, 48], "float_precis": [5, 17], "qty_var": 5, "fv": 5, "food_nam": 5, "bui": [5, 40, 46, 47, 49], "6g": 5, "report_kpi": [5, 17, 42, 43], "export": [5, 17, 18, 20, 29, 42, 43, 47, 50], "modelobject": [6, 48], "operand": [6, 16, 17], "_abstractvalu": [6, 12, 15], "parent": [6, 20, 31], "contains_var": [6, 16, 25], "dvar": [6, 7, 8, 16, 17, 25, 29, 48], "whether": [6, 7, 8, 10, 12, 13, 16, 17, 20, 22, 25, 29, 40, 44, 50, 51, 53, 55], "param": [6, 11, 16, 17, 25, 32, 42, 43, 45, 48], "boolean": [6, 8, 12, 16, 17, 20, 21, 22, 25, 28, 29, 31], "is_quad_expr": [6, 25], "quadrat": [6, 10, 17, 19, 25, 29], "number_of_vari": [6, 16, 17, 19], "indexableobject": [6, 10, 12, 30, 48], "modelingobjectbas": [6, 24, 48], "is_gener": 6, "_origin": 6, "belong": [6, 9, 20], "_abstractmodelobject": 6, "_abstractnam": [6, 15], "intend": [6, 7, 16, 24, 25, 32], "instanti": [6, 7, 10, 12, 16, 20, 24, 25, 28, 29, 30, 31], "has_nam": 6, "has_user_nam": 6, "valid": [6, 7, 13, 15, 17, 20, 22, 29], "given": [6, 7, 8, 12, 16, 17, 24, 29, 34, 41, 44, 45, 51, 54, 55], "constraintcallbackmixin": [7, 48], "modelcallbackmixin": [7, 48], "get_cpx_unsatisfied_ct": 7, "06": [7, 12, 17, 29, 44], "subset": [7, 44], "unsatisfi": 7, "lazi": [7, 17], "among": [7, 17, 40, 44], "amn": 7, "defaut": [7, 8], "sens": [7, 9, 10, 17, 27, 32, 55], "rh": [7, 10, 17, 54], "rith": 7, "make_solution_from_watch": 7, "watch": 7, "incumb": [7, 22], "intermedi": [7, 22], "mention": [7, 10, 16, 17, 29], "regist": 7, "soluton": 7, "make_complete_solut": 7, "register_watched_var": 7, "mixin": [7, 23], "bridg": 7, "inherit": 7, "jointli": 7, "defin": [7, 8, 9, 10, 11, 15, 17, 21, 22, 23, 24, 29, 31, 42, 43], "branchcallback": 7, "legaci": 7, "constructor": [7, 18], "compli": 7, "mybranch": 7, "register_callback": 7, "assum": [7, 12, 17, 25, 29, 41, 46, 50, 51], "setter": 7, "connect": [7, 24], "index_to_var": 7, "var_index": 7, "convert": [7, 9, 12, 17, 20, 21, 29, 30, 34, 41, 42, 43, 44, 45, 46, 55], "associ": [7, 8, 10, 12, 16, 17, 29, 34, 41, 42, 43], "withth": 7, "otherwis": [7, 10, 12, 13, 15, 17, 18, 20, 22, 23, 27], "error": [7, 11, 14, 17, 18, 21, 29, 34, 53], "static": [7, 8, 9, 11, 17], "linear_ct_to_cplex": 7, "linear_ct": [7, 10, 17], "converst": 7, "coeffici": [7, 10, 12, 16, 17, 25, 41, 44], "letter": [7, 31], "l": [7, 19, 40], "e": [7, 16, 17, 18, 41, 44, 45, 54], "2x": [7, 16, 17, 25], "linear_ct_cplex": 7, "make_solut": 7, "make_solution_from_var": 7, "print_cal": [7, 48], "prompt_msg": 7, "decor": 7, "__call__": 7, "deriv": [7, 22, 54], "mycallback": 7, "lazyconstraintcallback": 7, "my": [7, 17, 53], "messag": [7, 14, 17, 18, 22, 26, 28, 53], "execut": [7, 34, 36, 41], "__call_": 7, "inplac": 7, "conflictrefin": [8, 48], "output_process": 8, "publishresultasdf": [8, 23, 27, 48], "abstract": [8, 15, 17, 22, 27, 31], "interfac": [8, 18, 27], "conflict": [8, 9], "mutual": 8, "contradictori": [8, 44, 45], "bound": [8, 9, 10, 12, 17, 22, 28, 29, 31, 42, 43, 44, 45, 54], "infeas": [8, 10, 17, 27, 42, 43, 45], "refin": [8, 9, 22, 42, 43, 45], "identifi": [8, 17, 40, 44, 45], "remov": [8, 16, 17, 21, 34, 44], "arriv": [8, 51], "display_conflict": 8, "represent": [8, 10, 11, 17, 20, 30, 31, 34, 51, 55], "conflictrefinerresult": [8, 48], "refine_conflict": 8, "prefer": [8, 9, 18, 44, 50, 51], "relax": [8, 9, 10, 26, 38, 42, 43, 44, 45, 48, 49], "constraintsgroup": [8, 48], "flag": [8, 17, 18, 20, 21, 29, 41], "accept": [8, 9, 12, 17, 18, 20, 21, 22, 27, 29, 32, 34, 40, 41], "similar": [8, 17, 22, 27, 51, 54], "conflictrefinerresut": 8, "hold": [8, 10, 12, 17, 22, 29], "about": [8, 13, 17, 22, 29, 35, 36, 37, 53], "var_bound": 8, "pref": 8, "include_infinity_bound": 8, "singleton": [8, 29], "constraintgroup": 8, "variabel": 8, "replic": 8, "sthe": 8, "behavior": [8, 11, 17, 22], "non": [8, 9, 10, 12, 17, 20, 26, 28, 29, 45, 50, 54], "differ": [8, 9, 16, 17, 20, 22, 29, 34, 39, 41, 42, 43, 44, 45, 46, 49, 50, 51, 54], "upper": [8, 9, 10, 12, 17, 31, 42, 43, 44, 45, 46, 54], "unless": [8, 17, 23], "precis": [8, 12, 17, 27, 29, 44, 45, 55], "infi": 8, "refined_bi": 8, "tconflictconstraint": [8, 48], "conflictstatu": [8, 9, 48], "possible_memb": 8, "involv": [8, 36], "wrapper": [8, 53], "display_stat": 8, "statist": [8, 17, 19, 29], "iter_conflict": 8, "number_of_conflict": 8, "were": [8, 17, 40], "produc": [8, 17, 29, 41, 46, 47, 49, 54], "cplex_loc": [8, 13, 29], "docplexcloud": [8, 29, 34], "cplex_cloud": [8, 29], "definit": [8, 17, 44, 45], "mai": [8, 10, 12, 17, 22, 24, 28, 34, 36, 40, 46, 51, 54], "neg": [8, 17, 44], "specifi": [8, 11, 13, 17, 20, 23, 24, 33, 34, 35, 36, 38, 43, 45, 49, 50], "zero": [8, 9, 10, 12, 17, 26, 28, 29, 41, 42, 43, 44, 45, 46, 55], "from_var": 8, "bound_typ": 8, "fromon": 8, "whose": [8, 17, 24, 34, 44, 55], "varboundtyp": [8, 9, 48], "alia": [8, 27], "_tconflictconstraint": 8, "varlbconstraintwrapp": [8, 48], "varboundwrapp": 8, "referenc": 8, "caus": [8, 29, 46, 53], "wrap": 8, "varubconstraintwrapp": [8, 48], "basisstatu": [9, 10, 12, 17, 48], "enum": [9, 11, 14, 21, 22, 45], "basi": [9, 10, 12, 17], "queri": [9, 16, 17], "lp": [9, 10, 12, 17, 18, 29, 32, 46], "notabasisstatu": 9, "invalid": [9, 10, 29, 34, 44, 53], "unknown": 9, "basic": [9, 17, 22, 45, 46, 48, 51], "mean": [9, 17, 24, 29, 41, 44, 51], "atlow": 9, "atupp": 9, "freenonbas": 9, "nonbas": 9, "knowledgecent": [9, 28, 29], "sssa5p_20": [9, 28, 29], "odm": [9, 28, 29], "help": [9, 22, 28, 29, 36, 37, 49, 52], "refcallablelibrari": [9, 28], "cpxapi": [9, 28], "getbas": 9, "html": [9, 28, 29, 39, 40, 44, 45, 46, 51, 54], "comparisontyp": [9, 10, 17, 48], "variou": [9, 17, 19, 27, 34, 44, 45, 47], "le": [9, 10, 17, 55], "e1": [9, 10, 17], "e2": [9, 10, 17], "ge": [9, 10, 17, 55], "denot": [9, 10, 17], "operator_symbol": 9, "cplexscop": [9, 48], "effortlevel": [9, 17, 48], "effort": 9, "ident": [9, 17, 22, 29, 46], "refcppcplex": 9, "ilocplex_mipstarteffort": 9, "objectivesens": [9, 17, 32, 43, 48], "is_maxim": [9, 17], "is_minim": [9, 17], "logger": [9, 11, 13, 21], "long": 9, "short": [9, 17, 31], "convent": 9, "short_nam": [9, 20, 31], "min": [9, 17, 20, 32, 34, 41, 45, 54], "verb": 9, "lowercas": [9, 20, 44], "qualitymetr": [9, 48], "relaxationmod": [9, 27, 48], "strategi": 9, "minsum": 9, "optsum": 9, "mininf": 9, "optinf": 9, "minquad": 9, "optquad": 9, "phase": [9, 28, 55], "metric": [9, 17], "pair": [9, 16, 17, 25, 27, 29, 34, 41, 42, 43, 44, 45, 50, 55], "minxxx": 9, "optxxx": 9, "soluion": 9, "do": [9, 17, 22, 23, 35, 39, 40, 41, 44, 45, 46, 49, 53, 54, 55], "longer": 9, "evalu": [9, 11, 15, 17, 24, 29, 45, 55], "qualiti": [9, 17, 46, 49], "xxx": [9, 17, 26, 35], "inf": 9, "even": [9, 17, 44], "huge": 9, "slack": [9, 10, 17, 27, 29], "instead": [9, 11, 17, 34, 43, 44], "quand": 9, "expens": [9, 39, 49], "avoid": [9, 44, 45, 54], "discrep": 9, "sostyp": [9, 17, 30, 48], "sos1": [9, 17, 30], "solveattribut": [9, 48], "updateev": [9, 48], "uupper": 9, "writelevel": [9, 17, 29, 48], "written": [9, 17, 20, 23, 29, 34, 35, 41], "mst": [9, 17, 29], "decreas": [9, 17, 22, 41], "quantiti": [9, 44, 46], "allvar": [9, 17, 29], "discretevar": [9, 29], "discret": [9, 12, 16, 17, 29, 31, 32, 51], "semi": [9, 17, 19, 26, 31], "nonzerovar": [9, 29], "regardless": [9, 17, 54], "discretenonzerovar": 9, "auto": [9, 17, 29], "abstractconstraint": [10, 48], "_abstractbendersannot": [10, 12, 30], "is_ad": 10, "c2": [10, 17], "set_mandatori": 10, "mandatori": [10, 21, 27], "revert": 10, "prioriti": [10, 17, 27, 29, 45, 48], "binaryconstraint": [10, 48], "left_expr": 10, "ctsens": [10, 17], "right_expr": 10, "get_left_expr": 10, "get_right_expr": 10, "iter_vari": [10, 16, 17, 29, 30], "although": 10, "to_str": [10, 20, 30, 31], "use_spac": 10, "usual": [10, 17, 54], "equivalenceconstraint": [10, 19, 48], "truth_valu": 10, "logicalconstraint": [10, 48], "equival": [10, 12, 16, 17, 19, 25, 34], "satisfact": [10, 17, 29, 47], "truth": 10, "convers": [10, 17, 42, 43, 45, 54, 55], "meant": [10, 20, 30, 31], "ifthenconstraint": [10, 17, 48], "if_ct": [10, 17], "then_ct": [10, 17], "negat": [10, 16, 17], "indicatorconstraint": [10, 19, 48], "shorten": 10, "style": [10, 29, 40, 44, 45, 46, 51, 54], "active_valu": [10, 17], "add_ind": [10, 17], "opposit": [10, 16, 17, 54], "typic": [10, 17, 20, 21, 41, 46, 49], "trivial": 10, "linearoperand": [10, 12, 16], "expr1": [10, 17], "op": [10, 17, 18, 55], "expr2": [10, 17], "basis_statu": [10, 12], "some": [10, 12, 16, 17, 20, 26, 29, 33, 34, 41, 44, 45, 46, 47, 49, 50, 53, 54, 55], "still": [10, 12, 17], "has_basi": [10, 12, 17], "benders_annot": [10, 12, 30], "bender": [10, 12, 30], "annot": [10, 12, 30], "successfulli": [10, 12, 17, 29, 32, 41, 44, 55], "ok": [10, 38, 55], "sequenc": [10, 12, 17, 29, 30, 41, 54], "func": [10, 29, 44], "slack_valu": [10, 17, 29], "notequalconstraint": [10, 48], "negated_eqct": 10, "pwlconstraint": [10, 48], "pwl_expr": 10, "piecewis": [10, 17, 24, 26, 29], "pwl_func": 10, "quadraticconstraint": [10, 19, 48], "qexpr1": 10, "qexpr2": 10, "least": [10, 17, 22, 25, 26, 29, 45], "rangeconstraint": [10, 17, 19, 48], "stai": [10, 17, 40], "configur": [11, 35, 54], "engin": [11, 17, 18, 34, 36, 37, 46, 49, 51], "behaviour": [11, 35, 41], "advis": 11, "instanci": 11, "obtain": [11, 17, 28, 46, 54, 55], "make_default_context": [11, 17], "cplex_config": 11, "cplex_config_": 11, "hostnam": 11, "pythonpath": [11, 17, 44, 45], "cplex_paramet": [11, 17], "emphasi": [11, 32, 44], "memori": 11, "basecontext": [11, 48], "rootparametergroup": [11, 17, 18, 20, 48], "auto_publish": [11, 23, 34, 48], "publish": [11, 17, 22, 34, 48], "solve_detail": [11, 17, 28, 29, 43, 50], "result_output": 11, "kpis_output": 11, "filenam": [11, 18, 20, 23, 29, 34], "multipl": [11, 16, 17, 34, 41, 46], "csv": [11, 23, 33, 34], "kpis_output_field_nam": [11, 48], "kpis_output_field_valu": [11, 48], "log": [11, 17, 22, 34, 41, 44], "out": [11, 20, 29], "kpi_report": [11, 48], "filter_level": [11, 48], "filter": [11, 17, 22, 29, 34], "done": [11, 17, 44, 55], "progress": [11, 17, 48], "kpifilterlevel": 11, "unfilt": 11, "filterobjectiveandbound": 11, "filterobject": 11, "copi": [11, 16, 17, 20, 22, 24, 25, 26, 34], "shallow": 11, "file_list": 11, "config": [11, 34], "exist": [11, 13, 17, 34, 35, 36], "overrid": [11, 27, 32, 34, 35], "read_set": [11, 17], "invalidsettingsfileerror": [11, 48], "occur": [11, 17, 18, 22, 28, 29, 44, 51], "sinc": [11, 17, 22, 34, 41, 42, 43, 45, 46, 53, 54], "create_missing_nod": 11, "child": [11, 40, 44, 45, 46, 51], "recogn": [11, 21], "agent": 11, "nativ": 11, "stream": [11, 17, 20, 29, 34], "overwrit": [11, 17], "keyword": [11, 17, 18, 26], "alreadi": [11, 34, 35, 36, 54], "contextoverrid": [11, 48], "initial_context": 11, "mesg": 11, "solvercontext": [11, 48], "redefinit": [12, 15, 16, 22], "__eq__": [12, 16], "eth": 12, "consist": [12, 16, 17, 22, 29, 44, 45, 46, 47, 49, 50, 55], "pass": [12, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 29, 34, 41, 55], "get_kei": 12, "xa": 12, "is_binari": 12, "is_continu": 12, "is_discret": [12, 16, 31], "is_integ": 12, "iter_constraint": [12, 17], "travers": [12, 20], "ceil": 12, "reduced_cost": [12, 17], "reduc": [12, 17, 29, 39, 44, 49], "docplexexcept": [12, 16, 18, 24, 27], "succesfulli": 12, "sv": 12, "shorter": 12, "to_bool": [12, 50], "nonzero": [12, 16, 28, 44, 54], "floor": [12, 51], "reset": [12, 17, 20, 44], "infin": [12, 17], "vartyp": [12, 17, 48], "runtim": [13, 17, 18, 22, 35, 40, 46, 54], "invok": [13, 24, 41, 44], "shell": 13, "command": [13, 35, 36, 49, 51], "line": [13, 17, 54], "linux": [13, 35, 36], "usr": 13, "bin": 13, "cplex_studio129": 13, "x86": [13, 35], "64_linux": 13, "start_auto_configur": 13, "detect": [13, 17, 44, 53], "regard": [13, 41], "interest": [13, 22, 29, 41, 55], "get_cplex_modul": 13, "default_loc": 13, "sucess": 13, "cplex_studio_dir20101": 13, "cplex_studio_dir201": 13, "cplex_studio_dir1210": 13, "cplex_studio_dir129": 13, "cplex_studio_dir128": 13, "python_vers": 13, "platform": [13, 34, 35, 36], "has_cplex": 13, "has_numpi": 13, "has_panda": 13, "is_64bit": 13, "64": [13, 35, 36, 44], "bit": [13, 34, 36], "unsupportedplatformerror": [13, 48], "defaulterrorhandl": [14, 48], "output_level": [14, 18], "infolevel": [14, 48], "abstracterrorhandl": 14, "handler": [14, 34], "sever": [14, 22, 34, 44, 45, 52], "fatal": 14, "enabl": [14, 17, 40], "suppress": 14, "decisionkpi": [15, 17, 44, 48], "kpi_op": 15, "special": [15, 17, 22, 29, 30, 31, 42, 43, 45], "subclass": [15, 17, 18, 20, 22, 42, 43, 45], "emodel": 15, "latter": 15, "explicitli": [15, 17], "underli": [15, 34], "get_model": 15, "is_decision_express": 15, "functionalkpi": [15, 48], "attach": [15, 17, 22, 33, 34, 39], "attempt": [15, 55], "abstractlinearexpr": [16, 48], "get_coef": 16, "constantexpr": [16, 48], "cst": 16, "_subscriptionmixin": [16, 25], "docplexquadraticarithexcept": [16, 48], "linearexpr": [16, 17, 25, 48], "linear_expr": [16, 17], "plu": [16, 44, 45, 46], "add_term": 16, "coeff": 16, "clone": [16, 17, 20, 24, 25], "divid": [16, 24, 41, 44, 54], "permit": 16, "linear_express": 16, "equals_const": 16, "scalar": [16, 17], "is_const": 16, "5x": 16, "iter_term": [16, 25], "multipli": [16, 17, 24, 38, 41], "replac": [16, 17, 34, 42, 43], "snot": 16, "quotient": 16, "divis": [16, 41, 49, 50, 51], "remove_term": 16, "subtract": [16, 24, 46], "minu": [16, 17, 46, 51, 54], "monomialexpr": [16, 48], "safe": [16, 17], "zeroexpr": [16, 48], "context": [17, 23, 34, 42, 43, 48], "main": 17, "emb": 17, "statement": 17, "block": [17, 32], "alloc": [17, 42, 43, 45], "destroi": 17, "thread": [17, 34, 41, 42, 43, 44, 45], "altern": [17, 36], "checker": 17, "disabl": [17, 20], "everywher": 17, "turn": [17, 36, 41], "improv": [17, 22, 44], "caution": 17, "std": [17, 41], "nan": [17, 28], "neither": 17, "nor": 17, "trust": 17, "full": [17, 20, 29, 35], "union": 17, "typecheck": 17, "thoroughli": 17, "cts_by_nam": 17, "absolut": [17, 22, 42, 43, 45, 54, 55], "transform": [17, 41, 44, 46], "auxiliari": [17, 41, 44], "natur": [17, 28, 42, 43, 45], "ctname": [17, 42, 43, 45, 54], "newli": [17, 18, 44], "add_constraint_": 17, "batch": 17, "c1": 17, "comprehens": 17, "yield": [17, 20, 44], "consttraint": 17, "add_quadratic_constraint": 17, "add_constraints_": 17, "anyth": [17, 36], "add_equival": 17, "true_valu": 17, "trigger": [17, 34], "add_equivalence_constraint": 17, "eqct": 17, "equivalence_constraint": 17, "add_equivalence_constraints_": 17, "length": [17, 24, 34, 41, 49, 51, 55], "add_if_then": 17, "govern": 17, "becom": [17, 42, 43, 45], "soon": 17, "reli": [17, 29], "On": [17, 34, 50], "extra": [17, 41, 44, 54, 55], "bvar": 17, "plain": [17, 29], "syntax": [17, 20], "add_indicator_constraint": 17, "indct": 17, "indicator_constraint": 17, "add_indicator_constraints_": 17, "kpi_arg": 17, "seper": 17, "profit": [17, 38, 40, 41, 49], "resp": 17, "add_lazy_constraint": 17, "lazy_ct": 17, "add_mip_start": [17, 41], "mip_start_sol": 17, "effort_level": 17, "write_level": [17, 29], "complete_var": 17, "eps_zero": 17, "featur": [17, 34, 36, 37, 41, 44, 54], "warm": [17, 29], "ore": [17, 41], "witelevel": 17, "nonzerodiscretevar": [17, 29], "By": [17, 18, 26, 42, 43, 51, 54], "optin": 17, "doplex": 17, "succe": [17, 18, 27, 38], "winclud": 17, "ones": 17, "add_progress_listen": [17, 22], "listen": [17, 22], "progresslisten": [17, 22, 48], "qc": 17, "contraint": 17, "rng_name": 17, "interv": [17, 24, 34, 54], "smaller": [17, 41, 54], "constr": [17, 19, 48], "add_so": [17, 30], "sos_arg": 17, "sos2": [17, 30], "seri": [17, 36, 40, 41, 44, 51, 54], "unord": 17, "add_sos1": [17, 30], "add_sos2": [17, 30], "add_user_cut_constraint": 17, "cut_ct": 17, "binaryvartyp": [17, 31, 48], "binary_var_cub": [17, 40], "keys1": [17, 41, 44, 46, 50, 54], "keys2": [17, 41, 44, 46, 50, 54], "keys3": 17, "key_format": 17, "triplet": [17, 25], "k1": [17, 29], "k2": [17, 29], "k3": 17, "retriev": [17, 34, 54], "empti": [17, 21, 29, 30, 40, 41, 44, 45, 46, 51], "interpret": [17, 29, 34, 36], "contribut": [17, 41], "x_k1": 17, "x_k2": 17, "surround": 17, "z_0": 17, "z_1": 17, "z_2": 17, "cartesian": 17, "product": [17, 25, 35, 40, 41, 44, 49], "coupl": [17, 41, 42, 43, 44, 45, 46, 55], "binary_vartyp": 17, "blended_objective_valu": 17, "blend": [17, 29, 46, 49], "build_multiobj_paramset": [17, 43], "timelimit": [17, 32, 42, 43], "mipgap": [17, 20, 32, 43, 44, 45], "pre": 17, "parameterset": 17, "multi": [17, 28, 29, 43, 49], "lex_timelimit": 17, "lex_mipgap": 17, "change_var_lower_bound": 17, "check_bound": 17, "ivar": 17, "change_var_typ": 17, "vartype_arg": 17, "discard_incompatible_solut": 17, "incompat": [17, 42, 43], "discard": [17, 18], "change_var_upper_bound": 17, "103": 17, "01": [17, 44], "clear": [17, 22, 29, 55], "clear_constraint": 17, "clear_kpi": 17, "clear_lazy_constraint": 17, "clear_mip_start": 17, "via": [17, 34, 35, 36, 40], "interb": 17, "previou": [17, 32, 40, 41, 44, 54], "fresh": 17, "nd": 17, "forget": 17, "clean_before_solv": [17, 43], "clear_multi_object": 17, "had": 17, "previous": [17, 44], "noth": [17, 22, 23, 29, 34], "clear_progress_listen": 17, "clear_so": 17, "clear_user_cut_constraint": 17, "new_nam": 17, "clone_kwarg": 17, "deep": [17, 20], "continuousvartyp": [17, 31, 48], "continuous_var_cub": 17, "share": [17, 22, 45, 51], "vari": 17, "create_parameter_set": [17, 43], "coef": 17, "synonym": [17, 18], "scal_prod": [17, 38], "dotf": 17, "coef_fn": 17, "assume_alldiffer": 17, "variant": 17, "asrgument": 17, "xxx_var_dict": 17, "xx_var_var_matrix": 17, "dimension": [17, 51], "xxx_var_matrix": 17, "var_cub": 17, "anumb": 17, "One": [17, 44, 45], "dimens": [17, 44, 46], "whichi": 17, "ndicat": 17, "dicitonari": [17, 22, 29], "xxx_var": 17, "si": 17, "wrong": 17, "incorrect": 17, "dictionai": [17, 22], "m1": [17, 41, 44], "b_1_1": 17, "b_1_2": 17, "b_2_1": 17, "b_2_2": 17, "pure": [17, 29], "dump_as_sav": 17, "basenam": [17, 18, 29], "sav": [17, 18], "place": [17, 29, 51], "tempfil": [17, 29], "gettempdir": [17, 29], "pathnam": 17, "don": [17, 53], "t": [17, 38, 40, 41, 42, 43, 50, 51, 53, 54], "anymor": 17, "hide_user_nam": 17, "x1": 17, "x2": 17, "mymodel": [17, 18], "foo": [17, 18], "home": [17, 29, 35, 36, 37], "docplex_": 17, "docplex_mymodel": 17, "export_as_lp_str": 17, "export_as_mp": 17, "export_as_mps_str": 17, "export_as_sav": 17, "export_as_sav_str": 17, "byte": [17, 34], "export_as_savgz": 17, "compress": 17, "export_priority_order_fil": 17, "success": [17, 27, 29, 50, 54], "export_to_stream": 17, "format_spec": 17, "stringio": [17, 44, 45], "sent": 17, "find_matching_linear_constraint": 17, "match_cas": [17, 29], "anonym": [17, 44], "match": [17, 21, 27, 29, 36, 40, 44, 45, 49, 50, 51, 54], "find_matching_quadratic_constraint": 17, "find_re_matching_var": 17, "regexpr": 17, "regular": [17, 46], "din": 17, "re": [17, 40, 41, 44, 46, 47, 54, 55], "digit": 17, "decim": 17, "ge_constraint": 17, "get_constraint_by_index": 17, "rememb": [17, 46, 55], "separ": [17, 20, 25, 41, 44, 45, 54], "space": [17, 34], "get_constraint_by_nam": 17, "fly": 17, "duplic": 17, "my_model": 17, "get_cplex": [17, 43], "do_rais": [17, 21], "get_cut": [17, 29], "get_num_cut": [17, 29], "cut_typ": [17, 29], "get_objective_expr": 17, "get_parameter_from_id": 17, "parameter_cpx_id": 17, "2009": [17, 51], "get_quadratic_constraint_by_index": 17, "therefor": 17, "constrait": 17, "jobsolvestatu": 17, "solvedetail": [17, 28, 29, 48], "eg": 17, "status_cod": [17, 28], "get_time_limit": 17, "get_var_by_nam": 17, "has_multi_object": 17, "if_then": 17, "ct1": 17, "ct2": 17, "ignore_nam": [17, 18], "ignor": [17, 18, 29, 34, 44], "lead": [17, 34], "onc": [17, 34, 50], "restor": [17, 22, 32], "import_solut": 17, "source_solut": 17, "target": [17, 49], "simplest": 17, "oth": 17, "rmodel": 17, "predefin": [17, 27], "eimag": 17, "init_numpi": 17, "awar": 17, "repr": 17, "restore_numpi": 17, "integervartyp": [17, 31, 48], "integer_var_cub": 17, "ij_0": 17, "ij_1": 17, "ij_2": 17, "concaten": 17, "arbitrari": [17, 45], "__name_": 17, "__": 17, "__name_0__": 17, "__name_1__": 17, "_name__2__": 17, "q": [17, 25], "q_0": 17, "q_1": 17, "q_3": 17, "q2": [17, 25], "q3": 17, "is_optim": 17, "happen": [17, 22, 34, 54, 55], "remove_object": 17, "iter_binary_constraint": 17, "iter_binary_var": 17, "iter_continuous_var": 17, "iter_equivalence_constraint": 17, "iter_indicator_constraint": 17, "iter_integer_var": 17, "iter_kpi": [17, 46], "iter_lazy_constraint": 17, "iter_linear_constraint": 17, "iter_mip_start": 17, "iter_progress_listen": 17, "iter_pwl_constraint": 17, "pwl": [17, 48], "iter_pwl_funct": 17, "iter_quadratic_constraint": 17, "iter_range_constraint": 17, "iter_semicontinuous_var": 17, "iter_semiinteger_var": 17, "iter_so": 17, "iter_sos1": 17, "iter_sos2": 17, "iter_user_cut_constraint": 17, "kpi_by_nam": [17, 29, 39, 54], "try_match": 17, "fetch": 17, "exact": [17, 29], "substr": 17, "co2": 17, "dummi": [17, 29], "kpi_value_by_nam": [17, 29], "bool": 17, "new_solut": [17, 41], "kpis_as_dict": 17, "kpi_filt": 17, "objective_kei": 17, "use_nam": 17, "predic": [17, 29], "eobject": 17, "linear_constraint": 17, "linear_constraint_basis_status": 17, "lct": [17, 29], "detailt": 17, "logical_and": 17, "AND": 17, "logical_or": 17, "logical_not": 17, "xor": 17, "logxor": 17, "b1": 17, "b2": 17, "lp_line_length": 17, "maximum": [17, 20, 29, 34, 40, 41, 42, 43, 44, 54, 55], "lp_string": 17, "e3": 17, "x3": 17, "maximize_static_lex": 17, "abstol": 17, "reltol": 17, "objnam": 17, "lexicograph": [17, 55], "rel": [17, 22, 28, 55], "minimum": [17, 20, 22, 29, 46, 55], "minimize_static_lex": [17, 39, 43], "mip_start": 17, "multi_objective_valu": [17, 29], "number_of_binary_vari": [17, 19], "number_of_constraint": 17, "number_of_continuous_vari": [17, 19], "number_of_equivalence_constraint": [17, 19], "number_of_indicator_constraint": [17, 19], "number_of_integer_vari": [17, 19], "number_of_lazy_constraint": 17, "number_of_linear_constraint": [17, 19], "number_of_range_constraint": [17, 19], "number_of_mip_start": 17, "number_of_progress_listen": 17, "number_of_pwl_constraint": 17, "number_of_quadratic_constraint": [17, 19], "number_of_semicontinuous_vari": [17, 19], "number_of_semiinteger_vari": [17, 19], "number_of_so": 17, "number_of_sos1": 17, "number_of_sos2": 17, "number_of_user_constraint": 17, "toth": 17, "number_of_user_cut_constraint": 17, "objective_coef": 17, "objective_expr": [17, 54], "objective_sens": 17, "direct": [17, 34, 54], "root": [17, 20, 41, 44, 45], "0001": [17, 20], "02": [17, 44], "parametergroup": [17, 20, 48], "preslop": [17, 24], "breaksxi": 17, "postslop": [17, 24], "breakpoint": [17, 24], "half": [17, 44, 50], "slope": [17, 24], "x_valu": 17, "discontinu": [17, 24], "piecewise_as_slop": [17, 24], "slopebreaksx": 17, "lastslop": 17, "anchor": 17, "breakx": 17, "consecut": [17, 51, 54], "purpos": [17, 29, 44, 51], "ground": 17, "illustr": [17, 41, 45, 49, 51], "popul": [17, 29, 49], "pool": [17, 29], "solutiion": 17, "solutionpool": [17, 29, 48], "populate_solution_pool": 17, "breakdown": [17, 44, 46, 55], "print_zero": 17, "solution_header_fmt": 17, "var_value_fmt": 17, "header": [17, 44], "problem_typ": [17, 28], "requyir": 17, "qp": 17, "miqp": 17, "qcp": 17, "miqcp": 17, "quad_expr": [17, 25], "quad": [17, 48], "quadexpr": [17, 25, 48], "quadratic_dual_slack": 17, "quality_metr": 17, "range_constraint": 17, "read_basis_fil": 17, "bas_path": 17, "extens": [17, 33, 34], "ba": 17, "read_mip_start": 17, "mst_path": 17, "read_priority_order_fil": 17, "ord_path": 17, "ord": 17, "accapt": 17, "remove_constraint": 17, "ct_arg": 17, "remove_kpi": 17, "subsequ": [17, 41, 44], "has_object": [17, 29], "remove_progress_listen": 17, "selected_kpi": 17, "kpi_format": [17, 22], "companion": 17, "undo": 17, "round_solut": 17, "round": [17, 44, 46], "99999": 17, "cal_prod": 17, "unexpect": 17, "scal_prod_f": [17, 42], "scal_prod_vars_all_differ": 17, "fastli": 17, "semicontinuous_var": 17, "strictli": 17, "semicontinuousvartyp": [17, 31, 48], "semicontinuous_var_dict": 17, "semiintegervartyp": [17, 31, 48], "semicontinuous_var_list": 17, "semicontinuous_var_matrix": 17, "semicontinu": [17, 19, 31], "semiinteger_var_dict": 17, "semicontinuous_vartyp": 17, "semiinteger_var": 17, "semiinteger_var_list": 17, "semiinteger_var_matrix": 17, "semiinteg": [17, 31], "semiinteger_vartyp": 17, "semiintegertyp": 17, "set_lex_multi_object": 17, "fashion": 17, "set_lp_start_basi": 17, "dvar_stat": 17, "lct_stat": 17, "set_multi_object": 17, "togeth": [17, 45, 46, 49], "allexpress": 17, "set_multi_objective_abstol": 17, "set_multi_objective_expr": 17, "set_multi_objective_reltol": 17, "set_object": 17, "set_time_limit": 17, "time_limit": 17, "might": [17, 22, 29, 34, 36, 53, 55], "normal": [17, 28, 40, 44, 45, 46, 51, 54], "pick": 17, "up": [17, 37], "parameter_set": [17, 43], "reason": [17, 39, 49, 55], "why": [17, 55], "proper": [17, 20], "infeasibilti": 17, "unbounded": 17, "sdetail": [17, 29, 48], "elaps": [17, 22, 44], "node": [17, 20, 22, 28, 40, 41, 44, 45], "final": [17, 42, 43, 44, 45, 46, 55], "solve_statu": 17, "solve_with_go": 17, "goal_nam": 17, "write_pass_fil": 17, "solution_callbackfn": 17, "ither": 17, "asingl": 17, "wors": 17, "98": [17, 44], "revers": [17, 55], "model_stat": [17, 48], "modelstatist": [17, 19, 48], "str_use_spac": 17, "especi": 17, "3y": 17, "5z": 17, "compact": [17, 41, 55], "quadray": 17, "sum_squar": 17, "sum_var": 17, "sum_vars_all_differ": 17, "summat": [17, 44], "due": [17, 39, 49, 51], "fact": [17, 41], "sumsq": 17, "concret": [17, 22], "domain": 17, "var_basis_status": 17, "var_hypercub": 17, "vartype_spec": 17, "seq_of_kei": 17, "analog": 17, "specifics": 17, "translat": [17, 24, 27, 34, 48], "cube": 17, "xx_var_matrix": 17, "famili": [17, 40, 44, 45, 46, 51], "hc": 17, "2x2x4": 17, "four": [17, 46], "hypercub": 17, "modelread": [18, 48], "read_model": [18, 48], "model_nam": 18, "model_class": 18, "modelpass": 18, "temp": [18, 29], "docplex_foo": 18, "odel": 18, "compat": [18, 29, 44], "read_ops_fil": 18, "opl": 18, "cpo": [18, 35], "pak": 18, "experi": [18, 35, 36, 37], "read_prm": 18, "prm": [18, 20], "modelreadererror": [18, 48], "msg": [18, 34], "gz": 18, "contructor": 18, "exceot": 18, "solver_ag": 18, "gather": [19, 36], "get_statist": 19, "counter": 19, "number_of_eq_constraint": 19, "number_of_ge_constraint": 19, "number_of_le_constraint": 19, "compris": [19, 51], "readabl": [19, 20, 51], "boolparamet": [20, 48], "cpx_name": 20, "param_kei": 20, "descript": [20, 29, 47], "default_valu": 20, "accept_valu": 20, "new_valu": 20, "intparamet": [20, 48], "min_valu": 20, "max_valu": 20, "sync": [20, 41, 44, 45], "numparamet": [20, 48], "cpx_id": 20, "cpx_param_epgap": 20, "workdir": 20, "optimalitytarget": 20, "is_default": 20, "is_nondefault": 20, "qualified_nam": [20, 32], "qualifi": [20, 32, 35], "guarante": [20, 34], "often": [20, 24], "parent_group": 20, "come": [20, 46], "generate_nondefault_param": 20, "subgroup": 20, "generate_param": 20, "recurs": 20, "is_root": 20, "iter_param": 20, "directparamet": 20, "number_of_param": 20, "number_of_subgroup": 20, "sep": 20, "include_root": 20, "mip_cut": 20, "cover": [20, 44], "total_number_of_param": 20, "insid": [20, 27, 34, 41, 47, 49, 54], "positiveintparamet": [20, 48], "cplex_vers": 20, "export_prm": 20, "overload_param": 20, "addit": [20, 22, 24, 29, 34, 44, 45, 46, 52, 53], "kept": [20, 34], "export_prm_to_str": 20, "merg": [20, 44, 54], "temporari": [20, 29, 32], "print_info_to_stream": 20, "print_default": 20, "indent_level": 20, "human": [20, 36, 39, 49], "print_info_to_str": 20, "strparamet": [20, 48], "very_low": 21, "low": [21, 45], "medium": [21, 27, 45], "high": [21, 27, 36, 45], "very_high": 21, "accept_non": 21, "default_prior": [21, 27], "set_prior": 21, "monitor": 22, "protocol": 22, "mipinfocallback": 22, "cplexcloud": 22, "At": [22, 55], "receiv": [22, 51], "notify_progress": 22, "progressdata": [22, 48], "suit": 22, "dure": [22, 28], "textprogresslisten": [22, 48], "solutionlisten": [22, 48], "notify_solut": 22, "frequenc": 22, "chose": [22, 55], "kind": [22, 41, 44, 54], "realli": 22, "summar": [22, 44, 55], "clock": 22, "chosen": [22, 55], "solutionrecord": [22, 48], "functionalsolutionlisten": [22, 48], "solution_fn": 22, "progressclock": [22, 48], "absdiff": 22, "reldiff": 22, "No": [22, 40, 44], "caught": 22, "redefin": [22, 29, 42, 43, 45, 55], "kpilisten": [22, 48], "defaul": 22, "ti": 22, "kpi_dict": 22, "kpiprint": [22, 48], "itcnt": [22, 44], "bestbound": 22, "necessarili": 22, "impriv": 22, "descend": 22, "has_incumb": 22, "current_object": 22, "best_bound": [22, 28], "current_nb_iter": 22, "current_nb_nod": 22, "remaining_nb_nod": 22, "det_tim": 22, "_tprogressdata": 22, "reeiv": 22, "moment": 22, "remain": 22, "determinist": [22, 28, 44], "progressdatarecord": [22, 48], "iter_record": 22, "progress_data": 22, "notify_start": 22, "intern": [22, 34, 42, 43], "superclass": 22, "record": [22, 34, 50], "clock_arg": 22, "_abstractprogresslisten": 22, "abort": [22, 34], "tell": [22, 44], "criteria": [22, 46, 49], "below": [22, 44, 45, 46], "threshold": 22, "current_progress_data": 22, "notify_end": 22, "callback": [22, 34, 48], "priogress": 22, "iter_solut": 22, "redefint": 22, "number_of_solut": 22, "gap_fmt": 22, "obj_fmt": 22, "frame": [23, 34, 44, 51, 54], "write_output_t": 23, "df": [23, 34], "output_property_nam": 23, "output_nam": 23, "output_propert_nam": 23, "somesolv": 23, "output_custom": 23, "someth": 23, "autopublish": 23, "somesolver_output": 23, "output_table_property_nam": 23, "default_output_table_nam": 23, "output_table_custom": 23, "datafram": [23, 29, 33, 34, 40, 41, 44, 45, 46, 51], "output_table_using_df": 23, "pwlfunction": [24, 48], "pwl_def": 24, "give": [24, 41, 44, 45, 49, 52, 54], "linearli": 24, "along": [24, 44, 45], "x_val": 24, "lx": 24, "rx": 24, "factor": [24, 40], "horizont": 24, "get_quadratic_coeffici": 25, "var1": 25, "var2": 25, "has_quadratic_term": 25, "is_separ": 25, "iter_quad_triplet": 25, "v1": 25, "linear_part": 25, "number_of_quadratic_term": 25, "q1": 25, "linearrelax": [26, 48], "linear_relax": 26, "return_parti": 26, "copy_paramet": 26, "anywai": 26, "unrelax": 26, "encount": 26, "functionalpriorit": [27, 48], "priorit": [27, 45, 48], "mappingpriorit": [27, 48], "priority_map": 27, "matchnamepriorit": [27, 48], "priority_for_unnam": 27, "priority_for_non_match": 27, "case_sensit": 27, "get_prior": 27, "namedpriorit": [27, 48], "functor": 27, "constraintpriorit": 27, "conveni": [27, 41, 44, 54, 55], "unnam": 27, "get_relax": 27, "is_relax": 27, "iter_relax": 27, "violat": 27, "number_of_relax": 27, "relax_mod": 27, "mode": [27, 34, 44], "relaxed_objective_valu": 27, "toutputt": [27, 48], "uniformpriorit": [27, 48], "dettim": 28, "status_str": 28, "ncolumn": 28, "miprelgap": 28, "n_iter": 28, "n_nodes_process": 28, "never": [28, 31, 42, 43], "deterministic_tim": 28, "tick": [28, 41, 44, 45], "percentag": 28, "has_hit_limit": 28, "hit": 28, "mip_relative_gap": 28, "nb_iter": [28, 54], "usd": 28, "nb_linear_nonzero": 28, "nb_nodes_process": 28, "callabl": 28, "cpxxgetstatstr": 28, "getstatstr": 28, "proven": 28, "mip_time_limit_feas": 28, "promot": [28, 40], "exceed": 28, "1016": 28, "macro": 28, "solution_status_cod": 28, "fulli": [29, 34, 44], "describe_object": 29, "poolobject": 29, "stat": 29, "export_as_sol": 29, "mean_objective_valu": 29, "deviat": [29, 44, 45], "var_value_map": 29, "blended_obj_by_prior": 29, "solved_bi": 29, "keep_zero": 29, "add_var_valu": [29, 41], "var_kei": 29, "as_df": 29, "name_kei": 29, "value_kei": 29, "cilumn": 29, "check_as_mip_start": 29, "strong_check": 29, "unchang": [29, 32], "__contains_": 29, "file_or_filenam": 29, "xml": 29, "export_as_json_str": 29, "export_as_mst": 29, "prob": 29, "myprob1": 29, "my_": 29, "s_mipstart": 29, "my_prob_mipstart": 29, "fileformat": 29, "topic": [29, 36], "from_fil": 29, "get_blended_objective_value_by_prior": 29, "no_solut": 29, "get_dual_valu": 29, "get_objective_valu": 29, "get_reduced_cost": 29, "get_sensit": 29, "sensit": 29, "lower_bound": 29, "upper_bound": 29, "get_slack": 29, "get_statu": [29, 50], "particularli": [29, 44, 45], "__getitem__": [29, 34], "get_value_df": 29, "value_column_nam": 29, "key_column_nam": 29, "xx_var_dict": 29, "ekei": 29, "get_value_dict": 29, "get_value_list": 29, "var_seq": 29, "is_empti": 29, "is_feasible_solut": 29, "silent": 29, "is_valid_solut": 29, "iter_var_valu": 29, "compon": [29, 55], "distinguish": 29, "number_of_var_valu": 29, "print_mst": 29, "set_objective_valu": 29, "var_values_iter": 29, "sosvariableset": [30, 48], "variable_sequ": 30, "sos_typ": 30, "default_lb": 31, "cplex_typecod": 31, "default_ub": 31, "model_object": [32, 48], "temp_obj": 32, "temp_sens": 32, "contextu": 32, "temporarili": [32, 34], "mdl2": 32, "exit": 32, "overridden": 32, "model_paramet": [32, 48], "temp_paramet": 32, "empahsi": 32, "tolernac": 32, "model_solvefix": [32, 48], "solvefix": 32, "solvefixex": 32, "mfunction": 32, "encode_csv_str": [33, 48], "doubl": 33, "quot": 33, "write_table_as_csv": [33, 48], "field_nam": 33, "transact": [33, 34, 42, 43], "independ": 34, "premis": 34, "worker": [34, 39], "adapt": 34, "open": [34, 51, 52, 55], "get_input_stream": [34, 48], "split": [34, 50, 51], "fragment": 34, "38": [34, 42, 43, 44, 45, 54], "default_environ": 34, "read_df": [34, 48], "write_df": [34, 48], "get_available_core_count": [34, 48], "get_paramet": [34, 48], "update_solve_detail": [34, 48], "add_abort_callback": [34, 48], "remove_abort_callback": [34, 48], "abstractlocalenviron": [34, 48], "core": [34, 40, 44, 45, 46, 51, 54], "job": 34, "set_output_attach": [34, 48], "entri": [34, 38, 55], "26": [34, 40, 42, 43, 44, 45, 54], "appropri": [34, 40, 49, 50], "correct": 34, "abort_callback": 34, "script": [34, 49], "your_cb": 34, "solution_storage_handl": 34, "default_solution_storage_handl": [34, 48], "record_history_field": 34, "histori": 34, "record_history_s": 34, "record_interv": 34, "create_transact": 34, "outputattachmenttransact": [34, 48], "get_engine_log_level": 34, "oaa": 34, "engineloglevel": 34, "fine": 34, "finer": 34, "finest": 34, "debug": [34, 49], "get_stop_callback": 34, "stop_callback": 34, "deprec": 34, "is_debug_mod": 34, "publish_solve_detail": 34, "read_csv": 34, "read_msgpack": 34, "notavailableerror": [34, 48], "set_stop_callback": 34, "cb": 34, "store_solut": 34, "serial": 34, "send": [34, 51], "servic": [34, 35, 36, 39, 40, 46, 49, 52], "rate": [34, 40, 44, 45, 46], "de": 34, "writer": 34, "localenviron": [34, 48], "commit": [34, 49], "wait": [34, 41, 44, 45], "publush": 34, "overrideenviron": [34, 48], "new_env": 34, "solvedetailsfilt": [34, 48], "respons": [34, 40], "make_attachment_nam": [34, 48], "restrict": [34, 51], "255": 34, "charact": [34, 42, 43, 45], "ascii": 34, "unauthor": 34, "conform": 34, "valueerror": 34, "maketran": [34, 48], "usabl": 34, "unicod": 34, "ordin": 34, "lookup": 34, "lookuperror": 34, "untouch": 34, "delet": 34, "to_csv": 34, "to_msgpack": 34, "\u00bd": [35, 36, 37, 49, 52, 53], "\u00bc": [35, 36, 37, 49, 52, 53], "\u215b": [35, 36, 37, 49, 52, 53], "\u00be": [35, 36, 37, 49, 52, 53], "\u215c": [35, 36, 37, 49, 52, 53], "\u215d": [35, 36, 37, 49, 52, 53], "\u215e": [35, 36, 37, 49, 52, 53], "\u00b5": [35, 36, 37, 49, 52, 53], "\u03c9": [35, 36, 37, 49, 52, 53], "\u00aa": [35, 36, 37, 49, 52, 53], "\u00ba": [35, 36, 37, 49, 52, 53], "\u00b9": [35, 36, 37, 49, 52, 53], "\u00b2": [35, 36, 37, 49, 52, 53], "\u00b3": [35, 36, 37, 49, 52, 53], "addition": 35, "develop": [35, 52], "deploy": 35, "anacondacloud": 35, "ai": 35, "join": [35, 41, 44, 54], "softwar": [35, 52], "charg": 35, "deploi": 35, "host": [35, 36], "ultim": 35, "inspect": 35, "cplex_studio_dirxxx": 35, "1000": [35, 41, 46], "tool": [35, 46, 51, 52], "easi": [35, 36, 44, 55], "upgrad": [35, 36], "uninstal": [35, 36], "readm": [35, 36], "md": [35, 36], "distribut": [35, 36], "osx": 35, "anaconda": [35, 36], "continuum": [35, 36], "channel": [35, 36, 40], "ppc64le": [35, 36], "verifi": 36, "lifespan": 36, "matcht": 36, "mac": 36, "aix": 36, "plinux": 36, "diagnos": [36, 49], "editor": 36, "debugg": 36, "pycharm": 36, "pydev": 36, "good": [36, 41, 51, 54], "popular": 36, "scienc": [36, 37], "analysi": [36, 40], "visual": [36, 45], "microsoft": 36, "easiest": 36, "browser": [36, 54], "minut": 36, "clean": [36, 41], "extract": [36, 54], "onlin": [36, 52], "train": 36, "cours": [36, 41, 44, 55], "everybodi": 36, "michigan": 36, "univers": 36, "introduct": 36, "rice": 36, "big": 36, "hard": 36, "modern": 36, "bill": [36, 50, 51], "lubanov": 36, "5th": 36, "lutz": 36, "micha": 36, "gorelick": 36, "doug": 36, "hellmann": 36, "cookbook": 36, "david": [36, 42, 43, 44, 45], "beazlei": 36, "brian": 36, "jone": 36, "essenti": 36, "nutshel": 36, "alex": 36, "martelli": 36, "scientif": [36, 46], "scratch": 36, "principl": 36, "joel": 36, "gru": 36, "wrangl": 36, "ipython": [36, 40, 44, 45, 46, 51, 54], "mckinnei": 36, "scipi": 36, "overview": [36, 37, 49], "eli": 36, "bressert": 36, "beginn": 36, "ivan": 36, "idri": 36, "confer": 36, "social": 37, "media": 37, "page": [37, 48], "inspir": 38, "adventur": 38, "blog": [38, 39], "articl": 38, "lagrangian": [38, 49], "builtin": 38, "run_gap_model": 38, "wolsei": 38, "number_of_c": 38, "xv": 38, "ii": 38, "total_profit": 38, "x_i": 38, "c_i": 38, "run_gap_model_with_lagrangian_relax": 38, "max_it": 38, "c_rang": 38, "p_var": 38, "pv": 38, "ep": [38, 54], "initial_multipli": 38, "rebuilt": 38, "total_penalti": 38, "penalti": 38, "do_stop": 38, "justifi": 38, "penalized_viol": 38, "scale_factor": 38, "run_default_gap_model_with_lagrangian_relax": 38, "gap_best_obj": 38, "relaxed_best": 38, "objectivevalu": 38, "balanc": [39, 40, 44, 45, 49], "server": [39, 49, 55], "rebalanc": [39, 49], "sleep": [39, 49], "across": [39, 44, 49, 55], "multiobject": [39, 43, 49], "yhathq": 39, "post": [39, 41, 42, 43, 45, 54], "yhat": 39, "tuser": 39, "current_serv": 39, "server002": 39, "server003": 39, "server001": 39, "server006": 39, "server007": 39, "server004": 39, "server005": 39, "user013": 39, "user014": 39, "user015": 39, "user016": 39, "user017": 39, "user018": 39, "user019": 39, "user020": 39, "user021": 39, "user022": 39, "user023": 39, "user024": 39, "user025": 39, "user026": 39, "user027": 39, "user028": 39, "user029": 39, "user030": 39, "user031": 39, "user032": 39, "user033": 39, "user034": 39, "user035": 39, "user036": 39, "user037": 39, "user038": 39, "user039": 39, "user040": 39, "user001": 39, "user002": 39, "user003": 39, "user004": 39, "user005": 39, "user006": 39, "user007": 39, "user008": 39, "user009": 39, "user010": 39, "user011": 39, "user012": 39, "user062": 39, "user063": 39, "user064": 39, "user065": 39, "user066": 39, "user067": 39, "user068": 39, "user069": 39, "user070": 39, "user071": 39, "user072": 39, "user073": 39, "user074": 39, "user075": 39, "user076": 39, "user077": 39, "user078": 39, "user079": 39, "user080": 39, "user081": 39, "user082": 39, "user041": 39, "user042": 39, "user043": 39, "user044": 39, "user045": 39, "user046": 39, "user047": 39, "user048": 39, "user049": 39, "user050": 39, "user051": 39, "user052": 39, "user053": 39, "user054": 39, "user055": 39, "user056": 39, "user057": 39, "user058": 39, "user059": 39, "user060": 39, "user061": 39, "prepar": [39, 42, 43], "default_max_processes_per_serv": 39, "_is_migr": 39, "build_load_balancing_model": 39, "users_": 39, "max_process_per_serv": 39, "user_row": 39, "active_var_by_serv": 39, "isact": 39, "user_server_pair_nam": 39, "u_": 39, "s_to_": 39, "assign_user_to_server_var": 39, "active_serv": 39, "ct_name": 39, "ct_assign_to_active_": 39, "ct_unique_server_": 39, "number_of_active_serv": 39, "svr": 39, "number_of_migr": 39, "migrat": 39, "max_sleeping_workload": 39, "max_sleeping_process": 39, "ct_define_max_sleeping_": 39, "workload": 39, "artefact": [39, 55], "lb_report": 39, "make_default_load_balancing_model": 39, "lb_save_solution_as_json": 39, "solution_dict": 39, "sleeping_process": 39, "user_assign": 39, "lbm": 39, "slrm": 40, "Such": 40, "assist": 40, "probabl": 40, "benefici": 40, "relationship": 40, "market": [40, 49], "center": 40, "bank": 40, "depart": [40, 42, 43, 44, 45, 49], "campaign": [40, 49], "financi": [40, 49], "datasci": [40, 49], "characterist": 40, "who": [40, 44, 45, 51], "respond": 40, "favor": [40, 54], "offerig": 40, "respect": [40, 44, 46, 55], "gift": 40, "newslett": 40, "seminar": 40, "confid": 40, "139987": 40, "pension": 40, "13221": 40, "mortgag": 40, "10675": 40, "certainli": 40, "wherea": 40, "140030": 40, "95678": 40, "84446": 40, "spss": 40, "declar": [40, 44, 47], "pd": [40, 41, 44, 45, 46, 51, 54], "guadalup": 40, "martinez": 40, "michel": 40, "lopez": 40, "140089": 40, "terri": 40, "ridglei": 40, "140097": 40, "miranda": 40, "roush": 40, "139068": 40, "sandra": 40, "wynkoop": 40, "139154": 40, "roland": 40, "gu": 40, "rett": 40, "139158": 40, "fabien": 40, "mailhot": 40, "139169": 40, "christian": 40, "austerlitz": 40, "139220": 40, "steffen": 40, "meister": 40, "139261": 40, "wolfgang": 40, "sanger": 40, "139416": 40, "lee": 40, "tsou": 40, "139422": 40, "sanaa": 40, "hikmah": 40, "hakimi": 40, "139532": 40, "miroslav": 40, "skaroupka": 40, "139549": 40, "blomqvist": 40, "139560": 40, "Will": 40, "henderson": 40, "139577": 40, "yuina": 40, "ohira": 40, "139580": 40, "vlad": 40, "alekseeva": 40, "139636": 40, "cassio": 40, "lombardo": 40, "139647": 40, "triniti": 40, "zelaya": 40, "miramont": 40, "139649": 40, "eldar": 40, "muravyov": 40, "139665": 40, "shu": 40, "139667": 40, "jameel": 40, "abdul": 40, "ghani": 40, "gerg": 40, "139696": 40, "zeeb": 40, "longoria": 40, "marrero": 40, "139752": 40, "matheu": 40, "azevedo": 40, "melo": 40, "139832": 40, "earl": 40, "wood": 40, "139859": 40, "gabrielli": 40, "sousa": 40, "martin": 40, "139881": 40, "franca": 40, "palermo": 40, "80233": 40, "80506": 40, "28391": 40, "95676": 40, "82269": 40, "16428": 40, "86779": 40, "13225": 40, "28934": 40, "95675": 40, "27248": 40, "16188": 40, "83426": 40, "75925": 40, "car": 40, "loan": 40, "productvalu": 40, "400": [40, 54], "budgetshar": 40, "availablebudget": 40, "customerid": 40, "product1": 40, "confidence1": 40, "product2": 40, "confidence2": 40, "insert": 40, "forecast": 40, "css": [40, 44, 45, 46, 51], "bodi": [40, 44, 45, 46, 51], "margin": [40, 44, 45, 46, 51], "font": [40, 44, 45, 46, 51], "helvetica": [40, 44, 45, 46, 51], "border": [40, 44, 45, 46, 51], "collaps": [40, 44, 45, 46, 51], "tr": [40, 44, 45, 46, 51], "td": [40, 44, 45, 46, 51], "1px": [40, 44, 45, 46, 51], "solid": [40, 44, 45, 46, 51], "white": [40, 44, 45, 46, 51], "pad": [40, 44, 45, 46, 51, 54], "25em": [40, 44, 45, 46, 51], "background": [40, 44, 45, 46, 51], "fec": [40, 44, 45, 46, 51], "nth": [40, 44, 45, 46, 51], "dash": [40, 44, 45, 46, 51], "888": [40, 44, 45, 46, 51], "2px": [40, 44, 45, 46, 51], "ccf": [40, 44, 45, 46, 51], "f4f4ff": [40, 44, 45, 46, 51], "thead": [40, 44, 45, 46, 51], "tbodi": [40, 44, 45, 46, 51], "drop": 40, "sort_valu": [40, 44, 51], "17": [40, 41, 42, 43, 44, 45, 51, 54], "marketing_campaign": [40, 49], "channelvar": 40, "particular": [40, 45], "totaloff": 40, "budgetsp": 40, "offersr": 40, "productsr": 40, "channelsr": 40, "exce": [40, 46, 50], "326": 40, "324": 40, "revenu": [40, 46], "idx2": 40, "iterrow": 40, "stage": [40, 46, 54], "pai": [40, 41, 44, 45, 46, 54], "subscript": [40, 46, 54], "report_bd": 40, "364": 40, "focu": 40, "h": [41, 44, 49], "william": [41, 49], "horizon": 41, "price": [41, 46, 54], "aggreg": [41, 44, 54], "900": 41, "810": 41, "net": [41, 46], "required_minimum_pandas_vers": [41, 44, 54], "__version__": [41, 44, 54], "prior": 41, "cell": [41, 44, 45], "df_mine": 41, "ore_qu": 41, "max_extract": 41, "nb_mine": 41, "range_min": 41, "blend_qual": 41, "nb_year": 41, "000000": 41, "900000": 41, "223607": 41, "600000": 41, "800000": 41, "200000": 41, "dtype": [41, 44], "float64": 41, "supposedli": 41, "flat": 41, "blend_pric": 41, "max_worked_min": 41, "discount_r": 41, "cleans": 41, "mm": 41, "mining_panda": [41, 49], "range_year": 41, "work_var": 41, "open_var": [41, 55], "ore_var": 41, "60": [41, 43, 44, 46, 54], "40": [41, 42, 43, 44, 45, 47, 54], "df_decision_var": [41, 54], "work_0_0": 41, "open_0_0": 41, "ore_0_0": 41, "work_0_1": 41, "open_0_1": 41, "ore_0_1": 41, "work_0_2": 41, "open_0_2": 41, "ore_0_2": 41, "work_0_3": 41, "open_0_3": 41, "ore_0_3": 41, "work_0_4": 41, "open_0_4": 41, "ore_0_4": 41, "itertupl": [41, 44, 45, 54], "effici": [41, 44, 45, 52, 54], "littl": [41, 44, 55], "groupbi": [41, 44, 54], "postopencloseconstraint": 41, "open_next": 41, "open_curr": 41, "sure": [41, 44, 45], "work_1_0": 41, "work_2_0": 41, "work_3_0": 41, "work_1_1": 41, "work_2_1": 41, "work_3_1": 41, "work_1_2": 41, "work_2_2": 41, "work_3_2": 41, "work_1_3": 41, "work_2_3": 41, "work_3_3": 41, "work_1_4": 41, "work_2_4": 41, "work_3_4": 41, "thing": 41, "open_1_0": 41, "ore_1_0": 41, "open_1_1": 41, "ore_1_1": 41, "open_1_2": 41, "ore_1_2": 41, "open_1_3": 41, "ore_1_3": 41, "open_1_4": 41, "ore_1_4": 41, "61": [41, 54, 55], "blend_var": 41, "ores": 41, "65": [41, 44, 55], "66": [41, 44, 55], "inequ": [41, 55], "71": [41, 54, 55], "s_discount": 41, "0000": [41, 44], "9000": 41, "8100": 41, "7290": 41, "yearli": 41, "expected_revenu": 41, "twice": [41, 44, 55], "relev": [41, 44, 54], "common": [41, 54], "df_royalties_data": 41, "roylati": 41, "disc_royalti": 41, "0500": 41, "6450": 41, "2805": 41, "total_royalti": 41, "print_cplex_log": 41, "s1": [41, 42, 43, 45], "161": 41, "438": 41, "214": 41, "674": 41, "236": 41, "leverag": [41, 44, 55], "Of": [41, 44], "pivot": [41, 44, 54], "unstack": [41, 44, 54], "mine_label": 41, "ylabel": [41, 44, 45, 54, 55], "ore_valu": 41, "df_re": [41, 44], "mine1": 41, "mine2": 41, "mine3": 41, "mine4": 41, "y1": 41, "00": [41, 42, 43, 44, 45, 54], "500000": 41, "y2": 41, "y3": 41, "y4": 41, "y5": 41, "166667": 41, "graphic": [41, 55], "xlabel": [41, 44, 45, 54, 55], "forbid": [41, 44], "impact": [41, 55], "forced_stop": 41, "stop_m": 41, "stop_i": 41, "whenev": [41, 54, 55], "full_min": 41, "s2": [41, 42, 43, 45], "cpxparam_read_datacheck": [41, 44, 45], "108": [41, 44], "9605": 41, "tri": [41, 44], "presolv": [41, 44, 45], "elimin": [41, 44, 55], "36": [41, 44, 54], "substitut": [41, 44], "sec": [41, 44, 45], "parallel": [41, 44, 45], "157": 41, "936": 41, "228": 41, "367": 41, "431": 41, "9355": 41, "ore_values2": 41, "df_res2": [41, 44], "blue": 41, "shift": [42, 43, 49], "weekdai": [42, 43, 45], "_all_dai": [42, 43, 45], "mondai": [42, 43, 44, 45], "tuesdai": [42, 43, 44, 45], "wednesdai": [42, 43, 44, 45], "thursdai": [42, 43, 44, 45], "fridai": [42, 43, 44, 45], "saturdai": [42, 43, 44, 45], "sundai": [42, 43, 44, 45], "day_to_day_week": [42, 43, 45], "dai": [42, 43, 44, 45, 46], "day_map": [42, 43, 45], "tworkrul": [42, 43, 45], "work_time_max": [42, 43, 45], "tvacat": [42, 43, 45], "tnursepair": [42, 43, 45], "firstnurs": [42, 43, 45], "secondnurs": [42, 43, 45], "tskillrequir": [42, 43, 45], "skill": [42, 43, 44], "ann": [42, 43, 44, 45], "bethani": [42, 43, 44, 45], "betsi": [42, 43, 44, 45], "cathi": [42, 43, 44, 45], "cecilia": [42, 43, 44, 45], "chri": [42, 43, 44, 45], "cindi": [42, 43, 44, 45], "debbi": [42, 43, 44, 45], "dee": [42, 43, 44, 45], "gloria": [42, 43, 44, 45], "isabel": [42, 43, 44, 45], "jane": [42, 43, 44, 45], "janel": [42, 43, 44, 45], "janic": [42, 43, 44, 45], "jemma": [42, 43, 44, 45], "joan": [42, 43, 44, 45], "joyc": [42, 43, 44, 45], "jude": [42, 43, 44, 45], "juli": [42, 43, 44, 45, 51], "juliet": [42, 43, 44, 45], "kate": [42, 43, 44, 45], "nanci": [42, 43, 44, 45], "nathali": [42, 43, 44, 45], "nicol": [42, 43, 44, 45], "patricia": [42, 43, 44, 45], "patrick": [42, 43, 44, 45], "roberta": [42, 43, 44, 45], "suzann": [42, 43, 44, 45], "vicki": [42, 43, 44, 45], "wendi": [42, 43, 44, 45], "zoe": [42, 43, 44, 45], "emerg": [42, 43, 44], "consult": [42, 43, 44], "cardiac_car": [42, 43], "geriatr": [42, 43, 44], "nurse_skil": [42, 43, 45], "anaesthesiologi": [42, 43], "oncologi": [42, 43], "pediatr": [42, 43], "vacat": [42, 43], "nurse_associ": [42, 43, 45], "nurse_incompat": [42, 43, 45], "skill_requir": [42, 43, 45], "default_work_rul": [42, 43], "tnurs": [42, 43, 45], "tnurse1": [42, 43, 45], "senior": [42, 43, 44, 45], "qualif": [42, 43, 44, 45], "pay_rat": [42, 43, 44, 45], "tshift": [42, 43, 45], "start_tim": [42, 43, 44, 45], "end_tim": [42, 43, 44, 45], "min_requir": [42, 43, 45], "max_requir": [42, 43, 45], "uppercas": [42, 43, 45], "dept2": [42, 43, 45], "daynam": [42, 43, 45], "02d": [42, 43, 45], "shiftact": [42, 43, 45], "staticmethod": [42, 43, 45], "to_abstim": [42, 43, 45], "day_index": [42, 43, 45], "time_of_dai": [42, 43, 45], "hour": [42, 43, 44, 45], "start_time_of_dai": [42, 43, 45], "end_time_of_dai": [42, 43, 45], "_weekdai": [42, 43, 45], "_start_time_of_dai": [42, 43, 45], "_end_time_of_dai": [42, 43, 45], "start_day_index": [42, 43, 45], "end_day_index": [42, 43, 45], "durat": [42, 43, 45], "overlap": [42, 43], "other_shift": [42, 43, 45], "isinst": [42, 43, 45], "2min": [42, 43], "120": [42, 43, 54, 55], "load_data": [42, 43], "shifts_": [42, 43], "nurses_": [42, 43], "vacations_": [42, 43], "nurse_associations_": [42, 43], "nurse_imcompatibilities_": [42, 43], "number_of_overlap": [42, 43, 45], "work_rul": [42, 43, 45], "shift_row": [42, 43, 45], "nurse_row": [42, 43], "vacation_row": [42, 43, 45], "npr": [42, 43], "sh": [42, 43], "setup_data": [42, 43], "stor": [42, 43], "ethem": [42, 43], "shift_act": [42, 43, 45], "nurses_by_id": [42, 43, 45], "setup_vari": [42, 43], "all_nurs": [42, 43, 44], "all_shift": [42, 43, 44], "iff": [42, 43, 54], "nurse_assignment_var": [42, 43, 45], "nurseassign": [42, 43, 45], "nurse_work_time_var": [42, 43, 45], "nurseworktim": [42, 43, 45], "over_averag": [42, 43, 45], "averag": [42, 43, 44], "nurse_over_average_time_var": [42, 43, 45], "nurseoveraverageworktim": [42, 43, 45], "nurse_under_average_time_var": [42, 43, 45], "nurseunderaverageworktim": [42, 43, 45], "average_nurse_work_tim": [42, 43, 45], "averageworktim": [42, 43, 45], "setup_constraint": [42, 43], "nurse_assign": [42, 43, 44], "nurse_work_tim": [42, 43], "max_work_tim": [42, 43, 44], "work_time_var": [42, 43, 45], "work_time_": [42, 43, 45], "worktim": [42, 43, 45], "trick": [42, 43, 45, 55], "thse": [42, 43], "wil": [42, 43], "average_work_time_": [42, 43, 45], "max_time_": [42, 43, 45], "vac_nurse_id": [42, 43, 45], "vac_dai": [42, 43, 45], "vac_n": [42, 43, 45], "medium_vacations_": [42, 43, 45], "nb_shift": [42, 43, 45], "i1": [42, 43, 45], "i2": [42, 43, 45], "high_overlapping_": [42, 43, 45], "demand_min": [42, 43, 45], "demand_max": [42, 43, 45], "total_assign": [42, 43, 45], "high_req_min_": [42, 43, 45], "medium_req_max_": [42, 43, 45], "mandatory_presence_": 42, "dept": [42, 43, 45], "dsh": [42, 43, 45], "skilled_nurs": [42, 43, 45], "high_required_": [42, 43, 45], "nurse_id1": [42, 43, 45], "nurse_id2": [42, 43, 45], "nurse1": [42, 43, 44, 45], "nurse2": [42, 43, 44, 45], "medium_ct_nurse_assoc_": [42, 43, 45], "medium_ct_nurse_incompat_": [42, 43, 45], "total_number_of_assign": [42, 43, 45], "nurse_cost": [42, 43, 45], "assignment_cost_f": 42, "total_salary_cost": [42, 43, 44, 45], "setup_object": [42, 43], "salari": [42, 43, 45], "total_over_average_worktim": [42, 43, 45], "total_under_average_worktim": [42, 43, 45], "total_fair": [42, 43, 45], "fair": [42, 43, 45], "total_hour": [42, 43], "nurs": [43, 49], "overal": [43, 44, 45, 47, 54], "co": 43, "000001": 43, "paramset": 43, "000003": 43, "000002": 43, "hospit": [44, 45], "staf": [44, 45], "fairli": [44, 45], "week": [44, 45, 50], "nurseskil": [44, 45], "skillrequir": [44, 45], "person": [44, 45], "nursevac": [44, 45], "nurseassoci": [44, 45], "nurseincompat": [44, 45], "sheet": [44, 45, 54], "importerror": [44, 45], "xlrd": [44, 45], "tab": 44, "data_url": [44, 45], "blob": [44, 45], "jupyt": [44, 45, 49], "nurses_data": [44, 45], "xl": [44, 45], "nurse_xls_fil": [44, 45], "excelfil": [44, 45], "df_skill": 44, "df_dept": 44, "df_shift": 44, "renam": 44, "shiftid": 44, "df_nurs": 44, "index_col": 44, "df_nurse_skil": 44, "df_vacat": 44, "df_associ": 44, "df_incompat": 44, "59": [44, 55], "max_nb_shift": 44, "min_req": 44, "max_req": 44, "cardiac": 44, "33": [44, 54], "37": [44, 45, 54, 55], "39": [44, 54], "precomput": 44, "8am": 44, "dow": 44, "day_of_week": 44, "day_to_day_of_week": 44, "whitespac": 44, "wstart": 44, "complic": 44, "span": 44, "midnight": 44, "am": 44, "rule": [44, 45], "abs_end_tim": 44, "wend": 44, "significantli": [44, 54], "calculate_absolute_endtim": 44, "straightforward": [44, 55], "min_demand": 44, "56": [44, 55], "74": [44, 55], "90": [44, 54], "104": 44, "114": 44, "122": 44, "72": 44, "156": 44, "164": 44, "170": 44, "152": [44, 55], "154": 44, "mix": [44, 45], "upon": 44, "assign_": 44, "df_assign": 44, "df_assigned_pivot": 44, "reset_index": 44, "head": [44, 54], "assign_anne_0": 44, "assign_anne_1": 44, "assign_anne_2": 44, "assign_anne_3": 44, "assign_anne_4": 44, "assign_anne_5": 44, "assign_anne_6": 44, "assign_anne_7": 44, "assign_anne_8": 44, "assign_anne_9": 44, "assign_anne_31": 44, "assign_anne_32": 44, "assign_anne_33": 44, "assign_anne_34": 44, "assign_anne_35": 44, "assign_anne_36": 44, "assign_anne_37": 44, "assign_anne_38": 44, "assign_anne_39": 44, "assign_anne_40": 44, "assign_bethanie_0": 44, "assign_bethanie_1": 44, "assign_bethanie_2": 44, "assign_bethanie_3": 44, "assign_bethanie_4": 44, "assign_bethanie_5": 44, "assign_bethanie_6": 44, "assign_bethanie_7": 44, "assign_bethanie_8": 44, "assign_bethanie_9": 44, "assign_bethanie_31": 44, "assign_bethanie_32": 44, "assign_bethanie_33": 44, "assign_bethanie_34": 44, "assign_bethanie_35": 44, "assign_bethanie_36": 44, "assign_bethanie_37": 44, "assign_bethanie_38": 44, "assign_bethanie_39": 44, "assign_bethanie_40": 44, "assign_betsy_0": 44, "assign_betsy_1": 44, "assign_betsy_2": 44, "assign_betsy_3": 44, "assign_betsy_4": 44, "assign_betsy_5": 44, "assign_betsy_6": 44, "assign_betsy_7": 44, "assign_betsy_8": 44, "assign_betsy_9": 44, "assign_betsy_31": 44, "assign_betsy_32": 44, "assign_betsy_33": 44, "assign_betsy_34": 44, "assign_betsy_35": 44, "assign_betsy_36": 44, "assign_betsy_37": 44, "assign_betsy_38": 44, "assign_betsy_39": 44, "assign_betsy_40": 44, "assign_cathy_0": 44, "assign_cathy_1": 44, "assign_cathy_2": 44, "assign_cathy_3": 44, "assign_cathy_4": 44, "assign_cathy_5": 44, "assign_cathy_6": 44, "assign_cathy_7": 44, "assign_cathy_8": 44, "assign_cathy_9": 44, "assign_cathy_31": 44, "assign_cathy_32": 44, "assign_cathy_33": 44, "assign_cathy_34": 44, "assign_cathy_35": 44, "assign_cathy_36": 44, "assign_cathy_37": 44, "assign_cathy_38": 44, "assign_cathy_39": 44, "assign_cathy_40": 44, "assign_cecilia_0": 44, "assign_cecilia_1": 44, "assign_cecilia_2": 44, "assign_cecilia_3": 44, "assign_cecilia_4": 44, "assign_cecilia_5": 44, "assign_cecilia_6": 44, "assign_cecilia_7": 44, "assign_cecilia_8": 44, "assign_cecilia_9": 44, "assign_cecilia_31": 44, "assign_cecilia_32": 44, "assign_cecilia_33": 44, "assign_cecilia_34": 44, "assign_cecilia_35": 44, "assign_cecilia_36": 44, "assign_cecilia_37": 44, "assign_cecilia_38": 44, "assign_cecilia_39": 44, "assign_cecilia_40": 44, "unsort": 44, "df_sorted_shift": 44, "number_of_incompatible_shift_constraint": 44, "shift_2": 44, "iloc": 44, "640": 44, "he": [44, 45], "forbidden": 44, "assig": 44, "df_assigned_reindex": 44, "df_vacation_forbidden_assign": 44, "left_on": [44, 54], "right_on": 44, "assign_anne_28": 44, "assign_anne_29": 44, "assign_anne_30": 44, "forbidden_assign": 44, "342": 44, "everi": [44, 45, 46, 50, 51], "suffix": [44, 55], "df_preferred_assign": 44, "_1": 44, "_2": 44, "all_nurses_1": 44, "assigned_1": 44, "all_nurses_2": 44, "assigned_2": 44, "assign_isabelle_0": 44, "assign_dee_0": 44, "assign_isabelle_1": 44, "assign_dee_1": 44, "assign_isabelle_2": 44, "assign_dee_2": 44, "assign_isabelle_3": 44, "assign_dee_3": 44, "assign_isabelle_4": 44, "assign_dee_4": 44, "preferred_assign": 44, "similarli": [44, 45], "sift": 44, "df_incompatible_assign": 44, "assign_patricia_0": 44, "assign_patrick_0": 44, "assign_patricia_1": 44, "assign_patrick_1": 44, "assign_patricia_2": 44, "assign_patrick_2": 44, "assign_patricia_3": 44, "assign_patrick_3": 44, "assign_patricia_4": 44, "assign_patrick_4": 44, "incompatible_assign": 44, "regul": 44, "unnecessari": 44, "perspect": 44, "make_var": 44, "varname_fmt": 44, "worktime_": 44, "worktime_ann": 44, "worktime_bethani": 44, "worktime_betsi": 44, "worktime_cathi": 44, "worktime_cecilia": 44, "worktime_chri": 44, "worktime_cindi": 44, "worktime_david": 44, "worktime_debbi": 44, "worktime_de": 44, "worktime_gloria": 44, "worktime_isabel": 44, "worktime_jan": 44, "worktime_janel": 44, "worktime_janic": 44, "worktime_jemma": 44, "worktime_joan": 44, "worktime_joyc": 44, "worktime_jud": 44, "worktime_juli": 44, "worktime_juliet": 44, "worktime_k": 44, "worktime_n": 44, "worktime_nathali": 44, "worktime_nicol": 44, "worktime_patricia": 44, "worktime_patrick": 44, "worktime_roberta": 44, "worktime_suzann": 44, "worktime_vicki": 44, "worktime_wendi": 44, "worktime_zo": 44, "constrain": [44, 46, 47, 54], "1344": 44, "1312": 44, "1547": 44, "set_max_work_tim": 44, "fanci": 44, "convert_dtyp": 44, "shift_nurs": 44, "total_salary_seri": 44, "25worktime_ann": 44, "28worktime_bethani": 44, "17worktime_betsi": 44, "17worktime_": 44, "preliminari": 44, "accomplish": [44, 45], "1588": 44, "unit": [44, 45, 49], "magnitud": [44, 45], "cpxparam_mip_tolerances_mipgap": [44, 45], "0000000000000001e": [44, 45], "997": 44, "379": 44, "550": 44, "922": 44, "2862": 44, "892": 44, "soss": 44, "probe": 44, "cliqu": 44, "479": 44, "iinf": 44, "28824": 44, "473": 44, "62": 44, "649": 44, "44": [44, 54], "716": 44, "795": 44, "29100": 44, "29068": 44, "139": [44, 54], "mb": 44, "29014": 44, "29010": 44, "28982": 44, "28944": 44, "47": [44, 54, 55], "28936": 44, "1611": 44, "1392": [44, 54], "28888": 44, "4006": 44, "3397": 44, "28842": 44, "4152": 44, "3293": 44, "4253": 44, "3414": 44, "73849": 44, "gub": 44, "76": [44, 54, 55], "flow": 44, "lift": 44, "270": 44, "08": 44, "410": 44, "07": 44, "000": [44, 45, 46, 49, 54, 55], "s_assign": 44, "s_demand": 44, "total_demand": [44, 54], "avg_worktim": 44, "theoret": [44, 47], "s_worktim": 44, "s_to_mean": 44, "s_abs_to_mean": 44, "total_to_mean": 44, "histogram": 44, "hist": 44, "lightblu": [44, 55], "amongst": 44, "df_work": 44, "gold": [44, 55], "xlim": [44, 45, 46], "fewer": 44, "fraction": 44, "nonetheless": 44, "quantifi": 44, "avg_work": 44, "avg": 44, "worked_to_avg": 44, "875": 44, "diagram": [44, 46], "overwork": 44, "overw_": 44, "underwork": 44, "underw_": 44, "total_overw": 44, "total_underw": 44, "underw_ann": 44, "underw_bethani": 44, "underw_betsi": 44, "underw_cathi": 44, "underw_cec": 44, "over_work": 44, "under_work": 44, "suffici": 44, "unambigu": 44, "incorpor": 44, "readi": 44, "28840": 44, "582": 44, "986": 44, "3859": 44, "580": 44, "982": 44, "3814": 44, "28827": 44, "9167": 44, "885": 44, "04": 44, "28829": 44, "51": [44, 49], "1053": 44, "9063": 44, "107": 44, "1359": [44, 54], "28831": 44, "1530": 44, "1649": 44, "1715": 44, "1783": 44, "69": [44, 54, 55], "gomori": 44, "211": 44, "92": 44, "250": [44, 54], "625": 44, "recomput": 44, "s_assigned2": 44, "new_total_to_mean": 44, "down": [44, 55], "_subplot": [44, 54], "axessubplot": [44, 54], "0x279df51e710": 44, "closer": 44, "simpli": 44, "unrealist": 44, "far": [44, 46], "29606": 44, "28884": 44, "s_assigned_fair": 44, "df_res_fair": 44, "solution_value_fair": 44, "plum": 44, "0x279e05915f8": 44, "deal": 45, "schedul": [45, 49, 50], "conevrt": 45, "tnurseskil": 45, "tshift1": 45, "day_start_tim": 45, "skilltabl": 45, "depttabl": 45, "shifttabl": 45, "skillrequirementt": 45, "nurset": 45, "nurseskillt": 45, "nursevacationt": 45, "nurseassociationt": 45, "nurseincompatibilityt": 45, "nurses_panda": [45, 49], "benefit": 45, "nsk": 45, "nskt": 45, "setdefault": 45, "skill_requirement_row": 45, "na": 45, "And": 45, "18averageworktim": 45, "nurseworktime_betsi": 45, "nurseworktime_cathi": 45, "nurseworktime_cindi": 45, "nurseworktime_debbi": 45, "nurseworktime_de": 45, "nurseworktime_isabel": 45, "nurseworktime_jan": 45, "nurseworktime_janel": 45, "nurseworktime_janic": 45, "nurseworktime_jemma": 45, "nurseworktime_joan": 45, "nurseworktime_jud": 45, "nurseworktime_juli": 45, "nurseworktime_k": 45, "nurseworktime_patrick": 45, "nurseworktime_suzann": 45, "nurseworktime_vicki": 45, "nurseworktime_wendi": 45, "she": 45, "lesser": 45, "associt": 45, "measur": 45, "793": 45, "738": 45, "961": 45, "revis": 45, "emphas": 45, "enable_trac": 45, "relaxed_sol": 45, "relaxed_ok": 45, "high_req_min_emer_mon_18_3": 45, "high_req_min_cons_mon_08_10": 45, "high_req_min_cons_mon_12_8": 45, "high_req_min_card_mon_08_10": 45, "high_req_min_card_mon_12_8": 45, "high_req_min_emer_tue_08_4": 45, "high_req_min_emer_tue_18_3": 45, "high_req_min_cons_tue_08_10": 45, "high_req_min_cons_tue_12_8": 45, "high_req_min_card_tue_08_4": 45, "high_req_min_card_tue_18_3": 45, "high_req_min_emer_wed_18_3": 45, "high_req_min_emer_thu_02_3": 45, "high_req_min_emer_thu_18_3": 45, "high_req_min_cons_thu_08_10": 45, "high_req_min_cons_thu_12_8": 45, "high_req_min_emer_fri_18_3": 45, "high_req_min_cons_fri_08_10": 45, "high_req_min_cons_fri_12_8": 45, "high_req_min_emer_sat_02_5": 45, "high_req_min_emer_sat_12_7": 45, "high_req_min_emer_sat_20_12": 45, "high_req_min_emer_sun_02_5": 45, "high_req_min_emer_sun_12_7": 45, "high_required_emergency_cardiac": 45, "care_1_emer_mon_02": 45, "care_1_emer_mon_18": 45, "care_1_emer_tue_18": 45, "care_1_emer_wed_12": 45, "care_1_emer_wed_18": 45, "care_1_emer_thu_18": 45, "care_1_emer_fri_18": 45, "care_1_emer_sat_02": 45, "care_1_emer_sat_12": 45, "care_1_emer_sun_02": 45, "care_1_emer_sun_12": 45, "97": [45, 55], "14097": 45, "333": 45, "13940": 45, "134": 45, "667": 45, "chart": [45, 46, 54, 55], "gantt": 45, "gridspec": 45, "colorbydepart": 45, "nbassignmentsbyshift": 45, "shiftsbydepart": 45, "createlabel": 45, "shiftinfobydai": 45, "xtick": [45, 46], "set_xlabel": [45, 46], "set_ylabel": [45, 46], "grid": 45, "displaynursesassignmentsgantt": 45, "tickloc": 45, "bottom": 45, "ylim": [45, 54], "ytick": 45, "OF": 45, "displaydepartmentsassign": 45, "maxnbassign": 45, "vertic": 45, "height_ratio": 45, "manufactur": [46, 47], "gasolin": [46, 49], "diesel": [46, 54], "crude": 46, "purchas": 46, "decid": [46, 49, 55], "industri": [46, 49], "life": 46, "super": [46, 51], "crude1": 46, "crude2": 46, "crude3": 46, "barrel": 46, "advertis": 46, "ten": 46, "dollar": 46, "spent": 46, "bought": 46, "sell": 46, "inventori": 46, "proport": [46, 49], "magin": 46, "fundament": 46, "np": [46, 51], "gas_nam": 46, "gas_data": 46, "3000": 46, "oil_nam": 46, "oil_data": 46, "nb_ga": 46, "nb_oil": 46, "range_ga": 46, "range_oil": 46, "production_cost": 46, "production_max": 46, "14000": 46, "advert_return": 46, "languag": 46, "gaspd": 46, "oilpd": 46, "stylesheet": [46, 51], "ga": [46, 54], "submit": [46, 49], "oil_blend": [46, 49], "advert": 46, "sale": [46, 52], "total_advert_cost": 46, "total_oil_cost": 46, "total_production_cost": 46, "total_revenu": 46, "287750": 46, "750": [46, 54], "487500": 46, "54000": 46, "830000": 46, "all_kpi": 46, "kp": 46, "kpis_bd": 46, "blend_valu": 46, "total_gas_prod": 46, "prod": [46, 47], "prods_bd": 46, "pie": [46, 54, 55], "display_pi": 46, "pie_valu": 46, "pie_label": 46, "autopct": [46, 54, 55], "1f": [46, 55], "kpnv": 46, "green": [46, 50, 51], "goldenrod": 46, "lightgreen": 46, "sblend": 46, "blends_bd": 46, "barplot": 46, "bar_width": 46, "offset": 46, "rho": 46, "boundari": 46, "bar_l": 46, "mbar_w": 46, "tick_po": 46, "oliv": 46, "cadetblu": 46, "loc": [46, 55], "repartit": 46, "buffer": 46, "around": 46, "notic": 46, "miss": 46, "outsid": [47, 49, 51], "consum": 47, "contrast": 47, "consumpt": 47, "capac": [47, 55], "kluski": 47, "capellini": 47, "fettucin": 47, "flour": 47, "egg": 47, "build_production_problem": 47, "product_nam": 47, "resource_nam": 47, "inside_var": 47, "inside_": 47, "outside_var": 47, "outside_": 47, "ct_demand_": 47, "ct_res_": 47, "total_inside_cost": 47, "total_outside_cost": 47, "print_production_solut": 47, "ins_var": 47, "out_var": 47, "build_default_production_problem": 47, "cb_mixin": 48, "conflict_refin": 48, "error_handl": 48, "model_read": 48, "relax_linear": 48, "sosvarset": 48, "with_func": 48, "csv_util": 48, "docplex_exampl": 49, "subdirectori": 49, "categori": 49, "diet": 49, "planner": 49, "sport_schedul": 49, "sport": [49, 50], "leagu": [49, 50], "plai": [49, 50], "intradivis": [49, 50], "late": [49, 50, 51], "season": [49, 50, 51], "workflow": 49, "cutstock": 49, "sometim": 49, "knapsack": 49, "suppli": [49, 55], "lagrangian_relax": 49, "load_balanc": 49, "box": 49, "chicago_coffee_shop": 49, "shop": 49, "offer": [49, 52], "mine": 49, "nurses_schedul": 49, "oil": 49, "sports_schedul": 49, "ucp_panda": 49, "answer": [49, 54], "question": [49, 53, 54], "electr": [49, 54], "trace": 49, "brief": 49, "prompt": 49, "69041": 49, "serv": 49, "155": [49, 54], "831": 49, "930": 49, "278": 49, "8518": 49, "433": [49, 54, 55], "256": 49, "806": 49, "174": [49, 54], "game": 50, "intradivision": 50, "held": [50, 51], "incent": [50, 51], "oppon": [50, 51], "team_div1": [50, 51], "baltimor": [50, 51], "raven": [50, 51], "cincinnati": [50, 51], "bengal": [50, 51], "cleveland": [50, 51], "brown": [50, 51], "pittsburgh": [50, 51], "steeler": [50, 51], "houston": [50, 51], "texan": [50, 51], "indianapoli": [50, 51], "colt": [50, 51], "jacksonvil": [50, 51], "jaguar": [50, 51], "tennesse": [50, 51], "titan": [50, 51], "buffalo": [50, 51], "miami": [50, 51], "dolphin": [50, 51], "england": [50, 51], "patriot": [50, 51], "york": [50, 51], "jet": [50, 51], "denver": [50, 51], "bronco": [50, 51], "kansa": [50, 51], "chief": [50, 51], "oakland": [50, 51], "raider": [50, 51], "san": [50, 51], "diego": [50, 51], "charger": [50, 51], "team_div2": [50, 51], "bear": [50, 51], "detroit": [50, 51], "lion": [50, 51], "bai": [50, 51], "packer": [50, 51], "minnesota": [50, 51], "vike": [50, 51], "atlanta": [50, 51], "falcon": [50, 51], "carolina": [50, 51], "panther": [50, 51], "orlean": [50, 51], "saint": [50, 51], "tampa": [50, 51], "buccan": [50, 51], "dalla": [50, 51], "cowboi": [50, 51], "giant": [50, 51], "philadelphia": [50, 51], "eagl": [50, 51], "washington": [50, 51], "redskin": [50, 51], "arizona": [50, 51], "cardin": [50, 51], "francisco": [50, 51], "49er": [50, 51], "seattl": [50, 51], "seahawk": [50, 51], "st": [50, 51], "loui": [50, 51], "ram": [50, 51], "team1": [50, 51], "team2": [50, 51], "is_division": [50, 51], "build_sport": 50, "sportschedcplex": 50, "nb_teams_in_divis": [50, 51], "nb_intra_division": 50, "nb_inter_division": 50, "2n": 50, "team_rang": 50, "necessari": [50, 51, 55], "nb_week": [50, 51], "interdivision": [50, 51], "halv": [50, 51], "first_half_week": [50, 51], "nb_first_half_gam": [50, 51], "t1": [50, 51], "t2": [50, 51], "nb_plai": [50, 51], "mw": 50, "play_": 50, "d_w": 50, "correct_nb_games_": 50, "max_teams_in_divis": [50, 51], "plays_exactly_once_": 50, "in_division_first_half_": 50, "postpon": 50, "division": 50, "tsolut": 50, "print_sports_solut": 50, "currweek": 50, "ip": 51, "eight": 51, "1st": 51, "2nd": 51, "number_of_matches_to_plai": 51, "number_of_matches_inside_divis": 51, "number_of_matches_outside_divis": 51, "top": 51, "tabular": 51, "spreadsheet": 51, "databas": 51, "think": 51, "afc": 51, "nfc": 51, "concat": 51, "issu": [51, 52, 53, 55], "nb_team": 51, "nb_inside_div": 51, "nb_outside_div": 51, "405": 51, "135": 51, "495": 51, "505": 51, "design": 51, "260": 51, "replai": 51, "bowl": 51, "team_leagu": 51, "nfl_final": 51, "2016": 51, "2014": 51, "2013": 51, "2012": 51, "2011": 51, "2010": 51, "2008": 51, "2007": 51, "nfl_meet": 51, "winners_bd": 51, "month": 51, "februari": 51, "march": 51, "april": 51, "june": 51, "august": 51, "septemb": 51, "octob": 51, "novemb": 51, "decemb": 51, "matches_bd": 51, "technic": [52, 55], "reliabl": 52, "expert": 52, "mission": 52, "critic": 52, "phone": 52, "24x7": 52, "defect": 52, "submiss": 52, "triag": 52, "ssl": 53, "unsupport": 53, "cplex_studio1263": 53, "lack": 53, "ask": 53, "forum": 53, "estim": [54, 55], "standalon": 54, "excel": 54, "appear": 54, "df_energi": 54, "coal": 54, "wind": 54, "co2_cost": 54, "df_unit": 54, "all_unit": 54, "coal1": 54, "coal2": 54, "gas1": 54, "gas2": 54, "gas3": 54, "gas4": 54, "diesel1": 54, "diesel2": 54, "diesel3": 54, "diesel4": 54, "ucp_raw_unit_data": 54, "350": 54, "205": 54, "52": 54, "150": [54, 55], "min_gen": 54, "54": [54, 55], "max_gen": 54, "425": 54, "365": 54, "220": 54, "165": 54, "158": 54, "operating_max_gen": 54, "197": 54, "min_uptim": 54, "min_downtim": 54, "ramp_up": 54, "212": 54, "94": 54, "ramp_down": 54, "183": 54, "198": 54, "start_cost": 54, "4550": 54, "1320": 54, "1291": 54, "1280": 54, "1105": 54, "560": 54, "554": 54, "fixed_cost": [54, 55], "208": 54, "117": 54, "172": 54, "353": 54, "144": 54, "417": 54, "551": 54, "79": 54, "638": 54, "259": 54, "variable_cost": 54, "536": 54, "985": 54, "522": 54, "642": 54, "610": 54, "370": 54, "520": 54, "840": 54, "330": 54, "inner": 54, "intersect": 54, "df_up": 54, "right_index": 54, "raw_demand": 54, "1259": 54, "1439": 54, "1289": 54, "1211": 54, "1433": 54, "1287": 54, "1285": 54, "1227": 54, "1269": 54, "1158": 54, "1277": 54, "1417": 54, "1294": 54, "1396": 54, "1414": 54, "1386": 54, "1302": 54, "1215": 54, "1354": 54, "1436": 54, "1332": 54, "1172": 54, "1446": 54, "1367": 54, "1243": 54, "1275": 54, "1363": 54, "1208": 54, "1394": 54, "1345": 54, "1217": 54, "1432": 54, "1431": 54, "1356": 54, "1360": 54, "1364": 54, "1286": 54, "1440": 54, "1313": 54, "1389": 54, "1385": 54, "1265": 54, "1442": 54, "1435": 54, "1411": 54, "1258": 54, "1333": 54, "1293": 54, "1193": 54, "1306": 54, "1264": 54, "1244": 54, "1368": 54, "1437": 54, "1236": 54, "1383": 54, "1350": 54, "1329": 54, "1427": 54, "1163": 54, "1339": 54, "1351": 54, "1174": 54, "1235": 54, "1245": 54, "1262": 54, "1362": 54, "1184": 54, "1207": 54, "1443": 54, "1205": 54, "1192": 54, "1233": 54, "1281": 54, "1295": 54, "1357": 54, "1191": 54, "1334": 54, "1365": 54, "1199": 54, "1256": 54, "1257": 54, "1224": 54, "1246": 54, "1194": 54, "1366": 54, "1282": 54, "1221": 54, "1255": 54, "1358": 54, "1254": 54, "1276": 54, "1335": 54, "1355": 54, "1337": 54, "1197": 54, "1423": 54, "1310": 54, "1300": 54, "1388": 54, "1434": 54, "1232": 54, "1402": 54, "1160": 54, "1422": 54, "1219": 54, "1410": 54, "1361": 54, "1407": 54, "1164": 54, "1408": 54, "1196": 54, "1430": 54, "1216": 54, "1340": 54, "1327": 54, "1230": 54, "1448": 54, "1220": 54, "1425": 54, "1413": 54, "1279": 54, "1162": 54, "1441": 54, "1307": 54, "1308": 54, "1420": 54, "1338": 54, "1311": 54, "1328": 54, "1336": 54, "1231": 54, "nb_period": 54, "192": 54, "0x23fbad3d588": 54, "ucpm": 54, "in_us": 54, "turn_on": 54, "turn_off": 54, "switch": 54, "7680": 54, "3840": 54, "in_use_coal1_1": 54, "turn_on_coal1_1": 54, "turn_off_coal1_1": 54, "p_coal1_1": 54, "in_use_coal1_2": 54, "turn_on_coal1_2": 54, "turn_off_coal1_2": 54, "p_coal1_2": 54, "in_use_coal1_3": 54, "turn_on_coal1_3": 54, "turn_off_coal1_3": 54, "p_coal1_3": 54, "in_use_coal1_4": 54, "turn_on_coal1_4": 54, "turn_off_coal1_4": 54, "p_coal1_4": 54, "in_use_coal1_5": 54, "turn_on_coal1_5": 54, "turn_off_coal1_5": 54, "p_coal1_5": 54, "ie": 54, "df_join_decision_vars_up": 54, "pb": 54, "turnoff": 54, "3860": 54, "u_ramp_up": 54, "u_ramp_down": 54, "u_initi": 54, "p_curr": 54, "p_next": 54, "7700": 54, "in_use_curr": 54, "in_use_next": 54, "turn_on_next": 54, "turn_off_next": 54, "11520": 54, "min_up_": 54, "min_down_": 54, "robust": [54, 55], "ct_meet_demand_": 54, "incur": [54, 55], "startup": 54, "df_join_obj": 54, "total_fixed_cost": 54, "total_variable_cost": 54, "total_startup_cost": 54, "total_co2_cost": 54, "total_economic_cost": 54, "total_nb_us": 54, "total_nb_start": 54, "15455": 54, "14213082": 54, "064": 54, "161025": 54, "131": 54, "8865900": 54, "2832": 54, "9029757": 54, "564": 54, "5183324": 54, "df_prod": 54, "df_use": 54, "df_start": 54, "215": 54, "109": 54, "312": 54, "234": 54, "143": 54, "reserv": 54, "df_spin": 54, "to_dict": 54, "142": 54, "67": [54, 55], "0x23fd903bf60": 54, "spin": 54, "global_spin": 54, "0x23fda312710": 54, "0x23fda37f9b0": 54, "all_cost": 54, "df_cost": 54, "running_cost": 54, "startup_cost": 54, "logi": 54, "0x23fda3c7e80": 54, "cost_by_unit": 54, "unit_energi": 54, "gb": 54, "fontsiz": [54, 55], "push": 54, "discuss": 54, "But": [54, 55], "co2_kpi": 54, "eco_kpi": 54, "eco": 54, "prev_co2_cost": 54, "prev_eco_cost": 54, "old_object": 54, "as_express": 54, "56390015": 54, "min_co2_cost": 54, "min_co2_eco_cost": 54, "3399032": 54, "12434227": 54, "620000225": 54, "alon": 54, "min_eco_cost": 54, "min_eco_co2_cost": 54, "8887433": 54, "859000005": 54, "5375417": 54, "pareto": 54, "co2_limit": 54, "max_co2_ctnam": 54, "ct_max_co2": 54, "co2_ct": 54, "co2min": 54, "co2max": 54, "explore_ucp": 54, "co2_ub": 54, "all_co2": 54, "all_eco": 54, "cur_co2": 54, "cur_eco": 54, "explor": 54, "frontier": 54, "3438559": 54, "3478087": 54, "3517615": 54, "3557142": 54, "3596670": 54, "3636198": 54, "3675725": 54, "3715253": 54, "3754781": 54, "3794309": 54, "3833836": 54, "3873364": 54, "3912892": 54, "3952419": 54, "3991947": 54, "4031475": 54, "4071002": 54, "4110530": 54, "4150058": 54, "4189586": 54, "4229113": 54, "4268641": 54, "4308169": 54, "4347696": 54, "4387224": 54, "4426752": 54, "4466279": 54, "4505807": 54, "4545335": 54, "4584863": 54, "4624390": 54, "4663918": 54, "4703446": 54, "4742973": 54, "4782501": 54, "4822029": 54, "4861556": 54, "4901084": 54, "4940612": 54, "4980140": 54, "5019667": 54, "5059195": 54, "43": [54, 55], "5098723": 54, "5138250": 54, "5177778": 54, "5217306": 54, "5256833": 54, "5296361": 54, "49": 54, "5335889": 54, "eco_max": 54, "nx": 54, "ny": 54, "markers": 54, "clearli": [54, 55], "textbook": 55, "supply_cost": 55, "unic": 55, "dataset": 55, "bonn": 55, "93": 55, "bordeaux": 55, "96": 55, "london": 55, "82": 55, "63": 55, "pari": 55, "83": 55, "85": 55, "rome": 55, "brussel": 55, "twarehous": 55, "twarehouse1": 55, "tstore": 55, "tstore1": 55, "store_": 55, "itervalu": 55, "portabl": 55, "python3": 55, "nb_store": 55, "wrow": 55, "nstore": 55, "113": 55, "warehouse_model": 55, "scheme": 55, "supply_london_store_1": 55, "supply_var": 55, "docplex_model1": 55, "rng": 55, "total_opening_cost": 55, "_get_supply_cost": 55, "nest": 55, "total_supply_cost": 55, "293": 55, "opening_cost_obj": 55, "supply_cost_obj": 55, "toolkit": 55, "draw": 55, "display_cost": 55, "supply_cost_by_warehous": 55, "wh_label": 55, "383": 55, "263": 55, "wonder": 55, "solve_lexicograph": 55, "hat": 55, "opening_first_then_suppli": 55, "opening1": 55, "supply1": 55, "352": 55, "472": 55, "supersed": 55, "supply_first_then_open": 55, "opening2": 55, "supply2": 55, "288": 55, "440": 55, "grater": 55, "display_pareto": 55, "cla": 55, "nb_re": 55, "opening_first": 55, "supply_first": 55, "scatterpoint": 55, "ncol": 55}, "objects": {"docplex.mp": [[6, 0, 0, "-", "basic"], [8, 0, 0, "-", "conflict_refiner"], [9, 0, 0, "-", "constants"], [10, 0, 0, "-", "constr"], [11, 0, 0, "-", "context"], [12, 0, 0, "-", "dvar"], [13, 0, 0, "-", "environment"], [14, 0, 0, "-", "error_handler"], [15, 0, 0, "-", "kpi"], [16, 0, 0, "-", "linear"], [17, 0, 0, "-", "model"], [18, 0, 0, "-", "model_reader"], [19, 0, 0, "-", "model_stats"], [21, 0, 0, "-", "priority"], [22, 0, 0, "-", "progress"], [23, 0, 0, "-", "publish"], [24, 0, 0, "-", "pwl"], [25, 0, 0, "-", "quad"], [26, 0, 0, "-", "relax_linear"], [27, 0, 0, "-", "relaxer"], [28, 0, 0, "-", "sdetails"], [29, 0, 0, "-", "solution"], [30, 0, 0, "-", "sosvarset"], [31, 0, 0, "-", "vartype"], [32, 0, 0, "-", "with_funcs"]], "docplex.mp.basic": [[6, 1, 1, "", "Expr"], [6, 1, 1, "", "IndexableObject"], [6, 1, 1, "", "ModelObject"], [6, 1, 1, "", "ModelingObjectBase"]], "docplex.mp.basic.Expr": [[6, 2, 1, "", "contains_var"], [6, 2, 1, "", "is_quad_expr"], [6, 2, 1, "", "number_of_variables"]], "docplex.mp.basic.IndexableObject": [[6, 2, 1, "", "is_generated"], [6, 3, 1, "", "model"]], "docplex.mp.basic.ModelingObjectBase": [[6, 2, 1, "", "has_name"], [6, 2, 1, "", "has_user_name"], [6, 3, 1, "", "model"], [6, 3, 1, "", "name"]], "docplex.mp.callbacks": [[7, 0, 0, "-", "cb_mixin"]], "docplex.mp.callbacks.cb_mixin": [[7, 1, 1, "", "ConstraintCallbackMixin"], [7, 1, 1, "", "ModelCallbackMixin"], [7, 4, 1, "", "print_called"]], "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin": [[7, 2, 1, "", "get_cpx_unsatisfied_cts"], [7, 2, 1, "", "make_solution_from_watched"], [7, 2, 1, "", "register_watched_var"], [7, 2, 1, "", "register_watched_vars"]], "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin": [[7, 2, 1, "", "index_to_var"], [7, 2, 1, "", "linear_ct_to_cplex"], [7, 2, 1, "", "make_complete_solution"], [7, 2, 1, "", "make_solution"], [7, 2, 1, "", "make_solution_from_vars"], [7, 3, 1, "", "model"]], "docplex.mp.conflict_refiner": [[8, 1, 1, "", "ConflictRefiner"], [8, 1, 1, "", "ConflictRefinerResult"], [8, 1, 1, "", "ConstraintsGroup"], [8, 5, 1, "", "TConflictConstraint"], [8, 1, 1, "", "VarLbConstraintWrapper"], [8, 1, 1, "", "VarUbConstraintWrapper"]], "docplex.mp.conflict_refiner.ConflictRefiner": [[8, 2, 1, "", "display_conflicts"], [8, 2, 1, "", "refine_conflict"], [8, 2, 1, "", "var_bounds"]], "docplex.mp.conflict_refiner.ConflictRefinerResult": [[8, 2, 1, "", "display"], [8, 2, 1, "", "display_stats"], [8, 2, 1, "", "iter_conflicts"], [8, 3, 1, "", "number_of_conflicts"], [8, 2, 1, "", "print_information"], [8, 3, 1, "", "refined_by"]], "docplex.mp.conflict_refiner.ConstraintsGroup": [[8, 2, 1, "", "from_var"]], "docplex.mp.constants": [[9, 1, 1, "", "BasisStatus"], [9, 1, 1, "", "ComparisonType"], [9, 1, 1, "", "ConflictStatus"], [9, 1, 1, "", "CplexScope"], [9, 1, 1, "", "EffortLevel"], [9, 1, 1, "", "ObjectiveSense"], [9, 1, 1, "", "QualityMetric"], [9, 1, 1, "", "RelaxationMode"], [9, 1, 1, "", "SOSType"], [9, 1, 1, "", "SolveAttribute"], [9, 1, 1, "", "UpdateEvent"], [9, 1, 1, "", "VarBoundType"], [9, 1, 1, "", "WriteLevel"]], "docplex.mp.constants.ComparisonType": [[9, 3, 1, "", "operator_symbol"]], "docplex.mp.constants.ObjectiveSense": [[9, 2, 1, "", "is_maximize"], [9, 2, 1, "", "is_minimize"], [9, 2, 1, "", "parse"], [9, 3, 1, "", "short_name"], [9, 3, 1, "", "verb"]], "docplex.mp.constr": [[10, 1, 1, "", "AbstractConstraint"], [10, 1, 1, "", "BinaryConstraint"], [10, 1, 1, "", "EquivalenceConstraint"], [10, 1, 1, "", "IfThenConstraint"], [10, 1, 1, "", "IndicatorConstraint"], [10, 1, 1, "", "LinearConstraint"], [10, 1, 1, "", "LogicalConstraint"], [10, 1, 1, "", "NotEqualConstraint"], [10, 1, 1, "", "PwlConstraint"], [10, 1, 1, "", "QuadraticConstraint"], [10, 1, 1, "", "RangeConstraint"]], "docplex.mp.constr.AbstractConstraint": [[10, 2, 1, "", "is_added"], [10, 2, 1, "", "set_mandatory"]], "docplex.mp.constr.BinaryConstraint": [[10, 2, 1, "", "get_left_expr"], [10, 2, 1, "", "get_right_expr"], [10, 2, 1, "", "iter_variables"], [10, 2, 1, "", "to_string"], [10, 3, 1, "", "type"]], "docplex.mp.constr.IfThenConstraint": [[10, 2, 1, "", "to_string"]], "docplex.mp.constr.IndicatorConstraint": [[10, 2, 1, "", "invalidate"]], "docplex.mp.constr.LinearConstraint": [[10, 3, 1, "", "basis_status"], [10, 3, 1, "", "benders_annotation"], [10, 3, 1, "", "dual_value"], [10, 2, 1, "", "eq"], [10, 2, 1, "", "ge"], [10, 2, 1, "", "le"], [10, 3, 1, "", "left_expr"], [10, 3, 1, "", "lhs"], [10, 3, 1, "", "rhs"], [10, 3, 1, "", "right_expr"], [10, 3, 1, "", "sense"], [10, 3, 1, "", "slack_value"], [10, 2, 1, "", "to_string"], [10, 3, 1, "", "type"]], "docplex.mp.constr.LogicalConstraint": [[10, 3, 1, "", "benders_annotation"], [10, 2, 1, "", "to_string"]], "docplex.mp.constr.NotEqualConstraint": [[10, 2, 1, "", "to_string"]], "docplex.mp.constr.PwlConstraint": [[10, 3, 1, "", "expr"], [10, 2, 1, "", "iter_variables"], [10, 3, 1, "", "pwl_func"], [10, 3, 1, "", "y"]], "docplex.mp.constr.QuadraticConstraint": [[10, 3, 1, "", "benders_annotation"], [10, 3, 1, "", "sense"], [10, 3, 1, "", "slack_value"], [10, 3, 1, "", "type"]], "docplex.mp.constr.RangeConstraint": [[10, 3, 1, "", "basis_status"], [10, 3, 1, "", "benders_annotation"], [10, 3, 1, "", "bounds"], [10, 3, 1, "", "dual_value"], [10, 3, 1, "", "expr"], [10, 2, 1, "", "iter_variables"], [10, 3, 1, "", "lb"], [10, 3, 1, "", "slack_value"], [10, 3, 1, "", "ub"]], "docplex.mp.context": [[11, 1, 1, "", "BaseContext"], [11, 1, 1, "", "Context"], [11, 1, 1, "", "ContextOverride"], [11, 6, 1, "", "InvalidSettingsFileError"], [11, 1, 1, "", "SolverContext"]], "docplex.mp.context.Context.context.solver.auto_publish": [[11, 5, 1, "", "kpis_output_field_name"], [11, 5, 1, "", "kpis_output_field_value"]], "docplex.mp.context.Context": [[11, 2, 1, "", "copy"], [11, 5, 1, "", "cplex_parameters"], [11, 2, 1, "", "make_default_context"], [11, 2, 1, "", "read_settings"], [11, 2, 1, "", "update"]], "docplex.mp.context.Context.solver": [[11, 5, 1, "", "auto_publish"], [11, 5, 1, "", "log_output"]], "docplex.mp.context.Context.solver.auto_publish": [[11, 5, 1, "", "kpis_output"], [11, 5, 1, "", "result_output"], [11, 5, 1, "", "solve_details"]], "docplex.mp.context.Context.solver.kpi_reporting": [[11, 5, 1, "", "filter_level"]], "docplex.mp.dvar": [[12, 1, 1, "", "Var"]], "docplex.mp.dvar.Var": [[12, 3, 1, "", "basis_status"], [12, 3, 1, "", "benders_annotation"], [12, 2, 1, "", "equals"], [12, 2, 1, "", "get_key"], [12, 2, 1, "", "is_binary"], [12, 2, 1, "", "is_continuous"], [12, 2, 1, "", "is_discrete"], [12, 2, 1, "", "is_integer"], [12, 2, 1, "", "iter_constraints"], [12, 3, 1, "", "lb"], [12, 3, 1, "", "name"], [12, 3, 1, "", "reduced_cost"], [12, 3, 1, "", "solution_value"], [12, 3, 1, "", "sv"], [12, 2, 1, "", "to_bool"], [12, 3, 1, "", "ub"], [12, 3, 1, "", "vartype"]], "docplex.mp.environment": [[13, 1, 1, "", "Environment"], [13, 6, 1, "", "UnsupportedPlatformError"]], "docplex.mp.environment.Environment": [[13, 3, 1, "", "cplex_location"], [13, 2, 1, "", "get_cplex_module"], [13, 3, 1, "", "has_cplex"], [13, 3, 1, "", "has_matplotlib"], [13, 3, 1, "", "has_numpy"], [13, 3, 1, "", "has_pandas"], [13, 2, 1, "", "is_64bit"], [13, 3, 1, "", "python_version"]], "docplex.mp.error_handler": [[14, 1, 1, "", "DefaultErrorHandler"], [14, 1, 1, "", "InfoLevel"]], "docplex.mp.kpi": [[15, 1, 1, "", "DecisionKPI"], [15, 1, 1, "", "FunctionalKPI"], [15, 1, 1, "", "KPI"]], "docplex.mp.kpi.DecisionKPI": [[15, 2, 1, "", "compute"], [15, 2, 1, "", "get_model"], [15, 2, 1, "", "is_decision_expression"]], "docplex.mp.kpi.FunctionalKPI": [[15, 2, 1, "", "get_model"], [15, 2, 1, "", "is_decision_expression"]], "docplex.mp.kpi.KPI": [[15, 2, 1, "", "get_model"], [15, 2, 1, "", "is_decision_expression"]], "docplex.mp.linear": [[16, 1, 1, "", "AbstractLinearExpr"], [16, 1, 1, "", "ConstantExpr"], [16, 6, 1, "", "DOCplexQuadraticArithException"], [16, 1, 1, "", "LinearExpr"], [16, 1, 1, "", "MonomialExpr"], [16, 1, 1, "", "ZeroExpr"]], "docplex.mp.linear.AbstractLinearExpr": [[16, 2, 1, "", "get_coef"]], "docplex.mp.linear.ConstantExpr": [[16, 2, 1, "", "contains_var"], [16, 2, 1, "", "iter_variables"], [16, 2, 1, "", "number_of_variables"]], "docplex.mp.linear.LinearExpr": [[16, 2, 1, "", "add"], [16, 2, 1, "", "add_term"], [16, 2, 1, "", "clone"], [16, 3, 1, "", "constant"], [16, 2, 1, "", "contains_var"], [16, 2, 1, "", "divide"], [16, 2, 1, "", "equals"], [16, 2, 1, "", "equals_constant"], [16, 2, 1, "", "is_constant"], [16, 2, 1, "", "is_discrete"], [16, 2, 1, "", "iter_terms"], [16, 2, 1, "", "multiply"], [16, 2, 1, "", "negate"], [16, 2, 1, "", "number_of_variables"], [16, 2, 1, "", "plus"], [16, 2, 1, "", "quotient"], [16, 2, 1, "", "remove_term"], [16, 3, 1, "", "solution_value"], [16, 2, 1, "", "subtract"], [16, 2, 1, "", "times"]], "docplex.mp.linear.MonomialExpr": [[16, 2, 1, "", "contains_var"], [16, 2, 1, "", "number_of_variables"]], "docplex.mp.linear.ZeroExpr": [[16, 2, 1, "", "contains_var"], [16, 2, 1, "", "number_of_variables"]], "docplex.mp.model": [[17, 1, 1, "", "Model"]], "docplex.mp.model.Model": [[17, 2, 1, "", "abs"], [17, 2, 1, "", "add_constraint"], [17, 2, 1, "", "add_constraint_"], [17, 2, 1, "", "add_constraints"], [17, 2, 1, "", "add_constraints_"], [17, 2, 1, "", "add_equivalence"], [17, 2, 1, "", "add_equivalence_constraints"], [17, 2, 1, "", "add_equivalence_constraints_"], [17, 2, 1, "", "add_equivalences"], [17, 2, 1, "", "add_if_then"], [17, 2, 1, "", "add_indicator"], [17, 2, 1, "", "add_indicator_constraints"], [17, 2, 1, "", "add_indicator_constraints_"], [17, 2, 1, "", "add_indicators"], [17, 2, 1, "", "add_kpi"], [17, 2, 1, "", "add_lazy_constraint"], [17, 2, 1, "", "add_lazy_constraints"], [17, 2, 1, "", "add_mip_start"], [17, 2, 1, "", "add_progress_listener"], [17, 2, 1, "", "add_quadratic_constraints"], [17, 2, 1, "", "add_range"], [17, 2, 1, "", "add_sos"], [17, 2, 1, "", "add_sos1"], [17, 2, 1, "", "add_sos2"], [17, 2, 1, "", "add_user_cut_constraint"], [17, 2, 1, "", "add_user_cut_constraints"], [17, 2, 1, "", "binary_var"], [17, 2, 1, "", "binary_var_cube"], [17, 2, 1, "", "binary_var_dict"], [17, 2, 1, "", "binary_var_list"], [17, 2, 1, "", "binary_var_matrix"], [17, 3, 1, "", "binary_vartype"], [17, 3, 1, "", "blended_objective_values"], [17, 2, 1, "", "build_multiobj_paramsets"], [17, 2, 1, "", "change_var_lower_bounds"], [17, 2, 1, "", "change_var_types"], [17, 2, 1, "", "change_var_upper_bounds"], [17, 2, 1, "", "clear"], [17, 2, 1, "", "clear_constraints"], [17, 2, 1, "", "clear_kpis"], [17, 2, 1, "", "clear_lazy_constraints"], [17, 2, 1, "", "clear_mip_starts"], [17, 2, 1, "", "clear_multi_objective"], [17, 2, 1, "", "clear_progress_listeners"], [17, 2, 1, "", "clear_sos"], [17, 2, 1, "", "clear_user_cut_constraints"], [17, 2, 1, "", "clone"], [17, 2, 1, "", "continuous_var"], [17, 2, 1, "", "continuous_var_cube"], [17, 2, 1, "", "continuous_var_dict"], [17, 2, 1, "", "continuous_var_list"], [17, 2, 1, "", "continuous_var_matrix"], [17, 3, 1, "", "continuous_vartype"], [17, 3, 1, "", "cplex"], [17, 2, 1, "", "create_parameter_sets"], [17, 2, 1, "", "dot"], [17, 2, 1, "", "dotf"], [17, 2, 1, "", "dual_values"], [17, 2, 1, "", "dump_as_sav"], [17, 2, 1, "", "end"], [17, 2, 1, "", "eq_constraint"], [17, 2, 1, "", "equivalence_constraint"], [17, 2, 1, "", "export_as_lp"], [17, 2, 1, "", "export_as_lp_string"], [17, 2, 1, "", "export_as_mps"], [17, 2, 1, "", "export_as_mps_string"], [17, 2, 1, "", "export_as_sav"], [17, 2, 1, "", "export_as_sav_string"], [17, 2, 1, "", "export_as_savgz"], [17, 2, 1, "", "export_priority_order_file"], [17, 2, 1, "", "export_to_stream"], [17, 2, 1, "", "find_matching_linear_constraints"], [17, 2, 1, "", "find_matching_quadratic_constraints"], [17, 2, 1, "", "find_matching_vars"], [17, 2, 1, "", "find_re_matching_vars"], [17, 3, 1, "", "float_precision"], [17, 2, 1, "", "ge_constraint"], [17, 2, 1, "", "get_constraint_by_index"], [17, 2, 1, "", "get_constraint_by_name"], [17, 2, 1, "", "get_cplex"], [17, 2, 1, "", "get_cuts"], [17, 2, 1, "", "get_num_cuts"], [17, 2, 1, "", "get_objective_expr"], [17, 2, 1, "", "get_parameter_from_id"], [17, 2, 1, "", "get_quadratic_constraint_by_index"], [17, 2, 1, "", "get_solve_status"], [17, 2, 1, "", "get_time_limit"], [17, 2, 1, "", "get_var_by_name"], [17, 2, 1, "", "has_basis"], [17, 2, 1, "", "has_multi_objective"], [17, 2, 1, "", "if_then"], [17, 3, 1, "", "ignore_names"], [17, 2, 1, "", "import_solution"], [17, 2, 1, "", "indicator_constraint"], [17, 3, 1, "", "infinity"], [17, 2, 1, "", "init_numpy"], [17, 2, 1, "", "integer_var"], [17, 2, 1, "", "integer_var_cube"], [17, 2, 1, "", "integer_var_dict"], [17, 2, 1, "", "integer_var_list"], [17, 2, 1, "", "integer_var_matrix"], [17, 3, 1, "", "integer_vartype"], [17, 2, 1, "", "is_maximized"], [17, 2, 1, "", "is_minimized"], [17, 2, 1, "", "is_optimized"], [17, 2, 1, "", "iter_binary_constraints"], [17, 2, 1, "", "iter_binary_vars"], [17, 2, 1, "", "iter_constraints"], [17, 2, 1, "", "iter_continuous_vars"], [17, 2, 1, "", "iter_equivalence_constraints"], [17, 2, 1, "", "iter_indicator_constraints"], [17, 2, 1, "", "iter_integer_vars"], [17, 2, 1, "", "iter_kpis"], [17, 2, 1, "", "iter_lazy_constraints"], [17, 2, 1, "", "iter_linear_constraints"], [17, 2, 1, "", "iter_mip_starts"], [17, 2, 1, "", "iter_progress_listeners"], [17, 2, 1, "", "iter_pwl_constraints"], [17, 2, 1, "", "iter_pwl_functions"], [17, 2, 1, "", "iter_quadratic_constraints"], [17, 2, 1, "", "iter_range_constraints"], [17, 2, 1, "", "iter_semicontinuous_vars"], [17, 2, 1, "", "iter_semiinteger_vars"], [17, 2, 1, "", "iter_sos"], [17, 2, 1, "", "iter_sos1"], [17, 2, 1, "", "iter_sos2"], [17, 2, 1, "", "iter_user_cut_constraints"], [17, 2, 1, "", "iter_variables"], [17, 2, 1, "", "kpi_by_name"], [17, 2, 1, "", "kpi_value_by_name"], [17, 2, 1, "", "kpis_as_dict"], [17, 2, 1, "", "le_constraint"], [17, 2, 1, "", "linear_constraint"], [17, 2, 1, "", "linear_constraint_basis_statuses"], [17, 2, 1, "", "linear_expr"], [17, 2, 1, "", "logical_and"], [17, 2, 1, "", "logical_not"], [17, 2, 1, "", "logical_or"], [17, 3, 1, "", "lp_line_length"], [17, 3, 1, "", "lp_string"], [17, 2, 1, "", "max"], [17, 2, 1, "", "maximize"], [17, 2, 1, "", "maximize_static_lex"], [17, 2, 1, "", "min"], [17, 2, 1, "", "minimize"], [17, 2, 1, "", "minimize_static_lex"], [17, 3, 1, "", "mip_starts"], [17, 3, 1, "", "multi_objective_values"], [17, 3, 1, "", "name"], [17, 3, 1, "", "number_of_binary_variables"], [17, 3, 1, "", "number_of_constraints"], [17, 3, 1, "", "number_of_continuous_variables"], [17, 3, 1, "", "number_of_equivalence_constraints"], [17, 3, 1, "", "number_of_indicator_constraints"], [17, 3, 1, "", "number_of_integer_variables"], [17, 3, 1, "", "number_of_lazy_constraints"], [17, 3, 1, "", "number_of_linear_constraints"], [17, 3, 1, "", "number_of_mip_starts"], [17, 3, 1, "", "number_of_progress_listeners"], [17, 3, 1, "", "number_of_pwl_constraints"], [17, 3, 1, "", "number_of_quadratic_constraints"], [17, 3, 1, "", "number_of_range_constraints"], [17, 3, 1, "", "number_of_semicontinuous_variables"], [17, 3, 1, "", "number_of_semiinteger_variables"], [17, 3, 1, "", "number_of_sos"], [17, 3, 1, "", "number_of_sos1"], [17, 3, 1, "", "number_of_sos2"], [17, 3, 1, "", "number_of_user_constraints"], [17, 3, 1, "", "number_of_user_cut_constraints"], [17, 3, 1, "", "number_of_variables"], [17, 2, 1, "", "objective_coef"], [17, 3, 1, "", "objective_expr"], [17, 3, 1, "", "objective_sense"], [17, 3, 1, "", "objective_value"], [17, 3, 1, "", "parameters"], [17, 2, 1, "", "piecewise"], [17, 2, 1, "", "piecewise_as_slopes"], [17, 2, 1, "", "populate"], [17, 2, 1, "", "populate_solution_pool"], [17, 2, 1, "", "print_information"], [17, 2, 1, "", "print_solution"], [17, 3, 1, "", "problem_type"], [17, 2, 1, "", "quad_expr"], [17, 2, 1, "", "quadratic_dual_slacks"], [17, 3, 1, "", "quality_metrics"], [17, 2, 1, "", "range_constraint"], [17, 2, 1, "", "read_basis_file"], [17, 2, 1, "", "read_mip_starts"], [17, 2, 1, "", "read_priority_order_file"], [17, 2, 1, "", "reduced_costs"], [17, 2, 1, "", "remove"], [17, 2, 1, "", "remove_constraint"], [17, 2, 1, "", "remove_constraints"], [17, 2, 1, "", "remove_kpi"], [17, 2, 1, "", "remove_objective"], [17, 2, 1, "", "remove_progress_listener"], [17, 2, 1, "", "report"], [17, 2, 1, "", "report_kpis"], [17, 2, 1, "", "restore_numpy"], [17, 3, 1, "", "round_solution"], [17, 2, 1, "", "scal_prod"], [17, 2, 1, "", "scal_prod_f"], [17, 2, 1, "", "scal_prod_vars_all_different"], [17, 2, 1, "", "semicontinuous_var"], [17, 2, 1, "", "semicontinuous_var_dict"], [17, 2, 1, "", "semicontinuous_var_list"], [17, 2, 1, "", "semicontinuous_var_matrix"], [17, 3, 1, "", "semicontinuous_vartype"], [17, 2, 1, "", "semiinteger_var"], [17, 2, 1, "", "semiinteger_var_dict"], [17, 2, 1, "", "semiinteger_var_list"], [17, 2, 1, "", "semiinteger_var_matrix"], [17, 3, 1, "", "semiinteger_vartype"], [17, 2, 1, "", "set_lex_multi_objective"], [17, 2, 1, "", "set_lp_start_basis"], [17, 2, 1, "", "set_multi_objective"], [17, 2, 1, "", "set_multi_objective_abstols"], [17, 2, 1, "", "set_multi_objective_exprs"], [17, 2, 1, "", "set_multi_objective_reltols"], [17, 2, 1, "", "set_objective"], [17, 2, 1, "", "set_time_limit"], [17, 2, 1, "", "slack_values"], [17, 3, 1, "", "solution"], [17, 2, 1, "", "solve"], [17, 3, 1, "", "solve_details"], [17, 3, 1, "", "solve_status"], [17, 2, 1, "", "solve_with_goals"], [17, 3, 1, "", "statistics"], [17, 3, 1, "", "str_use_space"], [17, 2, 1, "", "sum"], [17, 2, 1, "", "sum_squares"], [17, 2, 1, "", "sum_vars"], [17, 2, 1, "", "sum_vars_all_different"], [17, 2, 1, "", "sums"], [17, 2, 1, "", "sumsq"], [17, 3, 1, "", "time_limit"], [17, 2, 1, "", "var"], [17, 2, 1, "", "var_basis_statuses"], [17, 2, 1, "", "var_hypercube"]], "docplex.mp.model_reader": [[18, 1, 1, "", "ModelReader"], [18, 6, 1, "", "ModelReaderError"], [18, 4, 1, "", "read_model"]], "docplex.mp.model_reader.ModelReader": [[18, 2, 1, "", "read"], [18, 2, 1, "", "read_model"], [18, 2, 1, "", "read_ops_file"], [18, 2, 1, "", "read_prm"]], "docplex.mp.model_stats": [[19, 1, 1, "", "ModelStatistics"]], "docplex.mp.model_stats.ModelStatistics": [[19, 3, 1, "", "number_of_binary_variables"], [19, 3, 1, "", "number_of_continuous_variables"], [19, 3, 1, "", "number_of_eq_constraints"], [19, 3, 1, "", "number_of_equivalence_constraints"], [19, 3, 1, "", "number_of_ge_constraints"], [19, 3, 1, "", "number_of_indicator_constraints"], [19, 3, 1, "", "number_of_integer_variables"], [19, 3, 1, "", "number_of_le_constraints"], [19, 3, 1, "", "number_of_linear_constraints"], [19, 3, 1, "", "number_of_quadratic_constraints"], [19, 3, 1, "", "number_of_range_constraints"], [19, 3, 1, "", "number_of_semicontinuous_variables"], [19, 3, 1, "", "number_of_semiinteger_variables"], [19, 3, 1, "", "number_of_variables"], [19, 2, 1, "", "print_information"]], "docplex.mp.params": [[20, 0, 0, "-", "parameters"]], "docplex.mp.params.parameters": [[20, 1, 1, "", "BoolParameter"], [20, 1, 1, "", "IntParameter"], [20, 1, 1, "", "NumParameter"], [20, 1, 1, "", "Parameter"], [20, 1, 1, "", "ParameterGroup"], [20, 1, 1, "", "PositiveIntParameter"], [20, 1, 1, "", "RootParameterGroup"], [20, 1, 1, "", "StrParameter"]], "docplex.mp.params.parameters.BoolParameter": [[20, 2, 1, "", "accept_value"]], "docplex.mp.params.parameters.IntParameter": [[20, 2, 1, "", "accept_value"]], "docplex.mp.params.parameters.NumParameter": [[20, 2, 1, "", "accept_value"]], "docplex.mp.params.parameters.Parameter": [[20, 2, 1, "", "accept_value"], [20, 3, 1, "", "cpx_id"], [20, 3, 1, "", "cpx_name"], [20, 3, 1, "", "default_value"], [20, 3, 1, "", "description"], [20, 2, 1, "", "get"], [20, 2, 1, "", "is_default"], [20, 2, 1, "", "is_nondefault"], [20, 3, 1, "", "qualified_name"], [20, 2, 1, "", "reset"], [20, 2, 1, "", "set"], [20, 2, 1, "", "to_string"]], "docplex.mp.params.parameters.ParameterGroup": [[20, 2, 1, "", "clone"], [20, 2, 1, "", "generate_nondefault_params"], [20, 2, 1, "", "generate_params"], [20, 2, 1, "", "is_root"], [20, 2, 1, "", "iter_params"], [20, 3, 1, "", "name"], [20, 3, 1, "", "number_of_params"], [20, 3, 1, "", "number_of_subgroups"], [20, 3, 1, "", "parent_group"], [20, 2, 1, "", "qualified_name"], [20, 2, 1, "", "reset"], [20, 2, 1, "", "total_number_of_params"]], "docplex.mp.params.parameters.RootParameterGroup": [[20, 2, 1, "", "export_prm"], [20, 2, 1, "", "export_prm_to_string"], [20, 2, 1, "", "is_root"], [20, 2, 1, "", "print_info_to_stream"], [20, 2, 1, "", "print_info_to_string"], [20, 2, 1, "", "qualified_name"]], "docplex.mp.params.parameters.StrParameter": [[20, 2, 1, "", "accept_value"], [20, 2, 1, "", "to_string"]], "docplex.mp.priority": [[21, 1, 1, "", "Priority"]], "docplex.mp.priority.Priority": [[21, 2, 1, "", "parse"]], "docplex.mp.progress": [[22, 1, 1, "", "FunctionalSolutionListener"], [22, 1, 1, "", "KpiListener"], [22, 1, 1, "", "KpiPrinter"], [22, 1, 1, "", "ProgressClock"], [22, 1, 1, "", "ProgressData"], [22, 1, 1, "", "ProgressDataRecorder"], [22, 1, 1, "", "ProgressListener"], [22, 1, 1, "", "SolutionListener"], [22, 1, 1, "", "SolutionRecorder"], [22, 1, 1, "", "TextProgressListener"]], "docplex.mp.progress.FunctionalSolutionListener": [[22, 2, 1, "", "notify_solution"]], "docplex.mp.progress.KpiListener": [[22, 2, 1, "", "notify_solution"], [22, 2, 1, "", "publish"]], "docplex.mp.progress.KpiPrinter": [[22, 2, 1, "", "publish"]], "docplex.mp.progress.ProgressData": [[22, 5, 1, "", "best_bound"], [22, 5, 1, "", "current_nb_iterations"], [22, 5, 1, "", "current_nb_nodes"], [22, 5, 1, "", "current_objective"], [22, 5, 1, "", "det_time"], [22, 5, 1, "", "has_incumbent"], [22, 5, 1, "", "mip_gap"], [22, 5, 1, "", "remaining_nb_nodes"], [22, 5, 1, "", "time"]], "docplex.mp.progress.ProgressDataRecorder": [[22, 3, 1, "", "iter_recorded"], [22, 2, 1, "", "notify_progress"], [22, 2, 1, "", "notify_start"], [22, 3, 1, "", "recorded"]], "docplex.mp.progress.ProgressListener": [[22, 2, 1, "", "abort"], [22, 3, 1, "", "clock"], [22, 3, 1, "", "current_progress_data"], [22, 2, 1, "", "notify_end"], [22, 2, 1, "", "notify_progress"], [22, 2, 1, "", "notify_solution"], [22, 2, 1, "", "notify_start"]], "docplex.mp.progress.SolutionListener": [[22, 2, 1, "", "notify_solution"], [22, 2, 1, "", "notify_start"]], "docplex.mp.progress.SolutionRecorder": [[22, 2, 1, "", "iter_solutions"], [22, 2, 1, "", "notify_solution"], [22, 2, 1, "", "notify_start"], [22, 3, 1, "", "number_of_solutions"]], "docplex.mp.progress.TextProgressListener": [[22, 2, 1, "", "notify_progress"], [22, 2, 1, "", "notify_start"]], "docplex.mp.publish": [[23, 1, 1, "", "PublishResultAsDf"]], "docplex.mp.publish.PublishResultAsDf": [[23, 2, 1, "", "write_output_table"]], "docplex.mp.pwl": [[24, 1, 1, "", "PwlFunction"]], "docplex.mp.pwl.PwlFunction": [[24, 2, 1, "", "add"], [24, 2, 1, "", "clone"], [24, 2, 1, "", "divide"], [24, 2, 1, "", "evaluate"], [24, 2, 1, "", "multiply"], [24, 2, 1, "", "plot"], [24, 2, 1, "", "subtract"], [24, 2, 1, "", "translate"]], "docplex.mp.quad": [[25, 1, 1, "", "QuadExpr"]], "docplex.mp.quad.QuadExpr": [[25, 2, 1, "", "clone"], [25, 3, 1, "", "constant"], [25, 2, 1, "", "contains_var"], [25, 2, 1, "", "get_quadratic_coefficient"], [25, 2, 1, "", "has_quadratic_term"], [25, 2, 1, "", "is_quad_expr"], [25, 2, 1, "", "is_separable"], [25, 2, 1, "", "iter_quad_triplets"], [25, 2, 1, "", "iter_terms"], [25, 3, 1, "", "linear_part"], [25, 3, 1, "", "number_of_quadratic_terms"]], "docplex.mp.relax_linear": [[26, 1, 1, "", "LinearRelaxer"]], "docplex.mp.relax_linear.LinearRelaxer": [[26, 2, 1, "", "linear_relaxation"]], "docplex.mp.relaxer": [[27, 1, 1, "", "FunctionalPrioritizer"], [27, 1, 1, "", "MappingPrioritizer"], [27, 1, 1, "", "MatchNamePrioritizer"], [27, 1, 1, "", "NamedPrioritizer"], [27, 1, 1, "", "Prioritizer"], [27, 1, 1, "", "Relaxer"], [27, 1, 1, "", "TOutputTables"], [27, 1, 1, "", "UniformPrioritizer"]], "docplex.mp.relaxer.MatchNamePrioritizer": [[27, 2, 1, "", "get_priority"]], "docplex.mp.relaxer.Relaxer": [[27, 2, 1, "", "get_relaxation"], [27, 2, 1, "", "is_relaxed"], [27, 2, 1, "", "iter_relaxations"], [27, 3, 1, "", "number_of_relaxations"], [27, 2, 1, "", "relax"], [27, 2, 1, "", "relaxations"], [27, 3, 1, "", "relaxed_objective_value"]], "docplex.mp.relaxer.TOutputTables": [[27, 5, 1, "", "Amount"], [27, 5, 1, "", "Constraint"], [27, 5, 1, "", "Priority"]], "docplex.mp.sdetails": [[28, 1, 1, "", "SolveDetails"]], "docplex.mp.sdetails.SolveDetails": [[28, 3, 1, "", "best_bound"], [28, 3, 1, "", "columns"], [28, 3, 1, "", "deterministic_time"], [28, 3, 1, "", "dettime"], [28, 3, 1, "", "gap"], [28, 2, 1, "", "has_hit_limit"], [28, 3, 1, "", "mip_relative_gap"], [28, 3, 1, "", "nb_iterations"], [28, 3, 1, "", "nb_linear_nonzeros"], [28, 3, 1, "", "nb_nodes_processed"], [28, 3, 1, "", "problem_type"], [28, 3, 1, "", "status"], [28, 3, 1, "", "status_code"], [28, 3, 1, "", "time"]], "docplex.mp.solution": [[29, 1, 1, "", "SolutionPool"], [29, 1, 1, "", "SolveSolution"]], "docplex.mp.solution.SolutionPool": [[29, 2, 1, "", "describe_objectives"], [29, 2, 1, "", "export_as_sol"], [29, 3, 1, "", "mean_objective_value"], [29, 3, 1, "", "size"], [29, 3, 1, "", "stats"]], "docplex.mp.solution.SolveSolution": [[29, 2, 1, "", "add_var_value"], [29, 2, 1, "", "as_df"], [29, 2, 1, "", "check_as_mip_start"], [29, 2, 1, "", "clear"], [29, 2, 1, "", "contains"], [29, 2, 1, "", "export"], [29, 2, 1, "", "export_as_json_string"], [29, 2, 1, "", "export_as_mst"], [29, 2, 1, "", "export_as_sol"], [29, 2, 1, "", "from_file"], [29, 2, 1, "", "get_blended_objective_value_by_priority"], [29, 2, 1, "", "get_cuts"], [29, 2, 1, "", "get_dual_values"], [29, 2, 1, "", "get_num_cuts"], [29, 2, 1, "", "get_objective_value"], [29, 2, 1, "", "get_reduced_costs"], [29, 2, 1, "", "get_sensitivity"], [29, 2, 1, "", "get_slacks"], [29, 2, 1, "", "get_status"], [29, 2, 1, "", "get_value"], [29, 2, 1, "", "get_value_df"], [29, 2, 1, "", "get_value_dict"], [29, 2, 1, "", "get_value_list"], [29, 2, 1, "", "get_values"], [29, 2, 1, "", "has_objective"], [29, 2, 1, "", "is_empty"], [29, 2, 1, "", "is_feasible_solution"], [29, 2, 1, "", "is_valid_solution"], [29, 2, 1, "", "iter_var_values"], [29, 2, 1, "", "iter_variables"], [29, 2, 1, "", "kpi_value_by_name"], [29, 3, 1, "", "model"], [29, 3, 1, "", "multi_objective_values"], [29, 3, 1, "", "name"], [29, 3, 1, "", "number_of_var_values"], [29, 3, 1, "", "objective_value"], [29, 2, 1, "", "print_mst"], [29, 2, 1, "", "set_objective_value"], [29, 3, 1, "", "size"], [29, 2, 1, "", "slack_value"], [29, 3, 1, "", "solve_details"], [29, 3, 1, "", "solved_by"], [29, 2, 1, "", "update"]], "docplex.mp.sosvarset": [[30, 1, 1, "", "SOSVariableSet"]], "docplex.mp.sosvarset.SOSVariableSet": [[30, 3, 1, "", "benders_annotation"], [30, 2, 1, "", "iter_variables"], [30, 3, 1, "", "sos_type"], [30, 2, 1, "", "to_string"]], "docplex.mp.vartype": [[31, 1, 1, "", "BinaryVarType"], [31, 1, 1, "", "ContinuousVarType"], [31, 1, 1, "", "IntegerVarType"], [31, 1, 1, "", "SemiContinuousVarType"], [31, 1, 1, "", "SemiIntegerVarType"], [31, 1, 1, "", "VarType"]], "docplex.mp.vartype.BinaryVarType": [[31, 2, 1, "", "is_discrete"]], "docplex.mp.vartype.ContinuousVarType": [[31, 2, 1, "", "is_discrete"]], "docplex.mp.vartype.IntegerVarType": [[31, 2, 1, "", "is_discrete"]], "docplex.mp.vartype.SemiContinuousVarType": [[31, 3, 1, "", "default_lb"], [31, 2, 1, "", "is_discrete"]], "docplex.mp.vartype.SemiIntegerVarType": [[31, 3, 1, "", "default_lb"], [31, 2, 1, "", "is_discrete"]], "docplex.mp.vartype.VarType": [[31, 3, 1, "", "cplex_typecode"], [31, 3, 1, "", "default_lb"], [31, 3, 1, "", "default_ub"], [31, 2, 1, "", "is_discrete"], [31, 3, 1, "", "short_name"], [31, 2, 1, "", "to_string"]], "docplex.mp.with_funcs": [[32, 4, 1, "", "model_objective"], [32, 4, 1, "", "model_parameters"], [32, 4, 1, "", "model_solvefixed"]], "docplex.util": [[33, 0, 0, "-", "csv_utils"], [34, 0, 0, "-", "environment"]], "docplex.util.csv_utils": [[33, 4, 1, "", "encode_csv_string"], [33, 4, 1, "", "write_table_as_csv"]], "docplex.util.environment": [[34, 1, 1, "", "AbstractLocalEnvironment"], [34, 1, 1, "", "Environment"], [34, 1, 1, "", "LocalEnvironment"], [34, 6, 1, "", "NotAvailableError"], [34, 1, 1, "", "OutputAttachmentTransaction"], [34, 1, 1, "", "OverrideEnvironment"], [34, 1, 1, "", "SolveDetailsFilter"], [34, 4, 1, "", "add_abort_callback"], [34, 4, 1, "", "default_solution_storage_handler"], [34, 4, 1, "", "get_available_core_count"], [34, 4, 1, "", "get_environment"], [34, 4, 1, "", "get_input_stream"], [34, 4, 1, "", "get_output_stream"], [34, 4, 1, "", "get_parameter"], [34, 4, 1, "", "make_attachment_name"], [34, 4, 1, "", "maketrans"], [34, 4, 1, "", "read_df"], [34, 4, 1, "", "remove_abort_callback"], [34, 4, 1, "", "set_output_attachment"], [34, 4, 1, "", "set_output_attachments"], [34, 4, 1, "", "translate"], [34, 4, 1, "", "update_solve_details"], [34, 4, 1, "", "write_df"]], "docplex.util.environment.AbstractLocalEnvironment": [[34, 2, 1, "", "get_available_core_count"], [34, 2, 1, "", "get_input_stream"], [34, 2, 1, "", "get_output_stream"], [34, 2, 1, "", "get_parameter"], [34, 2, 1, "", "get_parameters"], [34, 2, 1, "", "set_output_attachment"], [34, 2, 1, "", "set_output_attachments"]], "docplex.util.environment.Environment": [[34, 5, 1, "", "abort_callbacks"], [34, 2, 1, "", "create_transaction"], [34, 2, 1, "", "get_available_core_count"], [34, 2, 1, "", "get_engine_log_level"], [34, 2, 1, "", "get_input_stream"], [34, 2, 1, "", "get_output_stream"], [34, 2, 1, "", "get_parameter"], [34, 2, 1, "", "get_parameters"], [34, 2, 1, "", "get_stop_callback"], [34, 2, 1, "", "is_debug_mode"], [34, 2, 1, "", "publish_solve_details"], [34, 2, 1, "", "read_df"], [34, 5, 1, "", "record_history_fields"], [34, 5, 1, "", "record_history_size"], [34, 5, 1, "", "record_interval"], [34, 2, 1, "", "set_output_attachment"], [34, 2, 1, "", "set_output_attachments"], [34, 2, 1, "", "set_stop_callback"], [34, 5, 1, "", "solution_storage_handler"], [34, 3, 1, "", "stop_callback"], [34, 2, 1, "", "store_solution"], [34, 2, 1, "", "update_solve_details"], [34, 2, 1, "", "write_df"]], "docplex.util.environment.OutputAttachmentTransaction": [[34, 2, 1, "", "close"], [34, 2, 1, "", "commit"], [34, 2, 1, "", "set_output_attachments"]], "docplex.util.environment.SolveDetailsFilter": [[34, 2, 1, "", "filter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"readm": 0, "md": 0, "object": [1, 2, 40, 41, 44, 45, 46, 51, 54, 55], "box": 1, "describ": [1, 2, 40, 41, 44, 45, 46, 54], "busi": [1, 2, 40, 41, 44, 45, 46, 51, 54, 55], "problem": [1, 2, 40, 41, 44, 45, 46, 51, 54, 55], "how": [1, 2, 40, 41, 44, 45, 46, 51, 54], "decis": [1, 2, 3, 37, 40, 41, 44, 45, 46, 51, 54, 55], "optim": [1, 2, 35, 37, 40, 41, 44, 45, 46, 51, 54], "can": [1, 2, 40, 41, 44, 45, 46, 51, 54], "help": [1, 2, 40, 41, 44, 45, 46, 51, 54], "us": [1, 2, 35, 40, 41, 44, 45, 46, 51, 54], "step": [1, 2, 40, 41, 44, 45, 46, 51, 54], "1": [1, 2, 40, 41, 44, 45, 46, 51, 54], "import": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54], "librari": [1, 2, 35, 36, 40, 41, 44, 45, 46, 51, 54], "2": [1, 2, 40, 41, 44, 45, 46, 51, 54], "model": [1, 2, 3, 17, 36, 37, 40, 41, 44, 45, 46, 51, 54, 55], "data": [1, 2, 40, 41, 44, 45, 46, 51, 54, 55], "3": [1, 2, 40, 41, 44, 45, 46, 51, 54], "prepar": [1, 2, 40, 41, 44, 45, 46, 51, 54], "4": [1, 2, 41, 44, 45, 46, 51, 54], "set": [1, 2, 35, 36, 40, 41, 44, 45, 46, 51, 54], "up": [1, 2, 35, 36, 40, 41, 44, 45, 46, 51, 54], "prescript": [1, 2, 40, 41, 44, 45, 46, 51, 54], "creat": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54], "docplex": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 41, 44, 45, 46, 48, 51, 52, 54, 55], "defin": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54, 55], "variabl": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54, 55], "express": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54], "constraint": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54, 55], "solv": [1, 2, 3, 40, 41, 44, 45, 46, 51, 54, 55], "addit": [1, 41], "5": [1, 2, 41, 44, 45, 46, 51, 54], "investig": [1, 2, 41, 44, 45, 46, 51, 54], "solut": [1, 2, 29, 40, 41, 44, 45, 46, 51, 54], "run": [1, 2, 41, 44, 45, 46, 49, 51, 54], "an": [1, 2, 35, 41, 44, 45, 46, 51, 54], "exampl": [1, 2, 36, 41, 44, 45, 46, 49, 51, 54], "analysi": [1, 2, 41, 44, 45, 46, 51, 54], "summari": [1, 2, 40, 41, 44, 45, 46, 51, 54], "refer": [1, 2, 40, 41, 44, 45, 46, 48], "find": 2, "locat": 2, "new": [2, 44], "store": 2, "comput": [2, 35, 44, 45], "earth": 2, "distanc": 2, "between": [2, 51, 54], "point": 2, "declar": 2, "list": 2, "number": [2, 41, 51, 54], "shop": 2, "open": [2, 41], "valid": 2, "displai": [2, 46, 55], "them": 2, "mathemat": [3, 37, 49], "program": [3, 37, 49], "build": 3, "aggreg": 3, "necessari": 3, "modul": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "paramet": [3, 20], "retriev": 3, "result": [3, 41, 44, 55], "gener": 3, "lp": 3, "file": 3, "cutstock": 4, "py": [4, 5, 38, 39, 42, 43, 47, 50], "diet": 5, "mp": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 48], "basic": 6, "callback": 7, "cb_mixin": 7, "conflict_refin": 8, "constant": 9, "constr": 10, "context": 11, "dvar": 12, "environ": [13, 34, 36], "error_handl": 14, "kpi": [15, 41, 44], "linear": 16, "model_read": 18, "model_stat": 19, "param": 20, "prioriti": 21, "progress": 22, "publish": 23, "pwl": 24, "quad": 25, "relax_linear": 26, "relax": 27, "sdetail": 28, "sosvarset": 30, "vartyp": 31, "with_func": 32, "util": [33, 34], "csv_util": 33, "engin": 35, "get": [35, 36], "ibm": [35, 40, 52], "setup": 35, "ilog": 35, "cplex": [35, 36, 40], "studio": 35, "your": 35, "instal": [35, 36], "ce": 35, "pip": [35, 36], "conda": [35, 36], "packag": [35, 36], "python": [36, 37, 40], "system": 36, "requir": [36, 41, 44, 45, 54], "develop": 36, "tool": 36, "try": 36, "out": 36, "local": 36, "manag": 36, "more": 36, "resourc": 36, "troubleshoot": [36, 53], "what": [37, 44], "i": [37, 41, 44], "contact": [37, 52], "follow": 37, "indic": [37, 48], "tabl": [37, 48], "lagrangian_relax": 38, "load_balanc": 39, "make": 40, "target": 40, "offer": 40, "custom": 40, "analyz": [40, 44], "mine": 41, "oper": 41, "total": [41, 46], "actual": 41, "revenu": 41, "expect": 41, "royalti": 41, "check": [41, 44, 54], "minimum": [41, 44, 45, 54], "blend": 41, "qualiti": 41, "global": 41, "onli": 41, "work": [41, 44, 45], "onc": [41, 51], "close": 41, "stai": 41, "The": [41, 44, 45, 51, 54, 55], "each": [41, 44, 51], "year": 41, "limit": 41, "quantiti": 41, "extract": 41, "averag": [41, 45], "discount": 41, "rate": 41, "arrai": 41, "cost": [41, 44, 54], "visual": 41, "ad": 41, "heurist": 41, "start": [41, 44], "nurs": [42, 44, 45], "nurses_multiobj": 43, "assign": [44, 45], "load": [44, 45, 54], "from": [44, 45, 54], "excel": [44, 45], "panda": [44, 45, 54], "sub": 44, "absolut": 44, "time": [44, 45], "shift": [44, 45], "end": 44, "durat": 44, "demand": [44, 46, 54], "overlap": [44, 45], "vacat": [44, 45], "associ": [44, 45], "incompat": [44, 45], "minim": [44, 45], "salari": 44, "worktim": 44, "distribut": 44, "ar": 44, "introduc": 44, "fair": 44, "goal": 44, "three": 44, "per": 44, "post": 44, "link": [44, 54], "togeth": 44, "measur": 44, "after": 44, "But": 44, "would": 44, "level": [44, 46], "first": [45, 51], "second": 45, "under": 45, "over": 45, "third": 45, "fourth": 45, "cannot": [45, 51], "fifth": 45, "enforc": 45, "maximum": [45, 46], "sixth": 45, "skill": 45, "select": 45, "seventh": 45, "eighth": 45, "maxim": 46, "profit": 46, "oil": 46, "compani": 46, "capac": 46, "octan": 46, "lead": 46, "product": [46, 47, 54], "manual": 48, "download": 49, "content": 49, "sourc": 49, "sport_schedul": 50, "sport": 51, "leagu": 51, "schedul": 51, "its": 51, "game": 51, "nation": 51, "footbal": 51, "pair": 51, "team": 51, "must": 51, "plai": 51, "correct": 51, "exactli": 51, "week": 51, "same": 51, "success": 51, "some": 51, "intradivision": 51, "should": 51, "half": 51, "elit": 52, "support": 52, "comprehens": 52, "eclips": 52, "platform": 52, "provid": 52, "portal": 52, "unit": 54, "commit": 54, "ucp": 54, "datafram": 54, "avail": 54, "energi": 54, "technologi": 54, "statu": 54, "initi": 54, "state": 54, "ramp": 54, "down": 54, "turn": 54, "off": 54, "uptim": 54, "downtim": 54, "plant": 54, "onlin": 54, "period": 54, "breakdown": 54, "arbitr": 54, "co2": 54, "econom": 54, "warehous": 55, "input": 55, "math": 55, "explor": 55, "pareto": 55, "frontier": 55, "diagram": 55}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"README.md": [[0, "readme-md"]], "Objects in boxes": [[1, "objects-in-boxes"]], "Describe the business problem": [[1, "describe-the-business-problem"], [2, "describe-the-business-problem"], [40, "describe-the-business-problem"], [41, "describe-the-business-problem"], [44, "describe-the-business-problem"], [45, "describe-the-business-problem"], [46, "describe-the-business-problem"], [54, "describe-the-business-problem"]], "How decision optimization can help": [[1, "how-decision-optimization-can-help"], [2, "how-decision-optimization-can-help"], [40, "how-decision-optimization-can-help"], [41, "how-decision-optimization-can-help"], [44, "how-decision-optimization-can-help"], [45, "how-decision-optimization-can-help"], [46, "how-decision-optimization-can-help"], [51, "how-decision-optimization-can-help"], [54, "how-decision-optimization-can-help"]], "Use decision optimization": [[1, "use-decision-optimization"], [2, "use-decision-optimization"], [41, "use-decision-optimization"], [44, "use-decision-optimization"], [45, "use-decision-optimization"], [46, "use-decision-optimization"], [51, "use-decision-optimization"], [54, "use-decision-optimization"]], "Step 1: Import the library": [[1, "step-1-import-the-library"], [2, "step-1-import-the-library"], [40, "step-1-import-the-library"], [41, "step-1-import-the-library"], [44, "step-1-import-the-library"], [45, "step-1-import-the-library"], [46, "step-1-import-the-library"], [51, "step-1-import-the-library"], [54, "step-1-import-the-library"]], "Step 2: Model the data": [[1, "step-2-model-the-data"], [2, "step-2-model-the-data"], [41, "step-2-model-the-data"], [44, "step-2-model-the-data"], [45, "step-2-model-the-data"], [46, "step-2-model-the-data"], [51, "step-2-model-the-data"], [54, "step-2-model-the-data"]], "Step 3: Prepare the data": [[1, "step-3-prepare-the-data"], [2, "step-3-prepare-the-data"], [41, "step-3-prepare-the-data"], [44, "step-3-prepare-the-data"], [45, "step-3-prepare-the-data"], [46, "step-3-prepare-the-data"], [51, "step-3-prepare-the-data"], [54, "step-3-prepare-the-data"]], "Step 4: Set up the prescriptive model": [[1, "step-4-set-up-the-prescriptive-model"], [2, "step-4-set-up-the-prescriptive-model"], [41, "step-4-set-up-the-prescriptive-model"], [44, "step-4-set-up-the-prescriptive-model"], [45, "step-4-set-up-the-prescriptive-model"], [46, "step-4-set-up-the-prescriptive-model"], [51, "step-4-set-up-the-prescriptive-model"], [54, "step-4-set-up-the-prescriptive-model"]], "Create the DOcplex model": [[1, "create-the-docplex-model"], [2, "create-the-docplex-model"], [44, "create-the-docplex-model"], [45, "create-the-docplex-model"], [46, "create-the-docplex-model"], [51, "create-the-docplex-model"], [54, "create-the-docplex-model"]], "Define the decision variables": [[1, "define-the-decision-variables"], [2, "define-the-decision-variables"], [40, "define-the-decision-variables"], [41, "define-the-decision-variables"], [44, "define-the-decision-variables"], [45, "define-the-decision-variables"], [46, "define-the-decision-variables"], [51, "define-the-decision-variables"], [54, "define-the-decision-variables"]], "Express the business constraints": [[1, "express-the-business-constraints"], [2, "express-the-business-constraints"], [41, "express-the-business-constraints"], [44, "express-the-business-constraints"], [45, "express-the-business-constraints"], [46, "express-the-business-constraints"], [51, "express-the-business-constraints"], [54, "express-the-business-constraints"]], "Express the objective": [[1, "express-the-objective"], [2, "express-the-objective"], [40, "express-the-objective"], [41, "express-the-objective"], [44, "express-the-objective"], [45, "express-the-objective"], [46, "express-the-objective"], [51, "express-the-objective"], [54, "express-the-objective"]], "Solve the model": [[1, "solve-the-model"], [40, "solve-the-model"]], "Additional constraint #1": [[1, "additional-constraint-1"]], "Additional constraint #2": [[1, "additional-constraint-2"]], "Step 5: Investigate the solution and then run an example analysis": [[1, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [2, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [41, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [44, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [45, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [46, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [51, "step-5-investigate-the-solution-and-then-run-an-example-analysis"], [54, "step-5-investigate-the-solution-and-then-run-an-example-analysis"]], "Summary": [[1, "summary"], [2, "summary"], [40, "summary"], [41, "summary"], [44, "summary"], [45, "summary"], [46, "summary"], [51, "summary"], [54, "summary"]], "References": [[1, "references"], [2, "references"], [40, "references"], [41, "references"], [44, "references"], [45, "references"], [46, "references"]], "Finding optimal locations of new stores": [[2, "finding-optimal-locations-of-new-stores"]], "Define how to compute the earth distance between 2 points": [[2, "define-how-to-compute-the-earth-distance-between-2-points"]], "Declare the list of libraries": [[2, "declare-the-list-of-libraries"]], "Define number of shops to open": [[2, "define-number-of-shops-to-open"]], "Validate the data by displaying them": [[2, "validate-the-data-by-displaying-them"]], "Solve with Decision Optimization": [[2, "solve-with-decision-optimization"], [41, "solve-with-decision-optimization"], [44, "solve-with-decision-optimization"], [45, "solve-with-decision-optimization"], [46, "solve-with-decision-optimization"], [51, "solve-with-decision-optimization"], [54, "solve-with-decision-optimization"]], "Displaying the solution": [[2, "displaying-the-solution"], [46, "displaying-the-solution"]], "Creating a mathematical programming model": [[3, "creating-a-mathematical-programming-model"]], "Define model decision variables": [[3, "define-model-decision-variables"]], "Build model expressions": [[3, "build-model-expressions"]], "Aggregated expressions": [[3, "aggregated-expressions"]], "Building constraints": [[3, "building-constraints"]], "Build a model": [[3, "build-a-model"]], "Import necessary modules": [[3, "import-necessary-modules"]], "Solving parameters": [[3, "solving-parameters"]], "Retrieve results": [[3, "retrieve-results"]], "Generate LP file": [[3, "generate-lp-file"]], "cutstock.py": [[4, "cutstock-py"]], "diet.py": [[5, "diet-py"]], "docplex.mp.basic module": [[6, "docplex-mp-basic-module"]], "docplex.mp.callbacks.cb_mixin module": [[7, "docplex-mp-callbacks-cb-mixin-module"]], "docplex.mp.conflict_refiner module": [[8, "docplex-mp-conflict-refiner-module"]], "docplex.mp.constants module": [[9, "docplex-mp-constants-module"]], "docplex.mp.constr module": [[10, "docplex-mp-constr-module"]], "docplex.mp.context module": [[11, "docplex-mp-context-module"]], "docplex.mp.dvar module": [[12, "docplex-mp-dvar-module"]], "docplex.mp.environment module": [[13, "docplex-mp-environment-module"]], "docplex.mp.error_handler module": [[14, "docplex-mp-error-handler-module"]], "docplex.mp.kpi module": [[15, "docplex-mp-kpi-module"]], "docplex.mp.linear module": [[16, "docplex-mp-linear-module"]], "docplex.mp.model module": [[17, "docplex-mp-model-module"]], "docplex.mp.model_reader module": [[18, "docplex-mp-model-reader-module"]], "docplex.mp.model_stats module": [[19, "docplex-mp-model-stats-module"]], "docplex.mp.params.parameters module": [[20, "docplex-mp-params-parameters-module"]], "docplex.mp.priority module": [[21, "docplex-mp-priority-module"]], "docplex.mp.progress module": [[22, "docplex-mp-progress-module"]], "docplex.mp.publish module": [[23, "docplex-mp-publish-module"]], "docplex.mp.pwl module": [[24, "docplex-mp-pwl-module"]], "docplex.mp.quad module": [[25, "docplex-mp-quad-module"]], "docplex.mp.relax_linear module": [[26, "docplex-mp-relax-linear-module"]], "docplex.mp.relaxer module": [[27, "docplex-mp-relaxer-module"]], "docplex.mp.sdetails module": [[28, "docplex-mp-sdetails-module"]], "docplex.mp.solution module": [[29, "docplex-mp-solution-module"]], "docplex.mp.sosvarset module": [[30, "docplex-mp-sosvarset-module"]], "docplex.mp.vartype module": [[31, "docplex-mp-vartype-module"]], "docplex.mp.with_funcs module": [[32, "docplex-mp-with-funcs-module"]], "docplex.util.csv_utils module": [[33, "docplex-util-csv-utils-module"]], "docplex.util.environment module": [[34, "docplex-util-environment-module"]], "Setting up an optimization engine": [[35, "setting-up-an-optimization-engine"]], "Get IBM\u00ae optimizers": [[35, "get-ibmreg-optimizers"]], "Engine setup": [[35, "engine-setup"]], "Using IBM ILOG CPLEX Optimization Studio on your computer": [[35, "using-ibm-ilog-cplex-optimization-studio-on-your-computer"]], "Installing IBM ILOG CPLEX Optimization CE": [[35, "installing-ibm-ilog-cplex-optimization-ce"]], "Installing IBM ILOG CPLEX Optimization library with pip": [[35, "installing-ibm-ilog-cplex-optimization-library-with-pip"]], "Installing the IBM ILOG CPLEX Optimization library with conda install packager": [[35, "installing-the-ibm-ilog-cplex-optimization-library-with-conda-install-packager"]], "Setting up a Python environment": [[36, "setting-up-a-python-environment"]], "System requirements": [[36, "system-requirements"]], "Get Python development tools": [[36, "get-python-development-tools"]], "Installing the CPLEX modeling library with pip": [[36, "installing-the-cplex-modeling-library-with-pip"]], "Installing the CPLEX modeling library with conda install packager": [[36, "installing-the-cplex-modeling-library-with-conda-install-packager"]], "Try out DOcplex, no local installation required!": [[36, "try-out-docplex-no-local-installation-required"]], "Managing environments": [[36, "managing-environments"]], "Installing examples": [[36, "installing-examples"]], "More resources on Python": [[36, "more-resources-on-python"]], "Troubleshooting": [[36, "troubleshooting"], [53, "troubleshooting"]], "Mathematical Programming Modeling for Python (DOcplex.MP)": [[37, "mathematical-programming-modeling-for-python-docplex-mp"], [37, "id1"]], "What is Decision Optimization?": [[37, "what-is-decision-optimization"]], "Contacts": [[37, "contacts"], [52, "contacts"]], "Follow Decision Optimization": [[37, "follow-decision-optimization"]], "Indices and tables": [[37, "indices-and-tables"], [48, "indices-and-tables"]], "lagrangian_relaxation.py": [[38, "lagrangian-relaxation-py"]], "load_balancing.py": [[39, "load-balancing-py"]], "How to make targeted offers to customers?": [[40, "how-to-make-targeted-offers-to-customers"]], "Prepare the data": [[40, "prepare-the-data"]], "Use IBM Decision Optimization CPLEX Modeling for Python": [[40, "use-ibm-decision-optimization-cplex-modeling-for-python"]], "Step 2: Set up the prescriptive model": [[40, "step-2-set-up-the-prescriptive-model"]], "Create the model": [[40, "create-the-model"]], "Set up the constraints": [[40, "set-up-the-constraints"]], "Step 3: Analyze the solution": [[40, "step-3-analyze-the-solution"]], "Optimizing mining operations": [[41, "optimizing-mining-operations"]], "Business constraints": [[41, "business-constraints"]], "Objective and KPIs": [[41, "objective-and-kpis"]], "Total actualized revenue": [[41, "total-actualized-revenue"], [41, "id1"]], "Total expected royalties": [[41, "total-expected-royalties"]], "Business objective": [[41, "business-objective"]], "Checking minimum requirements": [[41, "checking-minimum-requirements"], [44, "checking-minimum-requirements"], [54, "checking-minimum-requirements"]], "Mining Data": [[41, "mining-data"]], "Blend quality data": [[41, "blend-quality-data"]], "Additional (global) data": [[41, "additional-global-data"]], "Create DOcplex model": [[41, "create-docplex-model"]], "Constraint 1: Only open mines can be worked.": [[41, "constraint-1-only-open-mines-can-be-worked"]], "Constraint 2: Once closed, a mine stays closed.": [[41, "constraint-2-once-closed-a-mine-stays-closed"]], "Constraint 3: The number of worked mines each year is limited.": [[41, "constraint-3-the-number-of-worked-mines-each-year-is-limited"]], "Constraint 4: The quantity extracted is limited.": [[41, "constraint-4-the-quantity-extracted-is-limited"]], "Blend constraints": [[41, "blend-constraints"]], "Minimum average blend quality constraint": [[41, "minimum-average-blend-quality-constraint"]], "KPIs and objective": [[41, "kpis-and-objective"]], "The discount rate array": [[41, "the-discount-rate-array"]], "Total actualized royalty cost": [[41, "total-actualized-royalty-cost"]], "Visualize results": [[41, "visualize-results"]], "Adding operational constraints.": [[41, "adding-operational-constraints"]], "Using an heuristic start solution": [[41, "using-an-heuristic-start-solution"]], "nurses.py": [[42, "nurses-py"]], "nurses_multiobj.py": [[43, "nurses-multiobj-py"]], "The Nurse Assignment Problem": [[44, "the-nurse-assignment-problem"]], "Loading data from Excel with pandas": [[44, "loading-data-from-excel-with-pandas"], [45, "loading-data-from-excel-with-pandas"]], "Sub-step #1": [[44, "sub-step-1"]], "Sub-step #2 : Compute the absolute start time of each shift.": [[44, "sub-step-2-compute-the-absolute-start-time-of-each-shift"]], "Sub-Step #3 : Compute the absolute end time of each shift.": [[44, "sub-step-3-compute-the-absolute-end-time-of-each-shift"]], "Sub-step #4 : Compute the duration of each shift.": [[44, "sub-step-4-compute-the-duration-of-each-shift"]], "Sub-step #5 : Compute the minimum demand for each shift.": [[44, "sub-step-5-compute-the-minimum-demand-for-each-shift"]], "Overlapping shifts": [[44, "overlapping-shifts"]], "Vacations": [[44, "vacations"]], "Associations": [[44, "associations"]], "Incompatibilities": [[44, "incompatibilities"]], "Constraints on work time": [[44, "constraints-on-work-time"]], "Minimum requirement for shifts": [[44, "minimum-requirement-for-shifts"]], "Minimizing salary cost": [[44, "minimizing-salary-cost"]], "Analyzing how worktime is distributed": [[44, "analyzing-how-worktime-is-distributed"]], "How shifts are distributed": [[44, "how-shifts-are-distributed"]], "Introducing a fairness goal": [[44, "introducing-a-fairness-goal"]], "Step #1 : Introduce three new variables per nurse to model the": [[44, "step-1-introduce-three-new-variables-per-nurse-to-model-the"]], "Step #2 : Post the constraint that links these variables together.": [[44, "step-2-post-the-constraint-that-links-these-variables-together"]], "Step #3 : Define KPIs to measure the result after solve.": [[44, "step-3-define-kpis-to-measure-the-result-after-solve"]], "Analyzing new results": [[44, "analyzing-new-results"]], "But what would be the minimal fairness level?": [[44, "but-what-would-be-the-minimal-fairness-level"]], "The Nurses Model": [[45, "the-nurses-model"]], "First constraint: define average work time": [[45, "first-constraint-define-average-work-time"]], "Second constraint: compute nurse work time, average and under/over time": [[45, "second-constraint-compute-nurse-work-time-average-and-under-over-time"]], "Third constraint: vacations": [[45, "third-constraint-vacations"]], "Fourth constraint: a nurse cannot be assigned overlapping shifts": [[45, "fourth-constraint-a-nurse-cannot-be-assigned-overlapping-shifts"]], "Fifth constraint: enforce minimum and maximum requirements for shifts": [[45, "fifth-constraint-enforce-minimum-and-maximum-requirements-for-shifts"]], "Sixth constraint: enforce skill requirements for selected shifts": [[45, "sixth-constraint-enforce-skill-requirements-for-selected-shifts"]], "Seventh constraint: associations": [[45, "seventh-constraint-associations"]], "Eighth constraint: incompatibilities": [[45, "eighth-constraint-incompatibilities"]], "Minimizing objective": [[45, "minimizing-objective"]], "Maximizing the profit of an oil company": [[46, "maximizing-the-profit-of-an-oil-company"]], "Demand": [[46, "demand"]], "Maximum capacity": [[46, "maximum-capacity"]], "Octane and Lead levels": [[46, "octane-and-lead-levels"]], "Maximum total production": [[46, "maximum-total-production"]], "Production": [[46, "production"]], "production.py": [[47, "production-py"]], "docplex.mp reference manual": [[48, "docplex-mp-reference-manual"]], "Examples of mathematical programming": [[49, "examples-of-mathematical-programming"]], "Downloading the examples": [[49, "downloading-the-examples"]], "Examples content and source": [[49, "examples-content-and-source"]], "Running the examples": [[49, "running-the-examples"]], "sport_scheduling.py": [[50, "sport-scheduling-py"]], "Use decision optimization to help a sports league schedule its games": [[51, "use-decision-optimization-to-help-a-sports-league-schedule-its-games"]], "The business problem: Games Scheduling in the National Football League": [[51, "the-business-problem-games-scheduling-in-the-national-football-league"]], "Each pair of teams must play the correct number of games.": [[51, "each-pair-of-teams-must-play-the-correct-number-of-games"]], "Each team must play exactly once in a week.": [[51, "each-team-must-play-exactly-once-in-a-week"]], "Games between the same teams cannot be on successive weeks.": [[51, "games-between-the-same-teams-cannot-be-on-successive-weeks"]], "Some intradivisional games should be in the first half.": [[51, "some-intradivisional-games-should-be-in-the-first-half"]], "IBM\u00ae Elite Support for DOcplex": [[52, "ibmreg-elite-support-for-docplex"]], "Comprehensive support for the Eclipse platform provided by IBM": [[52, "comprehensive-support-for-the-eclipse-platform-provided-by-ibm"]], "Support portal": [[52, "support-portal"]], "The Unit Commitment Problem (UCP)": [[54, "the-unit-commitment-problem-ucp"]], "Load data from a pandas DataFrame": [[54, "load-data-from-a-pandas-dataframe"]], "Available energy technologies": [[54, "available-energy-technologies"]], "Linking in-use status to production": [[54, "linking-in-use-status-to-production"]], "Initial state": [[54, "initial-state"]], "Ramp-up / ramp-down constraint": [[54, "ramp-up-ramp-down-constraint"]], "Turn on / turn off": [[54, "turn-on-turn-off"]], "Minimum uptime and downtime": [[54, "minimum-uptime-and-downtime"]], "Demand constraint": [[54, "demand-constraint"]], "Number of plants online by period": [[54, "number-of-plants-online-by-period"]], "Costs by period": [[54, "costs-by-period"]], "Cost breakdown by unit and by energy": [[54, "cost-breakdown-by-unit-and-by-energy"]], "Arbitration between CO2 cost and economic cost": [[54, "arbitration-between-co2-cost-and-economic-cost"]], "The Warehouse Problem": [[55, "the-warehouse-problem"]], "Input Data": [[55, "input-data"]], "Business Decisions": [[55, "business-decisions"]], "Business Constraints": [[55, "business-constraints"]], "Business Objective": [[55, "business-objective"]], "The math model": [[55, "the-math-model"]], "Solving with DOcplex": [[55, "solving-with-docplex"]], "The model": [[55, "the-model"]], "Defining decision variables": [[55, "defining-decision-variables"]], "Defining constraints": [[55, "defining-constraints"]], "Defining the Objective": [[55, "defining-the-objective"]], "Solving the model": [[55, "solving-the-model"]], "Displaying results": [[55, "displaying-results"]], "Exploring the Pareto frontier": [[55, "exploring-the-pareto-frontier"]], "Pareto Diagram": [[55, "pareto-diagram"]]}, "indexentries": {"expr (class in docplex.mp.basic)": [[6, "docplex.mp.basic.Expr"]], "indexableobject (class in docplex.mp.basic)": [[6, "docplex.mp.basic.IndexableObject"]], "modelobject (class in docplex.mp.basic)": [[6, "docplex.mp.basic.ModelObject"]], "modelingobjectbase (class in docplex.mp.basic)": [[6, "docplex.mp.basic.ModelingObjectBase"]], "contains_var() (docplex.mp.basic.expr method)": [[6, "docplex.mp.basic.Expr.contains_var"]], "docplex.mp.basic": [[6, "module-docplex.mp.basic"]], "has_name() (docplex.mp.basic.modelingobjectbase method)": [[6, "docplex.mp.basic.ModelingObjectBase.has_name"]], "has_user_name() (docplex.mp.basic.modelingobjectbase method)": [[6, "docplex.mp.basic.ModelingObjectBase.has_user_name"]], "is_generated() (docplex.mp.basic.indexableobject method)": [[6, "docplex.mp.basic.IndexableObject.is_generated"]], "is_quad_expr() (docplex.mp.basic.expr method)": [[6, "docplex.mp.basic.Expr.is_quad_expr"]], "model (docplex.mp.basic.indexableobject property)": [[6, "docplex.mp.basic.IndexableObject.model"]], "model (docplex.mp.basic.modelingobjectbase property)": [[6, "docplex.mp.basic.ModelingObjectBase.model"]], "module": [[6, "module-docplex.mp.basic"], [7, "module-docplex.mp.callbacks.cb_mixin"], [8, "module-docplex.mp.conflict_refiner"], [9, "module-docplex.mp.constants"], [10, "module-docplex.mp.constr"], [11, "module-docplex.mp.context"], [12, "module-docplex.mp.dvar"], [13, "module-docplex.mp.environment"], [14, "module-docplex.mp.error_handler"], [15, "module-docplex.mp.kpi"], [16, "module-docplex.mp.linear"], [17, "module-docplex.mp.model"], [18, "module-docplex.mp.model_reader"], [19, "module-docplex.mp.model_stats"], [20, "module-docplex.mp.params.parameters"], [21, "module-docplex.mp.priority"], [22, "module-docplex.mp.progress"], [23, "module-docplex.mp.publish"], [24, "module-docplex.mp.pwl"], [25, "module-docplex.mp.quad"], [26, "module-docplex.mp.relax_linear"], [27, "module-docplex.mp.relaxer"], [28, "module-docplex.mp.sdetails"], [29, "module-docplex.mp.solution"], [30, "module-docplex.mp.sosvarset"], [31, "module-docplex.mp.vartype"], [32, "module-docplex.mp.with_funcs"], [33, "module-docplex.util.csv_utils"], [34, "module-docplex.util.environment"]], "name (docplex.mp.basic.modelingobjectbase property)": [[6, "docplex.mp.basic.ModelingObjectBase.name"]], "number_of_variables() (docplex.mp.basic.expr method)": [[6, "docplex.mp.basic.Expr.number_of_variables"]], "constraintcallbackmixin (class in docplex.mp.callbacks.cb_mixin)": [[7, "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin"]], "modelcallbackmixin (class in docplex.mp.callbacks.cb_mixin)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin"]], "docplex.mp.callbacks.cb_mixin": [[7, "module-docplex.mp.callbacks.cb_mixin"]], "get_cpx_unsatisfied_cts() (docplex.mp.callbacks.cb_mixin.constraintcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin.get_cpx_unsatisfied_cts"]], "index_to_var() (docplex.mp.callbacks.cb_mixin.modelcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.index_to_var"]], "linear_ct_to_cplex() (docplex.mp.callbacks.cb_mixin.modelcallbackmixin static method)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.linear_ct_to_cplex"]], "make_complete_solution() (docplex.mp.callbacks.cb_mixin.modelcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.make_complete_solution"]], "make_solution() (docplex.mp.callbacks.cb_mixin.modelcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.make_solution"]], "make_solution_from_vars() (docplex.mp.callbacks.cb_mixin.modelcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.make_solution_from_vars"]], "make_solution_from_watched() (docplex.mp.callbacks.cb_mixin.constraintcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin.make_solution_from_watched"]], "model (docplex.mp.callbacks.cb_mixin.modelcallbackmixin property)": [[7, "docplex.mp.callbacks.cb_mixin.ModelCallbackMixin.model"]], "print_called() (in module docplex.mp.callbacks.cb_mixin)": [[7, "docplex.mp.callbacks.cb_mixin.print_called"]], "register_watched_var() (docplex.mp.callbacks.cb_mixin.constraintcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin.register_watched_var"]], "register_watched_vars() (docplex.mp.callbacks.cb_mixin.constraintcallbackmixin method)": [[7, "docplex.mp.callbacks.cb_mixin.ConstraintCallbackMixin.register_watched_vars"]], "conflictrefiner (class in docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.ConflictRefiner"]], "conflictrefinerresult (class in docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult"]], "constraintsgroup (class in docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.ConstraintsGroup"]], "tconflictconstraint (in module docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.TConflictConstraint"]], "varlbconstraintwrapper (class in docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.VarLbConstraintWrapper"]], "varubconstraintwrapper (class in docplex.mp.conflict_refiner)": [[8, "docplex.mp.conflict_refiner.VarUbConstraintWrapper"]], "display() (docplex.mp.conflict_refiner.conflictrefinerresult method)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.display"]], "display_conflicts() (docplex.mp.conflict_refiner.conflictrefiner static method)": [[8, "docplex.mp.conflict_refiner.ConflictRefiner.display_conflicts"]], "display_stats() (docplex.mp.conflict_refiner.conflictrefinerresult method)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.display_stats"]], "docplex.mp.conflict_refiner": [[8, "module-docplex.mp.conflict_refiner"]], "from_var() (docplex.mp.conflict_refiner.constraintsgroup class method)": [[8, "docplex.mp.conflict_refiner.ConstraintsGroup.from_var"]], "iter_conflicts() (docplex.mp.conflict_refiner.conflictrefinerresult method)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.iter_conflicts"]], "number_of_conflicts (docplex.mp.conflict_refiner.conflictrefinerresult property)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.number_of_conflicts"]], "print_information() (docplex.mp.conflict_refiner.conflictrefinerresult method)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.print_information"]], "refine_conflict() (docplex.mp.conflict_refiner.conflictrefiner method)": [[8, "docplex.mp.conflict_refiner.ConflictRefiner.refine_conflict"]], "refined_by (docplex.mp.conflict_refiner.conflictrefinerresult property)": [[8, "docplex.mp.conflict_refiner.ConflictRefinerResult.refined_by"]], "var_bounds() (docplex.mp.conflict_refiner.conflictrefiner class method)": [[8, "docplex.mp.conflict_refiner.ConflictRefiner.var_bounds"]], "basisstatus (class in docplex.mp.constants)": [[9, "docplex.mp.constants.BasisStatus"]], "comparisontype (class in docplex.mp.constants)": [[9, "docplex.mp.constants.ComparisonType"]], "conflictstatus (class in docplex.mp.constants)": [[9, "docplex.mp.constants.ConflictStatus"]], "cplexscope (class in docplex.mp.constants)": [[9, "docplex.mp.constants.CplexScope"]], "effortlevel (class in docplex.mp.constants)": [[9, "docplex.mp.constants.EffortLevel"]], "objectivesense (class in docplex.mp.constants)": [[9, "docplex.mp.constants.ObjectiveSense"]], "qualitymetric (class in docplex.mp.constants)": [[9, "docplex.mp.constants.QualityMetric"]], "relaxationmode (class in docplex.mp.constants)": [[9, "docplex.mp.constants.RelaxationMode"]], "sostype (class in docplex.mp.constants)": [[9, "docplex.mp.constants.SOSType"]], "solveattribute (class in docplex.mp.constants)": [[9, "docplex.mp.constants.SolveAttribute"]], "updateevent (class in docplex.mp.constants)": [[9, "docplex.mp.constants.UpdateEvent"]], "varboundtype (class in docplex.mp.constants)": [[9, "docplex.mp.constants.VarBoundType"]], "writelevel (class in docplex.mp.constants)": [[9, "docplex.mp.constants.WriteLevel"]], "docplex.mp.constants": [[9, "module-docplex.mp.constants"]], "is_maximize() (docplex.mp.constants.objectivesense method)": [[9, "docplex.mp.constants.ObjectiveSense.is_maximize"]], "is_minimize() (docplex.mp.constants.objectivesense method)": [[9, "docplex.mp.constants.ObjectiveSense.is_minimize"]], "operator_symbol (docplex.mp.constants.comparisontype property)": [[9, "docplex.mp.constants.ComparisonType.operator_symbol"]], "parse() (docplex.mp.constants.objectivesense static method)": [[9, "docplex.mp.constants.ObjectiveSense.parse"]], "short_name (docplex.mp.constants.objectivesense property)": [[9, "docplex.mp.constants.ObjectiveSense.short_name"]], "verb (docplex.mp.constants.objectivesense property)": [[9, "docplex.mp.constants.ObjectiveSense.verb"]], "abstractconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.AbstractConstraint"]], "binaryconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.BinaryConstraint"]], "equivalenceconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.EquivalenceConstraint"]], "ifthenconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.IfThenConstraint"]], "indicatorconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.IndicatorConstraint"]], "linearconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.LinearConstraint"]], "logicalconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.LogicalConstraint"]], "notequalconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.NotEqualConstraint"]], "pwlconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.PwlConstraint"]], "quadraticconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.QuadraticConstraint"]], "rangeconstraint (class in docplex.mp.constr)": [[10, "docplex.mp.constr.RangeConstraint"]], "basis_status (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.basis_status"]], "basis_status (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.basis_status"]], "benders_annotation (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.benders_annotation"]], "benders_annotation (docplex.mp.constr.logicalconstraint property)": [[10, "docplex.mp.constr.LogicalConstraint.benders_annotation"]], "benders_annotation (docplex.mp.constr.quadraticconstraint property)": [[10, "docplex.mp.constr.QuadraticConstraint.benders_annotation"]], "benders_annotation (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.benders_annotation"]], "bounds (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.bounds"]], "docplex.mp.constr": [[10, "module-docplex.mp.constr"]], "dual_value (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.dual_value"]], "dual_value (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.dual_value"]], "eq() (docplex.mp.constr.linearconstraint method)": [[10, "docplex.mp.constr.LinearConstraint.eq"]], "expr (docplex.mp.constr.pwlconstraint property)": [[10, "docplex.mp.constr.PwlConstraint.expr"]], "expr (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.expr"]], "ge() (docplex.mp.constr.linearconstraint method)": [[10, "docplex.mp.constr.LinearConstraint.ge"]], "get_left_expr() (docplex.mp.constr.binaryconstraint method)": [[10, "docplex.mp.constr.BinaryConstraint.get_left_expr"]], "get_right_expr() (docplex.mp.constr.binaryconstraint method)": [[10, "docplex.mp.constr.BinaryConstraint.get_right_expr"]], "invalidate() (docplex.mp.constr.indicatorconstraint method)": [[10, "docplex.mp.constr.IndicatorConstraint.invalidate"]], "is_added() (docplex.mp.constr.abstractconstraint method)": [[10, "docplex.mp.constr.AbstractConstraint.is_added"]], "iter_variables() (docplex.mp.constr.binaryconstraint method)": [[10, "docplex.mp.constr.BinaryConstraint.iter_variables"]], "iter_variables() (docplex.mp.constr.pwlconstraint method)": [[10, "docplex.mp.constr.PwlConstraint.iter_variables"]], "iter_variables() (docplex.mp.constr.rangeconstraint method)": [[10, "docplex.mp.constr.RangeConstraint.iter_variables"]], "lb (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.lb"]], "le() (docplex.mp.constr.linearconstraint method)": [[10, "docplex.mp.constr.LinearConstraint.le"]], "left_expr (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.left_expr"]], "lhs (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.lhs"]], "pwl_func (docplex.mp.constr.pwlconstraint property)": [[10, "docplex.mp.constr.PwlConstraint.pwl_func"]], "rhs (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.rhs"]], "right_expr (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.right_expr"]], "sense (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.sense"]], "sense (docplex.mp.constr.quadraticconstraint property)": [[10, "docplex.mp.constr.QuadraticConstraint.sense"]], "set_mandatory() (docplex.mp.constr.abstractconstraint method)": [[10, "docplex.mp.constr.AbstractConstraint.set_mandatory"]], "slack_value (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.slack_value"]], "slack_value (docplex.mp.constr.quadraticconstraint property)": [[10, "docplex.mp.constr.QuadraticConstraint.slack_value"]], "slack_value (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.slack_value"]], "to_string() (docplex.mp.constr.binaryconstraint method)": [[10, "docplex.mp.constr.BinaryConstraint.to_string"]], "to_string() (docplex.mp.constr.ifthenconstraint method)": [[10, "docplex.mp.constr.IfThenConstraint.to_string"]], "to_string() (docplex.mp.constr.linearconstraint method)": [[10, "docplex.mp.constr.LinearConstraint.to_string"]], "to_string() (docplex.mp.constr.logicalconstraint method)": [[10, "docplex.mp.constr.LogicalConstraint.to_string"]], "to_string() (docplex.mp.constr.notequalconstraint method)": [[10, "docplex.mp.constr.NotEqualConstraint.to_string"]], "type (docplex.mp.constr.binaryconstraint property)": [[10, "docplex.mp.constr.BinaryConstraint.type"]], "type (docplex.mp.constr.linearconstraint property)": [[10, "docplex.mp.constr.LinearConstraint.type"]], "type (docplex.mp.constr.quadraticconstraint property)": [[10, "docplex.mp.constr.QuadraticConstraint.type"]], "ub (docplex.mp.constr.rangeconstraint property)": [[10, "docplex.mp.constr.RangeConstraint.ub"]], "y (docplex.mp.constr.pwlconstraint property)": [[10, "docplex.mp.constr.PwlConstraint.y"]], "basecontext (class in docplex.mp.context)": [[11, "docplex.mp.context.BaseContext"]], "context (class in docplex.mp.context)": [[11, "docplex.mp.context.Context"]], "contextoverride (class in docplex.mp.context)": [[11, "docplex.mp.context.ContextOverride"]], "invalidsettingsfileerror": [[11, "docplex.mp.context.InvalidSettingsFileError"]], "solvercontext (class in docplex.mp.context)": [[11, "docplex.mp.context.SolverContext"]], "auto_publish (docplex.mp.context.context.solver attribute)": [[11, "docplex.mp.context.Context.solver.auto_publish"]], "copy() (docplex.mp.context.context method)": [[11, "docplex.mp.context.Context.copy"]], "cplex_parameters (docplex.mp.context.context attribute)": [[11, "docplex.mp.context.Context.cplex_parameters"]], "docplex.mp.context": [[11, "module-docplex.mp.context"]], "filter_level (docplex.mp.context.context.solver.kpi_reporting attribute)": [[11, "docplex.mp.context.Context.solver.kpi_reporting.filter_level"]], "kpis_output (docplex.mp.context.context.solver.auto_publish attribute)": [[11, "docplex.mp.context.Context.solver.auto_publish.kpis_output"]], "kpis_output_field_name (docplex.mp.context.context.context.solver.auto_publish attribute)": [[11, "docplex.mp.context.Context.context.solver.auto_publish.kpis_output_field_name"]], "kpis_output_field_value (docplex.mp.context.context.context.solver.auto_publish attribute)": [[11, "docplex.mp.context.Context.context.solver.auto_publish.kpis_output_field_value"]], "log_output (docplex.mp.context.context.solver attribute)": [[11, "docplex.mp.context.Context.solver.log_output"]], "make_default_context() (docplex.mp.context.context static method)": [[11, "docplex.mp.context.Context.make_default_context"]], "read_settings() (docplex.mp.context.context method)": [[11, "docplex.mp.context.Context.read_settings"]], "result_output (docplex.mp.context.context.solver.auto_publish attribute)": [[11, "docplex.mp.context.Context.solver.auto_publish.result_output"]], "solve_details (docplex.mp.context.context.solver.auto_publish attribute)": [[11, "docplex.mp.context.Context.solver.auto_publish.solve_details"]], "update() (docplex.mp.context.context method)": [[11, "docplex.mp.context.Context.update"]], "var (class in docplex.mp.dvar)": [[12, "docplex.mp.dvar.Var"]], "basis_status (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.basis_status"]], "benders_annotation (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.benders_annotation"]], "docplex.mp.dvar": [[12, "module-docplex.mp.dvar"]], "equals() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.equals"]], "get_key() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.get_key"]], "is_binary() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.is_binary"]], "is_continuous() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.is_continuous"]], "is_discrete() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.is_discrete"]], "is_integer() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.is_integer"]], "iter_constraints() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.iter_constraints"]], "lb (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.lb"]], "name (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.name"]], "reduced_cost (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.reduced_cost"]], "solution_value (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.solution_value"]], "sv (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.sv"]], "to_bool() (docplex.mp.dvar.var method)": [[12, "docplex.mp.dvar.Var.to_bool"]], "ub (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.ub"]], "vartype (docplex.mp.dvar.var property)": [[12, "docplex.mp.dvar.Var.vartype"]], "environment (class in docplex.mp.environment)": [[13, "docplex.mp.environment.Environment"]], "unsupportedplatformerror": [[13, "docplex.mp.environment.UnsupportedPlatformError"]], "cplex_location (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.cplex_location"]], "docplex.mp.environment": [[13, "module-docplex.mp.environment"]], "get_cplex_module() (docplex.mp.environment.environment method)": [[13, "docplex.mp.environment.Environment.get_cplex_module"]], "has_cplex (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.has_cplex"]], "has_matplotlib (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.has_matplotlib"]], "has_numpy (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.has_numpy"]], "has_pandas (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.has_pandas"]], "is_64bit() (docplex.mp.environment.environment method)": [[13, "docplex.mp.environment.Environment.is_64bit"]], "python_version (docplex.mp.environment.environment property)": [[13, "docplex.mp.environment.Environment.python_version"]], "defaulterrorhandler (class in docplex.mp.error_handler)": [[14, "docplex.mp.error_handler.DefaultErrorHandler"]], "infolevel (class in docplex.mp.error_handler)": [[14, "docplex.mp.error_handler.InfoLevel"]], "docplex.mp.error_handler": [[14, "module-docplex.mp.error_handler"]], "decisionkpi (class in docplex.mp.kpi)": [[15, "docplex.mp.kpi.DecisionKPI"]], "functionalkpi (class in docplex.mp.kpi)": [[15, "docplex.mp.kpi.FunctionalKPI"]], "kpi (class in docplex.mp.kpi)": [[15, "docplex.mp.kpi.KPI"]], "compute() (docplex.mp.kpi.decisionkpi method)": [[15, "docplex.mp.kpi.DecisionKPI.compute"]], "docplex.mp.kpi": [[15, "module-docplex.mp.kpi"]], "get_model() (docplex.mp.kpi.decisionkpi method)": [[15, "docplex.mp.kpi.DecisionKPI.get_model"]], "get_model() (docplex.mp.kpi.functionalkpi method)": [[15, "docplex.mp.kpi.FunctionalKPI.get_model"]], "get_model() (docplex.mp.kpi.kpi method)": [[15, "docplex.mp.kpi.KPI.get_model"]], "is_decision_expression() (docplex.mp.kpi.decisionkpi method)": [[15, "docplex.mp.kpi.DecisionKPI.is_decision_expression"]], "is_decision_expression() (docplex.mp.kpi.functionalkpi method)": [[15, "docplex.mp.kpi.FunctionalKPI.is_decision_expression"]], "is_decision_expression() (docplex.mp.kpi.kpi method)": [[15, "docplex.mp.kpi.KPI.is_decision_expression"]], "abstractlinearexpr (class in docplex.mp.linear)": [[16, "docplex.mp.linear.AbstractLinearExpr"]], "constantexpr (class in docplex.mp.linear)": [[16, "docplex.mp.linear.ConstantExpr"]], "docplexquadraticarithexception": [[16, "docplex.mp.linear.DOCplexQuadraticArithException"]], "linearexpr (class in docplex.mp.linear)": [[16, "docplex.mp.linear.LinearExpr"]], "monomialexpr (class in docplex.mp.linear)": [[16, "docplex.mp.linear.MonomialExpr"]], "zeroexpr (class in docplex.mp.linear)": [[16, "docplex.mp.linear.ZeroExpr"]], "add() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.add"]], "add_term() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.add_term"]], "clone() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.clone"]], "constant (docplex.mp.linear.linearexpr property)": [[16, "docplex.mp.linear.LinearExpr.constant"]], "contains_var() (docplex.mp.linear.constantexpr method)": [[16, "docplex.mp.linear.ConstantExpr.contains_var"]], "contains_var() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.contains_var"]], "contains_var() (docplex.mp.linear.monomialexpr method)": [[16, "docplex.mp.linear.MonomialExpr.contains_var"]], "contains_var() (docplex.mp.linear.zeroexpr method)": [[16, "docplex.mp.linear.ZeroExpr.contains_var"]], "divide() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.divide"]], "docplex.mp.linear": [[16, "module-docplex.mp.linear"]], "equals() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.equals"]], "equals_constant() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.equals_constant"]], "get_coef() (docplex.mp.linear.abstractlinearexpr method)": [[16, "docplex.mp.linear.AbstractLinearExpr.get_coef"]], "is_constant() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.is_constant"]], "is_discrete() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.is_discrete"]], "iter_terms() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.iter_terms"]], "iter_variables() (docplex.mp.linear.constantexpr method)": [[16, "docplex.mp.linear.ConstantExpr.iter_variables"]], "multiply() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.multiply"]], "negate() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.negate"]], "number_of_variables() (docplex.mp.linear.constantexpr method)": [[16, "docplex.mp.linear.ConstantExpr.number_of_variables"]], "number_of_variables() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.number_of_variables"]], "number_of_variables() (docplex.mp.linear.monomialexpr method)": [[16, "docplex.mp.linear.MonomialExpr.number_of_variables"]], "number_of_variables() (docplex.mp.linear.zeroexpr method)": [[16, "docplex.mp.linear.ZeroExpr.number_of_variables"]], "plus() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.plus"]], "quotient() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.quotient"]], "remove_term() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.remove_term"]], "solution_value (docplex.mp.linear.linearexpr property)": [[16, "docplex.mp.linear.LinearExpr.solution_value"]], "subtract() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.subtract"]], "times() (docplex.mp.linear.linearexpr method)": [[16, "docplex.mp.linear.LinearExpr.times"]], "model (class in docplex.mp.model)": [[17, "docplex.mp.model.Model"]], "abs() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.abs"]], "add_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_constraint"]], "add_constraint_() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_constraint_"]], "add_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_constraints"]], "add_constraints_() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_constraints_"]], "add_equivalence() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_equivalence"]], "add_equivalence_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_equivalence_constraints"]], "add_equivalence_constraints_() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_equivalence_constraints_"]], "add_equivalences() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_equivalences"]], "add_if_then() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_if_then"]], "add_indicator() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_indicator"]], "add_indicator_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_indicator_constraints"]], "add_indicator_constraints_() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_indicator_constraints_"]], "add_indicators() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_indicators"]], "add_kpi() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_kpi"]], "add_lazy_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_lazy_constraint"]], "add_lazy_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_lazy_constraints"]], "add_mip_start() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_mip_start"]], "add_progress_listener() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_progress_listener"]], "add_quadratic_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_quadratic_constraints"]], "add_range() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_range"]], "add_sos() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_sos"]], "add_sos1() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_sos1"]], "add_sos2() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_sos2"]], "add_user_cut_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_user_cut_constraint"]], "add_user_cut_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.add_user_cut_constraints"]], "binary_var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.binary_var"]], "binary_var_cube() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.binary_var_cube"]], "binary_var_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.binary_var_dict"]], "binary_var_list() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.binary_var_list"]], "binary_var_matrix() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.binary_var_matrix"]], "binary_vartype (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.binary_vartype"]], "blended_objective_values (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.blended_objective_values"]], "build_multiobj_paramsets() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.build_multiobj_paramsets"]], "change_var_lower_bounds() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.change_var_lower_bounds"]], "change_var_types() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.change_var_types"]], "change_var_upper_bounds() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.change_var_upper_bounds"]], "clear() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear"]], "clear_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_constraints"]], "clear_kpis() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_kpis"]], "clear_lazy_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_lazy_constraints"]], "clear_mip_starts() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_mip_starts"]], "clear_multi_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_multi_objective"]], "clear_progress_listeners() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_progress_listeners"]], "clear_sos() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_sos"]], "clear_user_cut_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clear_user_cut_constraints"]], "clone() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.clone"]], "continuous_var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.continuous_var"]], "continuous_var_cube() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.continuous_var_cube"]], "continuous_var_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.continuous_var_dict"]], "continuous_var_list() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.continuous_var_list"]], "continuous_var_matrix() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.continuous_var_matrix"]], "continuous_vartype (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.continuous_vartype"]], "cplex (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.cplex"]], "create_parameter_sets() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.create_parameter_sets"]], "docplex.mp.model": [[17, "module-docplex.mp.model"]], "dot() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.dot"]], "dotf() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.dotf"]], "dual_values() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.dual_values"]], "dump_as_sav() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.dump_as_sav"]], "end() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.end"]], "eq_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.eq_constraint"]], "equivalence_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.equivalence_constraint"]], "export_as_lp() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_lp"]], "export_as_lp_string() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_lp_string"]], "export_as_mps() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_mps"]], "export_as_mps_string() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_mps_string"]], "export_as_sav() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_sav"]], "export_as_sav_string() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_sav_string"]], "export_as_savgz() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_as_savgz"]], "export_priority_order_file() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_priority_order_file"]], "export_to_stream() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.export_to_stream"]], "find_matching_linear_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.find_matching_linear_constraints"]], "find_matching_quadratic_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.find_matching_quadratic_constraints"]], "find_matching_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.find_matching_vars"]], "find_re_matching_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.find_re_matching_vars"]], "float_precision (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.float_precision"]], "ge_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.ge_constraint"]], "get_constraint_by_index() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_constraint_by_index"]], "get_constraint_by_name() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_constraint_by_name"]], "get_cplex() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_cplex"]], "get_cuts() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_cuts"]], "get_num_cuts() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_num_cuts"]], "get_objective_expr() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_objective_expr"]], "get_parameter_from_id() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_parameter_from_id"]], "get_quadratic_constraint_by_index() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_quadratic_constraint_by_index"]], "get_solve_status() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_solve_status"]], "get_time_limit() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_time_limit"]], "get_var_by_name() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.get_var_by_name"]], "has_basis() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.has_basis"]], "has_multi_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.has_multi_objective"]], "if_then() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.if_then"]], "ignore_names (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.ignore_names"]], "import_solution() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.import_solution"]], "indicator_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.indicator_constraint"]], "infinity (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.infinity"]], "init_numpy() (docplex.mp.model.model static method)": [[17, "docplex.mp.model.Model.init_numpy"]], "integer_var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.integer_var"]], "integer_var_cube() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.integer_var_cube"]], "integer_var_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.integer_var_dict"]], "integer_var_list() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.integer_var_list"]], "integer_var_matrix() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.integer_var_matrix"]], "integer_vartype (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.integer_vartype"]], "is_maximized() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.is_maximized"]], "is_minimized() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.is_minimized"]], "is_optimized() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.is_optimized"]], "iter_binary_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_binary_constraints"]], "iter_binary_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_binary_vars"]], "iter_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_constraints"]], "iter_continuous_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_continuous_vars"]], "iter_equivalence_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_equivalence_constraints"]], "iter_indicator_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_indicator_constraints"]], "iter_integer_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_integer_vars"]], "iter_kpis() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_kpis"]], "iter_lazy_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_lazy_constraints"]], "iter_linear_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_linear_constraints"]], "iter_mip_starts() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_mip_starts"]], "iter_progress_listeners() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_progress_listeners"]], "iter_pwl_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_pwl_constraints"]], "iter_pwl_functions() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_pwl_functions"]], "iter_quadratic_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_quadratic_constraints"]], "iter_range_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_range_constraints"]], "iter_semicontinuous_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_semicontinuous_vars"]], "iter_semiinteger_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_semiinteger_vars"]], "iter_sos() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_sos"]], "iter_sos1() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_sos1"]], "iter_sos2() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_sos2"]], "iter_user_cut_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_user_cut_constraints"]], "iter_variables() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.iter_variables"]], "kpi_by_name() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.kpi_by_name"]], "kpi_value_by_name() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.kpi_value_by_name"]], "kpis_as_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.kpis_as_dict"]], "le_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.le_constraint"]], "linear_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.linear_constraint"]], "linear_constraint_basis_statuses() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.linear_constraint_basis_statuses"]], "linear_expr() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.linear_expr"]], "logical_and() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.logical_and"]], "logical_not() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.logical_not"]], "logical_or() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.logical_or"]], "lp_line_length (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.lp_line_length"]], "lp_string (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.lp_string"]], "max() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.max"]], "maximize() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.maximize"]], "maximize_static_lex() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.maximize_static_lex"]], "min() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.min"]], "minimize() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.minimize"]], "minimize_static_lex() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.minimize_static_lex"]], "mip_starts (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.mip_starts"]], "multi_objective_values (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.multi_objective_values"]], "name (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.name"]], "number_of_binary_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_binary_variables"]], "number_of_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_constraints"]], "number_of_continuous_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_continuous_variables"]], "number_of_equivalence_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_equivalence_constraints"]], "number_of_indicator_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_indicator_constraints"]], "number_of_integer_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_integer_variables"]], "number_of_lazy_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_lazy_constraints"]], "number_of_linear_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_linear_constraints"]], "number_of_mip_starts (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_mip_starts"]], "number_of_progress_listeners (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_progress_listeners"]], "number_of_pwl_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_pwl_constraints"]], "number_of_quadratic_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_quadratic_constraints"]], "number_of_range_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_range_constraints"]], "number_of_semicontinuous_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_semicontinuous_variables"]], "number_of_semiinteger_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_semiinteger_variables"]], "number_of_sos (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_sos"]], "number_of_sos1 (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_sos1"]], "number_of_sos2 (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_sos2"]], "number_of_user_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_user_constraints"]], "number_of_user_cut_constraints (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_user_cut_constraints"]], "number_of_variables (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.number_of_variables"]], "objective_coef() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.objective_coef"]], "objective_expr (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.objective_expr"]], "objective_sense (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.objective_sense"]], "objective_value (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.objective_value"]], "parameters (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.parameters"]], "piecewise() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.piecewise"]], "piecewise_as_slopes() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.piecewise_as_slopes"]], "populate() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.populate"]], "populate_solution_pool() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.populate_solution_pool"]], "print_information() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.print_information"]], "print_solution() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.print_solution"]], "problem_type (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.problem_type"]], "quad_expr() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.quad_expr"]], "quadratic_dual_slacks() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.quadratic_dual_slacks"]], "quality_metrics (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.quality_metrics"]], "range_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.range_constraint"]], "read_basis_file() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.read_basis_file"]], "read_mip_starts() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.read_mip_starts"]], "read_priority_order_file() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.read_priority_order_file"]], "reduced_costs() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.reduced_costs"]], "remove() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove"]], "remove_constraint() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove_constraint"]], "remove_constraints() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove_constraints"]], "remove_kpi() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove_kpi"]], "remove_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove_objective"]], "remove_progress_listener() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.remove_progress_listener"]], "report() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.report"]], "report_kpis() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.report_kpis"]], "restore_numpy() (docplex.mp.model.model static method)": [[17, "docplex.mp.model.Model.restore_numpy"]], "round_solution (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.round_solution"]], "scal_prod() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.scal_prod"]], "scal_prod_f() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.scal_prod_f"]], "scal_prod_vars_all_different() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.scal_prod_vars_all_different"]], "semicontinuous_var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semicontinuous_var"]], "semicontinuous_var_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semicontinuous_var_dict"]], "semicontinuous_var_list() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semicontinuous_var_list"]], "semicontinuous_var_matrix() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semicontinuous_var_matrix"]], "semicontinuous_vartype (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.semicontinuous_vartype"]], "semiinteger_var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semiinteger_var"]], "semiinteger_var_dict() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semiinteger_var_dict"]], "semiinteger_var_list() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semiinteger_var_list"]], "semiinteger_var_matrix() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.semiinteger_var_matrix"]], "semiinteger_vartype (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.semiinteger_vartype"]], "set_lex_multi_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_lex_multi_objective"]], "set_lp_start_basis() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_lp_start_basis"]], "set_multi_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_multi_objective"]], "set_multi_objective_abstols() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_multi_objective_abstols"]], "set_multi_objective_exprs() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_multi_objective_exprs"]], "set_multi_objective_reltols() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_multi_objective_reltols"]], "set_objective() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_objective"]], "set_time_limit() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.set_time_limit"]], "slack_values() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.slack_values"]], "solution (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.solution"]], "solve() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.solve"]], "solve_details (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.solve_details"]], "solve_status (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.solve_status"]], "solve_with_goals() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.solve_with_goals"]], "statistics (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.statistics"]], "str_use_space (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.str_use_space"]], "sum() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sum"]], "sum_squares() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sum_squares"]], "sum_vars() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sum_vars"]], "sum_vars_all_different() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sum_vars_all_different"]], "sums() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sums"]], "sumsq() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.sumsq"]], "time_limit (docplex.mp.model.model property)": [[17, "docplex.mp.model.Model.time_limit"]], "var() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.var"]], "var_basis_statuses() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.var_basis_statuses"]], "var_hypercube() (docplex.mp.model.model method)": [[17, "docplex.mp.model.Model.var_hypercube"]], "modelreader (class in docplex.mp.model_reader)": [[18, "docplex.mp.model_reader.ModelReader"]], "modelreadererror": [[18, "docplex.mp.model_reader.ModelReaderError"]], "docplex.mp.model_reader": [[18, "module-docplex.mp.model_reader"]], "read() (docplex.mp.model_reader.modelreader class method)": [[18, "docplex.mp.model_reader.ModelReader.read"]], "read_model() (docplex.mp.model_reader.modelreader class method)": [[18, "docplex.mp.model_reader.ModelReader.read_model"]], "read_model() (in module docplex.mp.model_reader)": [[18, "docplex.mp.model_reader.read_model"]], "read_ops_file() (docplex.mp.model_reader.modelreader class method)": [[18, "docplex.mp.model_reader.ModelReader.read_ops_file"]], "read_prm() (docplex.mp.model_reader.modelreader class method)": [[18, "docplex.mp.model_reader.ModelReader.read_prm"]], "modelstatistics (class in docplex.mp.model_stats)": [[19, "docplex.mp.model_stats.ModelStatistics"]], "docplex.mp.model_stats": [[19, "module-docplex.mp.model_stats"]], "number_of_binary_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_binary_variables"]], "number_of_continuous_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_continuous_variables"]], "number_of_eq_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_eq_constraints"]], "number_of_equivalence_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_equivalence_constraints"]], "number_of_ge_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_ge_constraints"]], "number_of_indicator_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_indicator_constraints"]], "number_of_integer_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_integer_variables"]], "number_of_le_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_le_constraints"]], "number_of_linear_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_linear_constraints"]], "number_of_quadratic_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_quadratic_constraints"]], "number_of_range_constraints (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_range_constraints"]], "number_of_semicontinuous_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_semicontinuous_variables"]], "number_of_semiinteger_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_semiinteger_variables"]], "number_of_variables (docplex.mp.model_stats.modelstatistics property)": [[19, "docplex.mp.model_stats.ModelStatistics.number_of_variables"]], "print_information() (docplex.mp.model_stats.modelstatistics method)": [[19, "docplex.mp.model_stats.ModelStatistics.print_information"]], "boolparameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.BoolParameter"]], "intparameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.IntParameter"]], "numparameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.NumParameter"]], "parameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.Parameter"]], "parametergroup (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.ParameterGroup"]], "positiveintparameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.PositiveIntParameter"]], "rootparametergroup (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.RootParameterGroup"]], "strparameter (class in docplex.mp.params.parameters)": [[20, "docplex.mp.params.parameters.StrParameter"]], "accept_value() (docplex.mp.params.parameters.boolparameter method)": [[20, "docplex.mp.params.parameters.BoolParameter.accept_value"]], "accept_value() (docplex.mp.params.parameters.intparameter method)": [[20, "docplex.mp.params.parameters.IntParameter.accept_value"]], "accept_value() (docplex.mp.params.parameters.numparameter method)": [[20, "docplex.mp.params.parameters.NumParameter.accept_value"]], "accept_value() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.accept_value"]], "accept_value() (docplex.mp.params.parameters.strparameter method)": [[20, "docplex.mp.params.parameters.StrParameter.accept_value"]], "clone() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.clone"]], "cpx_id (docplex.mp.params.parameters.parameter property)": [[20, "docplex.mp.params.parameters.Parameter.cpx_id"]], "cpx_name (docplex.mp.params.parameters.parameter property)": [[20, "docplex.mp.params.parameters.Parameter.cpx_name"]], "default_value (docplex.mp.params.parameters.parameter property)": [[20, "docplex.mp.params.parameters.Parameter.default_value"]], "description (docplex.mp.params.parameters.parameter property)": [[20, "docplex.mp.params.parameters.Parameter.description"]], "docplex.mp.params.parameters": [[20, "module-docplex.mp.params.parameters"]], "export_prm() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.export_prm"]], "export_prm_to_string() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.export_prm_to_string"]], "generate_nondefault_params() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.generate_nondefault_params"]], "generate_params() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.generate_params"]], "get() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.get"]], "is_default() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.is_default"]], "is_nondefault() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.is_nondefault"]], "is_root() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.is_root"]], "is_root() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.is_root"]], "iter_params() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.iter_params"]], "name (docplex.mp.params.parameters.parametergroup property)": [[20, "docplex.mp.params.parameters.ParameterGroup.name"]], "number_of_params (docplex.mp.params.parameters.parametergroup property)": [[20, "docplex.mp.params.parameters.ParameterGroup.number_of_params"]], "number_of_subgroups (docplex.mp.params.parameters.parametergroup property)": [[20, "docplex.mp.params.parameters.ParameterGroup.number_of_subgroups"]], "parent_group (docplex.mp.params.parameters.parametergroup property)": [[20, "docplex.mp.params.parameters.ParameterGroup.parent_group"]], "print_info_to_stream() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.print_info_to_stream"]], "print_info_to_string() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.print_info_to_string"]], "qualified_name (docplex.mp.params.parameters.parameter property)": [[20, "docplex.mp.params.parameters.Parameter.qualified_name"]], "qualified_name() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.qualified_name"]], "qualified_name() (docplex.mp.params.parameters.rootparametergroup method)": [[20, "docplex.mp.params.parameters.RootParameterGroup.qualified_name"]], "reset() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.reset"]], "reset() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.reset"]], "set() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.set"]], "to_string() (docplex.mp.params.parameters.parameter method)": [[20, "docplex.mp.params.parameters.Parameter.to_string"]], "to_string() (docplex.mp.params.parameters.strparameter method)": [[20, "docplex.mp.params.parameters.StrParameter.to_string"]], "total_number_of_params() (docplex.mp.params.parameters.parametergroup method)": [[20, "docplex.mp.params.parameters.ParameterGroup.total_number_of_params"]], "priority (class in docplex.mp.priority)": [[21, "docplex.mp.priority.Priority"]], "docplex.mp.priority": [[21, "module-docplex.mp.priority"]], "parse() (docplex.mp.priority.priority class method)": [[21, "docplex.mp.priority.Priority.parse"]], "functionalsolutionlistener (class in docplex.mp.progress)": [[22, "docplex.mp.progress.FunctionalSolutionListener"]], "kpilistener (class in docplex.mp.progress)": [[22, "docplex.mp.progress.KpiListener"]], "kpiprinter (class in docplex.mp.progress)": [[22, "docplex.mp.progress.KpiPrinter"]], "progressclock (class in docplex.mp.progress)": [[22, "docplex.mp.progress.ProgressClock"]], "progressdata (class in docplex.mp.progress)": [[22, "docplex.mp.progress.ProgressData"]], "progressdatarecorder (class in docplex.mp.progress)": [[22, "docplex.mp.progress.ProgressDataRecorder"]], "progresslistener (class in docplex.mp.progress)": [[22, "docplex.mp.progress.ProgressListener"]], "solutionlistener (class in docplex.mp.progress)": [[22, "docplex.mp.progress.SolutionListener"]], "solutionrecorder (class in docplex.mp.progress)": [[22, "docplex.mp.progress.SolutionRecorder"]], "textprogresslistener (class in docplex.mp.progress)": [[22, "docplex.mp.progress.TextProgressListener"]], "abort() (docplex.mp.progress.progresslistener method)": [[22, "docplex.mp.progress.ProgressListener.abort"]], "best_bound (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.best_bound"]], "clock (docplex.mp.progress.progresslistener property)": [[22, "docplex.mp.progress.ProgressListener.clock"]], "current_nb_iterations (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.current_nb_iterations"]], "current_nb_nodes (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.current_nb_nodes"]], "current_objective (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.current_objective"]], "current_progress_data (docplex.mp.progress.progresslistener property)": [[22, "docplex.mp.progress.ProgressListener.current_progress_data"]], "det_time (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.det_time"]], "docplex.mp.progress": [[22, "module-docplex.mp.progress"]], "has_incumbent (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.has_incumbent"]], "iter_recorded (docplex.mp.progress.progressdatarecorder property)": [[22, "docplex.mp.progress.ProgressDataRecorder.iter_recorded"]], "iter_solutions() (docplex.mp.progress.solutionrecorder method)": [[22, "docplex.mp.progress.SolutionRecorder.iter_solutions"]], "mip_gap (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.mip_gap"]], "notify_end() (docplex.mp.progress.progresslistener method)": [[22, "docplex.mp.progress.ProgressListener.notify_end"]], "notify_progress() (docplex.mp.progress.progressdatarecorder method)": [[22, "docplex.mp.progress.ProgressDataRecorder.notify_progress"]], "notify_progress() (docplex.mp.progress.progresslistener method)": [[22, "docplex.mp.progress.ProgressListener.notify_progress"]], "notify_progress() (docplex.mp.progress.textprogresslistener method)": [[22, "docplex.mp.progress.TextProgressListener.notify_progress"]], "notify_solution() (docplex.mp.progress.functionalsolutionlistener method)": [[22, "docplex.mp.progress.FunctionalSolutionListener.notify_solution"]], "notify_solution() (docplex.mp.progress.kpilistener method)": [[22, "docplex.mp.progress.KpiListener.notify_solution"]], "notify_solution() (docplex.mp.progress.progresslistener method)": [[22, "docplex.mp.progress.ProgressListener.notify_solution"]], "notify_solution() (docplex.mp.progress.solutionlistener method)": [[22, "docplex.mp.progress.SolutionListener.notify_solution"]], "notify_solution() (docplex.mp.progress.solutionrecorder method)": [[22, "docplex.mp.progress.SolutionRecorder.notify_solution"]], "notify_start() (docplex.mp.progress.progressdatarecorder method)": [[22, "docplex.mp.progress.ProgressDataRecorder.notify_start"]], "notify_start() (docplex.mp.progress.progresslistener method)": [[22, "docplex.mp.progress.ProgressListener.notify_start"]], "notify_start() (docplex.mp.progress.solutionlistener method)": [[22, "docplex.mp.progress.SolutionListener.notify_start"]], "notify_start() (docplex.mp.progress.solutionrecorder method)": [[22, "docplex.mp.progress.SolutionRecorder.notify_start"]], "notify_start() (docplex.mp.progress.textprogresslistener method)": [[22, "docplex.mp.progress.TextProgressListener.notify_start"]], "number_of_solutions (docplex.mp.progress.solutionrecorder property)": [[22, "docplex.mp.progress.SolutionRecorder.number_of_solutions"]], "publish() (docplex.mp.progress.kpilistener method)": [[22, "docplex.mp.progress.KpiListener.publish"]], "publish() (docplex.mp.progress.kpiprinter method)": [[22, "docplex.mp.progress.KpiPrinter.publish"]], "recorded (docplex.mp.progress.progressdatarecorder property)": [[22, "docplex.mp.progress.ProgressDataRecorder.recorded"]], "remaining_nb_nodes (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.remaining_nb_nodes"]], "time (docplex.mp.progress.progressdata attribute)": [[22, "docplex.mp.progress.ProgressData.time"]], "publishresultasdf (class in docplex.mp.publish)": [[23, "docplex.mp.publish.PublishResultAsDf"]], "docplex.mp.publish": [[23, "module-docplex.mp.publish"]], "write_output_table() (docplex.mp.publish.publishresultasdf method)": [[23, "docplex.mp.publish.PublishResultAsDf.write_output_table"]], "pwlfunction (class in docplex.mp.pwl)": [[24, "docplex.mp.pwl.PwlFunction"]], "add() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.add"]], "clone() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.clone"]], "divide() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.divide"]], "docplex.mp.pwl": [[24, "module-docplex.mp.pwl"]], "evaluate() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.evaluate"]], "multiply() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.multiply"]], "plot() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.plot"]], "subtract() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.subtract"]], "translate() (docplex.mp.pwl.pwlfunction method)": [[24, "docplex.mp.pwl.PwlFunction.translate"]], "quadexpr (class in docplex.mp.quad)": [[25, "docplex.mp.quad.QuadExpr"]], "clone() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.clone"]], "constant (docplex.mp.quad.quadexpr property)": [[25, "docplex.mp.quad.QuadExpr.constant"]], "contains_var() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.contains_var"]], "docplex.mp.quad": [[25, "module-docplex.mp.quad"]], "get_quadratic_coefficient() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.get_quadratic_coefficient"]], "has_quadratic_term() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.has_quadratic_term"]], "is_quad_expr() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.is_quad_expr"]], "is_separable() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.is_separable"]], "iter_quad_triplets() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.iter_quad_triplets"]], "iter_terms() (docplex.mp.quad.quadexpr method)": [[25, "docplex.mp.quad.QuadExpr.iter_terms"]], "linear_part (docplex.mp.quad.quadexpr property)": [[25, "docplex.mp.quad.QuadExpr.linear_part"]], "number_of_quadratic_terms (docplex.mp.quad.quadexpr property)": [[25, "docplex.mp.quad.QuadExpr.number_of_quadratic_terms"]], "linearrelaxer (class in docplex.mp.relax_linear)": [[26, "docplex.mp.relax_linear.LinearRelaxer"]], "docplex.mp.relax_linear": [[26, "module-docplex.mp.relax_linear"]], "linear_relaxation() (docplex.mp.relax_linear.linearrelaxer method)": [[26, "docplex.mp.relax_linear.LinearRelaxer.linear_relaxation"]], "amount (docplex.mp.relaxer.toutputtables attribute)": [[27, "docplex.mp.relaxer.TOutputTables.Amount"]], "constraint (docplex.mp.relaxer.toutputtables attribute)": [[27, "docplex.mp.relaxer.TOutputTables.Constraint"]], "functionalprioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.FunctionalPrioritizer"]], "mappingprioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.MappingPrioritizer"]], "matchnameprioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.MatchNamePrioritizer"]], "namedprioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.NamedPrioritizer"]], "prioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.Prioritizer"]], "priority (docplex.mp.relaxer.toutputtables attribute)": [[27, "docplex.mp.relaxer.TOutputTables.Priority"]], "relaxer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.Relaxer"]], "toutputtables (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.TOutputTables"]], "uniformprioritizer (class in docplex.mp.relaxer)": [[27, "docplex.mp.relaxer.UniformPrioritizer"]], "docplex.mp.relaxer": [[27, "module-docplex.mp.relaxer"]], "get_priority() (docplex.mp.relaxer.matchnameprioritizer method)": [[27, "docplex.mp.relaxer.MatchNamePrioritizer.get_priority"]], "get_relaxation() (docplex.mp.relaxer.relaxer method)": [[27, "docplex.mp.relaxer.Relaxer.get_relaxation"]], "is_relaxed() (docplex.mp.relaxer.relaxer method)": [[27, "docplex.mp.relaxer.Relaxer.is_relaxed"]], "iter_relaxations() (docplex.mp.relaxer.relaxer method)": [[27, "docplex.mp.relaxer.Relaxer.iter_relaxations"]], "number_of_relaxations (docplex.mp.relaxer.relaxer property)": [[27, "docplex.mp.relaxer.Relaxer.number_of_relaxations"]], "relax() (docplex.mp.relaxer.relaxer method)": [[27, "docplex.mp.relaxer.Relaxer.relax"]], "relaxations() (docplex.mp.relaxer.relaxer method)": [[27, "docplex.mp.relaxer.Relaxer.relaxations"]], "relaxed_objective_value (docplex.mp.relaxer.relaxer property)": [[27, "docplex.mp.relaxer.Relaxer.relaxed_objective_value"]], "solvedetails (class in docplex.mp.sdetails)": [[28, "docplex.mp.sdetails.SolveDetails"]], "best_bound (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.best_bound"]], "columns (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.columns"]], "deterministic_time (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.deterministic_time"]], "dettime (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.dettime"]], "docplex.mp.sdetails": [[28, "module-docplex.mp.sdetails"]], "gap (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.gap"]], "has_hit_limit() (docplex.mp.sdetails.solvedetails method)": [[28, "docplex.mp.sdetails.SolveDetails.has_hit_limit"]], "mip_relative_gap (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.mip_relative_gap"]], "nb_iterations (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.nb_iterations"]], "nb_linear_nonzeros (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.nb_linear_nonzeros"]], "nb_nodes_processed (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.nb_nodes_processed"]], "problem_type (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.problem_type"]], "status (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.status"]], "status_code (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.status_code"]], "time (docplex.mp.sdetails.solvedetails property)": [[28, "docplex.mp.sdetails.SolveDetails.time"]], "solutionpool (class in docplex.mp.solution)": [[29, "docplex.mp.solution.SolutionPool"]], "solvesolution (class in docplex.mp.solution)": [[29, "docplex.mp.solution.SolveSolution"]], "add_var_value() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.add_var_value"]], "as_df() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.as_df"]], "check_as_mip_start() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.check_as_mip_start"]], "clear() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.clear"]], "contains() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.contains"]], "describe_objectives() (docplex.mp.solution.solutionpool method)": [[29, "docplex.mp.solution.SolutionPool.describe_objectives"]], "docplex.mp.solution": [[29, "module-docplex.mp.solution"]], "export() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.export"]], "export_as_json_string() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.export_as_json_string"]], "export_as_mst() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.export_as_mst"]], "export_as_sol() (docplex.mp.solution.solutionpool method)": [[29, "docplex.mp.solution.SolutionPool.export_as_sol"]], "export_as_sol() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.export_as_sol"]], "from_file() (docplex.mp.solution.solvesolution class method)": [[29, "docplex.mp.solution.SolveSolution.from_file"]], "get_blended_objective_value_by_priority() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_blended_objective_value_by_priority"]], "get_cuts() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_cuts"]], "get_dual_values() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_dual_values"]], "get_num_cuts() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_num_cuts"]], "get_objective_value() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_objective_value"]], "get_reduced_costs() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_reduced_costs"]], "get_sensitivity() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_sensitivity"]], "get_slacks() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_slacks"]], "get_status() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_status"]], "get_value() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_value"]], "get_value_df() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_value_df"]], "get_value_dict() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_value_dict"]], "get_value_list() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_value_list"]], "get_values() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.get_values"]], "has_objective() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.has_objective"]], "is_empty() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.is_empty"]], "is_feasible_solution() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.is_feasible_solution"]], "is_valid_solution() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.is_valid_solution"]], "iter_var_values() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.iter_var_values"]], "iter_variables() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.iter_variables"]], "kpi_value_by_name() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.kpi_value_by_name"]], "mean_objective_value (docplex.mp.solution.solutionpool property)": [[29, "docplex.mp.solution.SolutionPool.mean_objective_value"]], "model (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.model"]], "multi_objective_values (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.multi_objective_values"]], "name (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.name"]], "number_of_var_values (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.number_of_var_values"]], "objective_value (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.objective_value"]], "print_mst() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.print_mst"]], "set_objective_value() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.set_objective_value"]], "size (docplex.mp.solution.solutionpool property)": [[29, "docplex.mp.solution.SolutionPool.size"]], "size (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.size"]], "slack_value() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.slack_value"]], "solve_details (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.solve_details"]], "solved_by (docplex.mp.solution.solvesolution property)": [[29, "docplex.mp.solution.SolveSolution.solved_by"]], "stats (docplex.mp.solution.solutionpool property)": [[29, "docplex.mp.solution.SolutionPool.stats"]], "update() (docplex.mp.solution.solvesolution method)": [[29, "docplex.mp.solution.SolveSolution.update"]], "sosvariableset (class in docplex.mp.sosvarset)": [[30, "docplex.mp.sosvarset.SOSVariableSet"]], "special ordered sets": [[30, "index-0"]], "benders_annotation (docplex.mp.sosvarset.sosvariableset property)": [[30, "docplex.mp.sosvarset.SOSVariableSet.benders_annotation"]], "docplex.mp.sosvarset": [[30, "module-docplex.mp.sosvarset"]], "iter_variables() (docplex.mp.sosvarset.sosvariableset method)": [[30, "docplex.mp.sosvarset.SOSVariableSet.iter_variables"]], "sos_type (docplex.mp.sosvarset.sosvariableset property)": [[30, "docplex.mp.sosvarset.SOSVariableSet.sos_type"]], "to_string() (docplex.mp.sosvarset.sosvariableset method)": [[30, "docplex.mp.sosvarset.SOSVariableSet.to_string"]], "binaryvartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.BinaryVarType"]], "continuousvartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.ContinuousVarType"]], "integervartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.IntegerVarType"]], "semicontinuousvartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.SemiContinuousVarType"]], "semiintegervartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.SemiIntegerVarType"]], "vartype (class in docplex.mp.vartype)": [[31, "docplex.mp.vartype.VarType"]], "cplex_typecode (docplex.mp.vartype.vartype property)": [[31, "docplex.mp.vartype.VarType.cplex_typecode"]], "default_lb (docplex.mp.vartype.semicontinuousvartype property)": [[31, "docplex.mp.vartype.SemiContinuousVarType.default_lb"]], "default_lb (docplex.mp.vartype.semiintegervartype property)": [[31, "docplex.mp.vartype.SemiIntegerVarType.default_lb"]], "default_lb (docplex.mp.vartype.vartype property)": [[31, "docplex.mp.vartype.VarType.default_lb"]], "default_ub (docplex.mp.vartype.vartype property)": [[31, "docplex.mp.vartype.VarType.default_ub"]], "docplex.mp.vartype": [[31, "module-docplex.mp.vartype"]], "is_discrete() (docplex.mp.vartype.binaryvartype method)": [[31, "docplex.mp.vartype.BinaryVarType.is_discrete"]], "is_discrete() (docplex.mp.vartype.continuousvartype method)": [[31, "docplex.mp.vartype.ContinuousVarType.is_discrete"]], "is_discrete() (docplex.mp.vartype.integervartype method)": [[31, "docplex.mp.vartype.IntegerVarType.is_discrete"]], "is_discrete() (docplex.mp.vartype.semicontinuousvartype method)": [[31, "docplex.mp.vartype.SemiContinuousVarType.is_discrete"]], "is_discrete() (docplex.mp.vartype.semiintegervartype method)": [[31, "docplex.mp.vartype.SemiIntegerVarType.is_discrete"]], "is_discrete() (docplex.mp.vartype.vartype method)": [[31, "docplex.mp.vartype.VarType.is_discrete"]], "semi-continuous": [[31, "index-0"]], "semi-integer": [[31, "index-1"]], "short_name (docplex.mp.vartype.vartype property)": [[31, "docplex.mp.vartype.VarType.short_name"]], "to_string() (docplex.mp.vartype.vartype method)": [[31, "docplex.mp.vartype.VarType.to_string"]], "docplex.mp.with_funcs": [[32, "module-docplex.mp.with_funcs"]], "model_objective() (in module docplex.mp.with_funcs)": [[32, "docplex.mp.with_funcs.model_objective"]], "model_parameters() (in module docplex.mp.with_funcs)": [[32, "docplex.mp.with_funcs.model_parameters"]], "model_solvefixed() (in module docplex.mp.with_funcs)": [[32, "docplex.mp.with_funcs.model_solvefixed"]], "docplex.util.csv_utils": [[33, "module-docplex.util.csv_utils"]], "encode_csv_string() (in module docplex.util.csv_utils)": [[33, "docplex.util.csv_utils.encode_csv_string"]], "write_table_as_csv() (in module docplex.util.csv_utils)": [[33, "docplex.util.csv_utils.write_table_as_csv"]], "abstractlocalenvironment (class in docplex.util.environment)": [[34, "docplex.util.environment.AbstractLocalEnvironment"]], "environment (class in docplex.util.environment)": [[34, "docplex.util.environment.Environment"]], "localenvironment (class in docplex.util.environment)": [[34, "docplex.util.environment.LocalEnvironment"]], "notavailableerror": [[34, "docplex.util.environment.NotAvailableError"]], "outputattachmenttransaction (class in docplex.util.environment)": [[34, "docplex.util.environment.OutputAttachmentTransaction"]], "overrideenvironment (class in docplex.util.environment)": [[34, "docplex.util.environment.OverrideEnvironment"]], "solvedetailsfilter (class in docplex.util.environment)": [[34, "docplex.util.environment.SolveDetailsFilter"]], "abort_callbacks (docplex.util.environment.environment attribute)": [[34, "docplex.util.environment.Environment.abort_callbacks"]], "add_abort_callback() (in module docplex.util.environment)": [[34, "docplex.util.environment.add_abort_callback"]], "close() (docplex.util.environment.outputattachmenttransaction method)": [[34, "docplex.util.environment.OutputAttachmentTransaction.close"]], "commit() (docplex.util.environment.outputattachmenttransaction method)": [[34, "docplex.util.environment.OutputAttachmentTransaction.commit"]], "create_transaction() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.create_transaction"]], "default_solution_storage_handler() (in module docplex.util.environment)": [[34, "docplex.util.environment.default_solution_storage_handler"]], "docplex.util.environment": [[34, "module-docplex.util.environment"]], "filter() (docplex.util.environment.solvedetailsfilter method)": [[34, "docplex.util.environment.SolveDetailsFilter.filter"]], "get_available_core_count() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.get_available_core_count"]], "get_available_core_count() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_available_core_count"]], "get_available_core_count() (in module docplex.util.environment)": [[34, "docplex.util.environment.get_available_core_count"]], "get_engine_log_level() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_engine_log_level"]], "get_environment() (in module docplex.util.environment)": [[34, "docplex.util.environment.get_environment"]], "get_input_stream() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.get_input_stream"]], "get_input_stream() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_input_stream"]], "get_input_stream() (in module docplex.util.environment)": [[34, "docplex.util.environment.get_input_stream"]], "get_output_stream() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.get_output_stream"]], "get_output_stream() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_output_stream"]], "get_output_stream() (in module docplex.util.environment)": [[34, "docplex.util.environment.get_output_stream"]], "get_parameter() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.get_parameter"]], "get_parameter() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_parameter"]], "get_parameter() (in module docplex.util.environment)": [[34, "docplex.util.environment.get_parameter"]], "get_parameters() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.get_parameters"]], "get_parameters() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_parameters"]], "get_stop_callback() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.get_stop_callback"]], "is_debug_mode() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.is_debug_mode"]], "make_attachment_name() (in module docplex.util.environment)": [[34, "docplex.util.environment.make_attachment_name"]], "maketrans() (in module docplex.util.environment)": [[34, "docplex.util.environment.maketrans"]], "publish_solve_details() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.publish_solve_details"]], "read_df() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.read_df"]], "read_df() (in module docplex.util.environment)": [[34, "docplex.util.environment.read_df"]], "record_history_fields (docplex.util.environment.environment attribute)": [[34, "docplex.util.environment.Environment.record_history_fields"]], "record_history_size (docplex.util.environment.environment attribute)": [[34, "docplex.util.environment.Environment.record_history_size"]], "record_interval (docplex.util.environment.environment attribute)": [[34, "docplex.util.environment.Environment.record_interval"]], "remove_abort_callback() (in module docplex.util.environment)": [[34, "docplex.util.environment.remove_abort_callback"]], "set_output_attachment() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.set_output_attachment"]], "set_output_attachment() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.set_output_attachment"]], "set_output_attachment() (in module docplex.util.environment)": [[34, "docplex.util.environment.set_output_attachment"]], "set_output_attachments() (docplex.util.environment.abstractlocalenvironment method)": [[34, "docplex.util.environment.AbstractLocalEnvironment.set_output_attachments"]], "set_output_attachments() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.set_output_attachments"]], "set_output_attachments() (docplex.util.environment.outputattachmenttransaction method)": [[34, "docplex.util.environment.OutputAttachmentTransaction.set_output_attachments"]], "set_output_attachments() (in module docplex.util.environment)": [[34, "docplex.util.environment.set_output_attachments"]], "set_stop_callback() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.set_stop_callback"]], "solution_storage_handler (docplex.util.environment.environment attribute)": [[34, "docplex.util.environment.Environment.solution_storage_handler"]], "stop_callback (docplex.util.environment.environment property)": [[34, "docplex.util.environment.Environment.stop_callback"]], "store_solution() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.store_solution"]], "translate() (in module docplex.util.environment)": [[34, "docplex.util.environment.translate"]], "update_solve_details() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.update_solve_details"]], "update_solve_details() (in module docplex.util.environment)": [[34, "docplex.util.environment.update_solve_details"]], "write_df() (docplex.util.environment.environment method)": [[34, "docplex.util.environment.Environment.write_df"]], "write_df() (in module docplex.util.environment)": [[34, "docplex.util.environment.write_df"]]}})